Search.setIndex({docnames:["development/contributing","development/debugging","development/index","development/setting_ide","development/testing","getting_started/index","getting_started/install","getting_started/quickstart","index","migration_guide/index","migration_guide/pyspark_1.0_1.2_to_1.3","migration_guide/pyspark_1.4_to_1.5","migration_guide/pyspark_2.2_to_2.3","migration_guide/pyspark_2.3.0_to_2.3.1_above","migration_guide/pyspark_2.3_to_2.4","migration_guide/pyspark_2.4_to_3.0","reference/api/pyspark.Accumulator","reference/api/pyspark.Accumulator.add","reference/api/pyspark.Accumulator.value","reference/api/pyspark.AccumulatorParam","reference/api/pyspark.AccumulatorParam.addInPlace","reference/api/pyspark.AccumulatorParam.zero","reference/api/pyspark.BarrierTaskContext","reference/api/pyspark.BarrierTaskContext.allGather","reference/api/pyspark.BarrierTaskContext.attemptNumber","reference/api/pyspark.BarrierTaskContext.barrier","reference/api/pyspark.BarrierTaskContext.get","reference/api/pyspark.BarrierTaskContext.getLocalProperty","reference/api/pyspark.BarrierTaskContext.getTaskInfos","reference/api/pyspark.BarrierTaskContext.partitionId","reference/api/pyspark.BarrierTaskContext.resources","reference/api/pyspark.BarrierTaskContext.stageId","reference/api/pyspark.BarrierTaskContext.taskAttemptId","reference/api/pyspark.BarrierTaskInfo","reference/api/pyspark.Broadcast","reference/api/pyspark.Broadcast.destroy","reference/api/pyspark.Broadcast.dump","reference/api/pyspark.Broadcast.load","reference/api/pyspark.Broadcast.load_from_path","reference/api/pyspark.Broadcast.unpersist","reference/api/pyspark.Broadcast.value","reference/api/pyspark.InheritableThread","reference/api/pyspark.RDD","reference/api/pyspark.RDD.aggregate","reference/api/pyspark.RDD.aggregateByKey","reference/api/pyspark.RDD.barrier","reference/api/pyspark.RDD.cache","reference/api/pyspark.RDD.cartesian","reference/api/pyspark.RDD.checkpoint","reference/api/pyspark.RDD.coalesce","reference/api/pyspark.RDD.cogroup","reference/api/pyspark.RDD.collect","reference/api/pyspark.RDD.collectAsMap","reference/api/pyspark.RDD.collectWithJobGroup","reference/api/pyspark.RDD.combineByKey","reference/api/pyspark.RDD.context","reference/api/pyspark.RDD.count","reference/api/pyspark.RDD.countApprox","reference/api/pyspark.RDD.countApproxDistinct","reference/api/pyspark.RDD.countByKey","reference/api/pyspark.RDD.countByValue","reference/api/pyspark.RDD.distinct","reference/api/pyspark.RDD.filter","reference/api/pyspark.RDD.first","reference/api/pyspark.RDD.flatMap","reference/api/pyspark.RDD.flatMapValues","reference/api/pyspark.RDD.fold","reference/api/pyspark.RDD.foldByKey","reference/api/pyspark.RDD.foreach","reference/api/pyspark.RDD.foreachPartition","reference/api/pyspark.RDD.fullOuterJoin","reference/api/pyspark.RDD.getCheckpointFile","reference/api/pyspark.RDD.getNumPartitions","reference/api/pyspark.RDD.getResourceProfile","reference/api/pyspark.RDD.getStorageLevel","reference/api/pyspark.RDD.glom","reference/api/pyspark.RDD.groupBy","reference/api/pyspark.RDD.groupByKey","reference/api/pyspark.RDD.groupWith","reference/api/pyspark.RDD.histogram","reference/api/pyspark.RDD.id","reference/api/pyspark.RDD.intersection","reference/api/pyspark.RDD.isCheckpointed","reference/api/pyspark.RDD.isEmpty","reference/api/pyspark.RDD.isLocallyCheckpointed","reference/api/pyspark.RDD.join","reference/api/pyspark.RDD.keyBy","reference/api/pyspark.RDD.keys","reference/api/pyspark.RDD.leftOuterJoin","reference/api/pyspark.RDD.localCheckpoint","reference/api/pyspark.RDD.lookup","reference/api/pyspark.RDD.map","reference/api/pyspark.RDD.mapPartitions","reference/api/pyspark.RDD.mapPartitionsWithIndex","reference/api/pyspark.RDD.mapPartitionsWithSplit","reference/api/pyspark.RDD.mapValues","reference/api/pyspark.RDD.max","reference/api/pyspark.RDD.mean","reference/api/pyspark.RDD.meanApprox","reference/api/pyspark.RDD.min","reference/api/pyspark.RDD.name","reference/api/pyspark.RDD.partitionBy","reference/api/pyspark.RDD.persist","reference/api/pyspark.RDD.pipe","reference/api/pyspark.RDD.randomSplit","reference/api/pyspark.RDD.reduce","reference/api/pyspark.RDD.reduceByKey","reference/api/pyspark.RDD.reduceByKeyLocally","reference/api/pyspark.RDD.repartition","reference/api/pyspark.RDD.repartitionAndSortWithinPartitions","reference/api/pyspark.RDD.rightOuterJoin","reference/api/pyspark.RDD.sample","reference/api/pyspark.RDD.sampleByKey","reference/api/pyspark.RDD.sampleStdev","reference/api/pyspark.RDD.sampleVariance","reference/api/pyspark.RDD.saveAsHadoopDataset","reference/api/pyspark.RDD.saveAsHadoopFile","reference/api/pyspark.RDD.saveAsNewAPIHadoopDataset","reference/api/pyspark.RDD.saveAsNewAPIHadoopFile","reference/api/pyspark.RDD.saveAsPickleFile","reference/api/pyspark.RDD.saveAsSequenceFile","reference/api/pyspark.RDD.saveAsTextFile","reference/api/pyspark.RDD.setName","reference/api/pyspark.RDD.sortBy","reference/api/pyspark.RDD.sortByKey","reference/api/pyspark.RDD.stats","reference/api/pyspark.RDD.stdev","reference/api/pyspark.RDD.subtract","reference/api/pyspark.RDD.subtractByKey","reference/api/pyspark.RDD.sum","reference/api/pyspark.RDD.sumApprox","reference/api/pyspark.RDD.take","reference/api/pyspark.RDD.takeOrdered","reference/api/pyspark.RDD.takeSample","reference/api/pyspark.RDD.toDebugString","reference/api/pyspark.RDD.toLocalIterator","reference/api/pyspark.RDD.top","reference/api/pyspark.RDD.treeAggregate","reference/api/pyspark.RDD.treeReduce","reference/api/pyspark.RDD.union","reference/api/pyspark.RDD.unpersist","reference/api/pyspark.RDD.values","reference/api/pyspark.RDD.variance","reference/api/pyspark.RDD.withResources","reference/api/pyspark.RDD.zip","reference/api/pyspark.RDD.zipWithIndex","reference/api/pyspark.RDD.zipWithUniqueId","reference/api/pyspark.RDDBarrier","reference/api/pyspark.RDDBarrier.mapPartitions","reference/api/pyspark.RDDBarrier.mapPartitionsWithIndex","reference/api/pyspark.SparkConf","reference/api/pyspark.SparkConf.contains","reference/api/pyspark.SparkConf.get","reference/api/pyspark.SparkConf.getAll","reference/api/pyspark.SparkConf.set","reference/api/pyspark.SparkConf.setAll","reference/api/pyspark.SparkConf.setAppName","reference/api/pyspark.SparkConf.setExecutorEnv","reference/api/pyspark.SparkConf.setIfMissing","reference/api/pyspark.SparkConf.setMaster","reference/api/pyspark.SparkConf.setSparkHome","reference/api/pyspark.SparkConf.toDebugString","reference/api/pyspark.SparkContext","reference/api/pyspark.SparkContext.PACKAGE_EXTENSIONS","reference/api/pyspark.SparkContext.accumulator","reference/api/pyspark.SparkContext.addFile","reference/api/pyspark.SparkContext.addPyFile","reference/api/pyspark.SparkContext.applicationId","reference/api/pyspark.SparkContext.binaryFiles","reference/api/pyspark.SparkContext.binaryRecords","reference/api/pyspark.SparkContext.broadcast","reference/api/pyspark.SparkContext.cancelAllJobs","reference/api/pyspark.SparkContext.cancelJobGroup","reference/api/pyspark.SparkContext.defaultMinPartitions","reference/api/pyspark.SparkContext.defaultParallelism","reference/api/pyspark.SparkContext.dump_profiles","reference/api/pyspark.SparkContext.emptyRDD","reference/api/pyspark.SparkContext.getCheckpointDir","reference/api/pyspark.SparkContext.getConf","reference/api/pyspark.SparkContext.getLocalProperty","reference/api/pyspark.SparkContext.getOrCreate","reference/api/pyspark.SparkContext.hadoopFile","reference/api/pyspark.SparkContext.hadoopRDD","reference/api/pyspark.SparkContext.newAPIHadoopFile","reference/api/pyspark.SparkContext.newAPIHadoopRDD","reference/api/pyspark.SparkContext.parallelize","reference/api/pyspark.SparkContext.pickleFile","reference/api/pyspark.SparkContext.range","reference/api/pyspark.SparkContext.resources","reference/api/pyspark.SparkContext.runJob","reference/api/pyspark.SparkContext.sequenceFile","reference/api/pyspark.SparkContext.setCheckpointDir","reference/api/pyspark.SparkContext.setJobDescription","reference/api/pyspark.SparkContext.setJobGroup","reference/api/pyspark.SparkContext.setLocalProperty","reference/api/pyspark.SparkContext.setLogLevel","reference/api/pyspark.SparkContext.setSystemProperty","reference/api/pyspark.SparkContext.show_profiles","reference/api/pyspark.SparkContext.sparkUser","reference/api/pyspark.SparkContext.startTime","reference/api/pyspark.SparkContext.statusTracker","reference/api/pyspark.SparkContext.stop","reference/api/pyspark.SparkContext.textFile","reference/api/pyspark.SparkContext.uiWebUrl","reference/api/pyspark.SparkContext.union","reference/api/pyspark.SparkContext.version","reference/api/pyspark.SparkContext.wholeTextFiles","reference/api/pyspark.SparkFiles","reference/api/pyspark.SparkFiles.get","reference/api/pyspark.SparkFiles.getRootDirectory","reference/api/pyspark.StorageLevel","reference/api/pyspark.StorageLevel.DISK_ONLY","reference/api/pyspark.StorageLevel.DISK_ONLY_2","reference/api/pyspark.StorageLevel.DISK_ONLY_3","reference/api/pyspark.StorageLevel.MEMORY_AND_DISK","reference/api/pyspark.StorageLevel.MEMORY_AND_DISK_2","reference/api/pyspark.StorageLevel.MEMORY_ONLY","reference/api/pyspark.StorageLevel.MEMORY_ONLY_2","reference/api/pyspark.StorageLevel.OFF_HEAP","reference/api/pyspark.TaskContext","reference/api/pyspark.TaskContext.attemptNumber","reference/api/pyspark.TaskContext.get","reference/api/pyspark.TaskContext.getLocalProperty","reference/api/pyspark.TaskContext.partitionId","reference/api/pyspark.TaskContext.resources","reference/api/pyspark.TaskContext.stageId","reference/api/pyspark.TaskContext.taskAttemptId","reference/api/pyspark.ml.Estimator","reference/api/pyspark.ml.Model","reference/api/pyspark.ml.Pipeline","reference/api/pyspark.ml.PipelineModel","reference/api/pyspark.ml.PredictionModel","reference/api/pyspark.ml.Predictor","reference/api/pyspark.ml.Transformer","reference/api/pyspark.ml.UnaryTransformer","reference/api/pyspark.ml.classification.BinaryLogisticRegressionSummary","reference/api/pyspark.ml.classification.BinaryLogisticRegressionTrainingSummary","reference/api/pyspark.ml.classification.BinaryRandomForestClassificationSummary","reference/api/pyspark.ml.classification.BinaryRandomForestClassificationTrainingSummary","reference/api/pyspark.ml.classification.DecisionTreeClassificationModel","reference/api/pyspark.ml.classification.DecisionTreeClassifier","reference/api/pyspark.ml.classification.FMClassificationModel","reference/api/pyspark.ml.classification.FMClassificationSummary","reference/api/pyspark.ml.classification.FMClassificationTrainingSummary","reference/api/pyspark.ml.classification.FMClassifier","reference/api/pyspark.ml.classification.GBTClassificationModel","reference/api/pyspark.ml.classification.GBTClassifier","reference/api/pyspark.ml.classification.LinearSVC","reference/api/pyspark.ml.classification.LinearSVCModel","reference/api/pyspark.ml.classification.LinearSVCSummary","reference/api/pyspark.ml.classification.LinearSVCTrainingSummary","reference/api/pyspark.ml.classification.LogisticRegression","reference/api/pyspark.ml.classification.LogisticRegressionModel","reference/api/pyspark.ml.classification.LogisticRegressionSummary","reference/api/pyspark.ml.classification.LogisticRegressionTrainingSummary","reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationModel","reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationSummary","reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationTrainingSummary","reference/api/pyspark.ml.classification.MultilayerPerceptronClassifier","reference/api/pyspark.ml.classification.NaiveBayes","reference/api/pyspark.ml.classification.NaiveBayesModel","reference/api/pyspark.ml.classification.OneVsRest","reference/api/pyspark.ml.classification.OneVsRestModel","reference/api/pyspark.ml.classification.RandomForestClassificationModel","reference/api/pyspark.ml.classification.RandomForestClassificationSummary","reference/api/pyspark.ml.classification.RandomForestClassificationTrainingSummary","reference/api/pyspark.ml.classification.RandomForestClassifier","reference/api/pyspark.ml.clustering.BisectingKMeans","reference/api/pyspark.ml.clustering.BisectingKMeansModel","reference/api/pyspark.ml.clustering.BisectingKMeansSummary","reference/api/pyspark.ml.clustering.DistributedLDAModel","reference/api/pyspark.ml.clustering.GaussianMixture","reference/api/pyspark.ml.clustering.GaussianMixtureModel","reference/api/pyspark.ml.clustering.GaussianMixtureSummary","reference/api/pyspark.ml.clustering.KMeans","reference/api/pyspark.ml.clustering.KMeansModel","reference/api/pyspark.ml.clustering.KMeansSummary","reference/api/pyspark.ml.clustering.LDA","reference/api/pyspark.ml.clustering.LDAModel","reference/api/pyspark.ml.clustering.LocalLDAModel","reference/api/pyspark.ml.clustering.PowerIterationClustering","reference/api/pyspark.ml.evaluation.BinaryClassificationEvaluator","reference/api/pyspark.ml.evaluation.ClusteringEvaluator","reference/api/pyspark.ml.evaluation.Evaluator","reference/api/pyspark.ml.evaluation.MulticlassClassificationEvaluator","reference/api/pyspark.ml.evaluation.MultilabelClassificationEvaluator","reference/api/pyspark.ml.evaluation.RankingEvaluator","reference/api/pyspark.ml.evaluation.RegressionEvaluator","reference/api/pyspark.ml.feature.Binarizer","reference/api/pyspark.ml.feature.BucketedRandomProjectionLSH","reference/api/pyspark.ml.feature.BucketedRandomProjectionLSHModel","reference/api/pyspark.ml.feature.Bucketizer","reference/api/pyspark.ml.feature.ChiSqSelector","reference/api/pyspark.ml.feature.ChiSqSelectorModel","reference/api/pyspark.ml.feature.CountVectorizer","reference/api/pyspark.ml.feature.CountVectorizerModel","reference/api/pyspark.ml.feature.DCT","reference/api/pyspark.ml.feature.ElementwiseProduct","reference/api/pyspark.ml.feature.FeatureHasher","reference/api/pyspark.ml.feature.HashingTF","reference/api/pyspark.ml.feature.IDF","reference/api/pyspark.ml.feature.IDFModel","reference/api/pyspark.ml.feature.Imputer","reference/api/pyspark.ml.feature.ImputerModel","reference/api/pyspark.ml.feature.IndexToString","reference/api/pyspark.ml.feature.Interaction","reference/api/pyspark.ml.feature.MaxAbsScaler","reference/api/pyspark.ml.feature.MaxAbsScalerModel","reference/api/pyspark.ml.feature.MinHashLSH","reference/api/pyspark.ml.feature.MinHashLSHModel","reference/api/pyspark.ml.feature.MinMaxScaler","reference/api/pyspark.ml.feature.MinMaxScalerModel","reference/api/pyspark.ml.feature.NGram","reference/api/pyspark.ml.feature.Normalizer","reference/api/pyspark.ml.feature.OneHotEncoder","reference/api/pyspark.ml.feature.OneHotEncoderModel","reference/api/pyspark.ml.feature.PCA","reference/api/pyspark.ml.feature.PCAModel","reference/api/pyspark.ml.feature.PolynomialExpansion","reference/api/pyspark.ml.feature.QuantileDiscretizer","reference/api/pyspark.ml.feature.RFormula","reference/api/pyspark.ml.feature.RFormulaModel","reference/api/pyspark.ml.feature.RegexTokenizer","reference/api/pyspark.ml.feature.RobustScaler","reference/api/pyspark.ml.feature.RobustScalerModel","reference/api/pyspark.ml.feature.SQLTransformer","reference/api/pyspark.ml.feature.StandardScaler","reference/api/pyspark.ml.feature.StandardScalerModel","reference/api/pyspark.ml.feature.StopWordsRemover","reference/api/pyspark.ml.feature.StringIndexer","reference/api/pyspark.ml.feature.StringIndexerModel","reference/api/pyspark.ml.feature.Tokenizer","reference/api/pyspark.ml.feature.UnivariateFeatureSelector","reference/api/pyspark.ml.feature.UnivariateFeatureSelectorModel","reference/api/pyspark.ml.feature.VarianceThresholdSelector","reference/api/pyspark.ml.feature.VarianceThresholdSelectorModel","reference/api/pyspark.ml.feature.VectorAssembler","reference/api/pyspark.ml.feature.VectorIndexer","reference/api/pyspark.ml.feature.VectorIndexerModel","reference/api/pyspark.ml.feature.VectorSizeHint","reference/api/pyspark.ml.feature.VectorSlicer","reference/api/pyspark.ml.feature.Word2Vec","reference/api/pyspark.ml.feature.Word2VecModel","reference/api/pyspark.ml.fpm.FPGrowth","reference/api/pyspark.ml.fpm.FPGrowthModel","reference/api/pyspark.ml.fpm.PrefixSpan","reference/api/pyspark.ml.functions.array_to_vector","reference/api/pyspark.ml.functions.vector_to_array","reference/api/pyspark.ml.image.ImageSchema","reference/api/pyspark.ml.image._ImageSchema","reference/api/pyspark.ml.linalg.DenseMatrix","reference/api/pyspark.ml.linalg.DenseVector","reference/api/pyspark.ml.linalg.Matrices","reference/api/pyspark.ml.linalg.Matrix","reference/api/pyspark.ml.linalg.SparseMatrix","reference/api/pyspark.ml.linalg.SparseVector","reference/api/pyspark.ml.linalg.Vector","reference/api/pyspark.ml.linalg.Vectors","reference/api/pyspark.ml.param.Param","reference/api/pyspark.ml.param.Params","reference/api/pyspark.ml.param.TypeConverters","reference/api/pyspark.ml.recommendation.ALS","reference/api/pyspark.ml.recommendation.ALSModel","reference/api/pyspark.ml.regression.AFTSurvivalRegression","reference/api/pyspark.ml.regression.AFTSurvivalRegressionModel","reference/api/pyspark.ml.regression.DecisionTreeRegressionModel","reference/api/pyspark.ml.regression.DecisionTreeRegressor","reference/api/pyspark.ml.regression.FMRegressionModel","reference/api/pyspark.ml.regression.FMRegressor","reference/api/pyspark.ml.regression.GBTRegressionModel","reference/api/pyspark.ml.regression.GBTRegressor","reference/api/pyspark.ml.regression.GeneralizedLinearRegression","reference/api/pyspark.ml.regression.GeneralizedLinearRegressionModel","reference/api/pyspark.ml.regression.GeneralizedLinearRegressionSummary","reference/api/pyspark.ml.regression.GeneralizedLinearRegressionTrainingSummary","reference/api/pyspark.ml.regression.IsotonicRegression","reference/api/pyspark.ml.regression.IsotonicRegressionModel","reference/api/pyspark.ml.regression.LinearRegression","reference/api/pyspark.ml.regression.LinearRegressionModel","reference/api/pyspark.ml.regression.LinearRegressionSummary","reference/api/pyspark.ml.regression.LinearRegressionTrainingSummary","reference/api/pyspark.ml.regression.RandomForestRegressionModel","reference/api/pyspark.ml.regression.RandomForestRegressor","reference/api/pyspark.ml.stat.ChiSquareTest","reference/api/pyspark.ml.stat.Correlation","reference/api/pyspark.ml.stat.KolmogorovSmirnovTest","reference/api/pyspark.ml.stat.MultivariateGaussian","reference/api/pyspark.ml.stat.Summarizer","reference/api/pyspark.ml.stat.SummaryBuilder","reference/api/pyspark.ml.tuning.CrossValidator","reference/api/pyspark.ml.tuning.CrossValidatorModel","reference/api/pyspark.ml.tuning.ParamGridBuilder","reference/api/pyspark.ml.tuning.TrainValidationSplit","reference/api/pyspark.ml.tuning.TrainValidationSplitModel","reference/api/pyspark.ml.util.BaseReadWrite","reference/api/pyspark.ml.util.DefaultParamsReadable","reference/api/pyspark.ml.util.DefaultParamsReader","reference/api/pyspark.ml.util.DefaultParamsWritable","reference/api/pyspark.ml.util.DefaultParamsWriter","reference/api/pyspark.ml.util.GeneralMLWriter","reference/api/pyspark.ml.util.HasTrainingSummary","reference/api/pyspark.ml.util.Identifiable","reference/api/pyspark.ml.util.MLReadable","reference/api/pyspark.ml.util.MLReader","reference/api/pyspark.ml.util.MLWritable","reference/api/pyspark.ml.util.MLWriter","reference/api/pyspark.mllib.classification.LogisticRegressionModel","reference/api/pyspark.mllib.classification.LogisticRegressionWithLBFGS","reference/api/pyspark.mllib.classification.LogisticRegressionWithSGD","reference/api/pyspark.mllib.classification.NaiveBayes","reference/api/pyspark.mllib.classification.NaiveBayesModel","reference/api/pyspark.mllib.classification.SVMModel","reference/api/pyspark.mllib.classification.SVMWithSGD","reference/api/pyspark.mllib.classification.StreamingLogisticRegressionWithSGD","reference/api/pyspark.mllib.clustering.BisectingKMeans","reference/api/pyspark.mllib.clustering.BisectingKMeansModel","reference/api/pyspark.mllib.clustering.GaussianMixture","reference/api/pyspark.mllib.clustering.GaussianMixtureModel","reference/api/pyspark.mllib.clustering.KMeans","reference/api/pyspark.mllib.clustering.KMeansModel","reference/api/pyspark.mllib.clustering.LDA","reference/api/pyspark.mllib.clustering.LDAModel","reference/api/pyspark.mllib.clustering.PowerIterationClustering","reference/api/pyspark.mllib.clustering.PowerIterationClusteringModel","reference/api/pyspark.mllib.clustering.StreamingKMeans","reference/api/pyspark.mllib.clustering.StreamingKMeansModel","reference/api/pyspark.mllib.evaluation.BinaryClassificationMetrics","reference/api/pyspark.mllib.evaluation.MulticlassMetrics","reference/api/pyspark.mllib.evaluation.RankingMetrics","reference/api/pyspark.mllib.evaluation.RegressionMetrics","reference/api/pyspark.mllib.feature.ChiSqSelector","reference/api/pyspark.mllib.feature.ChiSqSelectorModel","reference/api/pyspark.mllib.feature.ElementwiseProduct","reference/api/pyspark.mllib.feature.HashingTF","reference/api/pyspark.mllib.feature.IDF","reference/api/pyspark.mllib.feature.IDFModel","reference/api/pyspark.mllib.feature.Normalizer","reference/api/pyspark.mllib.feature.StandardScaler","reference/api/pyspark.mllib.feature.StandardScalerModel","reference/api/pyspark.mllib.feature.Word2Vec","reference/api/pyspark.mllib.feature.Word2VecModel","reference/api/pyspark.mllib.fpm.FPGrowth","reference/api/pyspark.mllib.fpm.FPGrowthModel","reference/api/pyspark.mllib.fpm.PrefixSpan","reference/api/pyspark.mllib.fpm.PrefixSpanModel","reference/api/pyspark.mllib.linalg.DenseMatrix","reference/api/pyspark.mllib.linalg.DenseVector","reference/api/pyspark.mllib.linalg.Matrices","reference/api/pyspark.mllib.linalg.Matrix","reference/api/pyspark.mllib.linalg.QRDecomposition","reference/api/pyspark.mllib.linalg.SparseMatrix","reference/api/pyspark.mllib.linalg.SparseVector","reference/api/pyspark.mllib.linalg.Vector","reference/api/pyspark.mllib.linalg.Vectors","reference/api/pyspark.mllib.linalg.distributed.BlockMatrix","reference/api/pyspark.mllib.linalg.distributed.CoordinateMatrix","reference/api/pyspark.mllib.linalg.distributed.DistributedMatrix","reference/api/pyspark.mllib.linalg.distributed.IndexedRow","reference/api/pyspark.mllib.linalg.distributed.IndexedRowMatrix","reference/api/pyspark.mllib.linalg.distributed.MatrixEntry","reference/api/pyspark.mllib.linalg.distributed.RowMatrix","reference/api/pyspark.mllib.linalg.distributed.SingularValueDecomposition","reference/api/pyspark.mllib.random.RandomRDDs","reference/api/pyspark.mllib.recommendation.ALS","reference/api/pyspark.mllib.recommendation.MatrixFactorizationModel","reference/api/pyspark.mllib.recommendation.Rating","reference/api/pyspark.mllib.regression.IsotonicRegression","reference/api/pyspark.mllib.regression.IsotonicRegressionModel","reference/api/pyspark.mllib.regression.LabeledPoint","reference/api/pyspark.mllib.regression.LassoModel","reference/api/pyspark.mllib.regression.LassoWithSGD","reference/api/pyspark.mllib.regression.LinearModel","reference/api/pyspark.mllib.regression.LinearRegressionModel","reference/api/pyspark.mllib.regression.LinearRegressionWithSGD","reference/api/pyspark.mllib.regression.RidgeRegressionModel","reference/api/pyspark.mllib.regression.RidgeRegressionWithSGD","reference/api/pyspark.mllib.regression.StreamingLinearAlgorithm","reference/api/pyspark.mllib.regression.StreamingLinearRegressionWithSGD","reference/api/pyspark.mllib.stat.ChiSqTestResult","reference/api/pyspark.mllib.stat.KernelDensity","reference/api/pyspark.mllib.stat.KolmogorovSmirnovTestResult","reference/api/pyspark.mllib.stat.MultivariateGaussian","reference/api/pyspark.mllib.stat.MultivariateStatisticalSummary","reference/api/pyspark.mllib.stat.Statistics","reference/api/pyspark.mllib.tree.DecisionTree","reference/api/pyspark.mllib.tree.DecisionTreeModel","reference/api/pyspark.mllib.tree.GradientBoostedTrees","reference/api/pyspark.mllib.tree.GradientBoostedTreesModel","reference/api/pyspark.mllib.tree.RandomForest","reference/api/pyspark.mllib.tree.RandomForestModel","reference/api/pyspark.mllib.util.JavaLoader","reference/api/pyspark.mllib.util.JavaSaveable","reference/api/pyspark.mllib.util.LinearDataGenerator","reference/api/pyspark.mllib.util.Loader","reference/api/pyspark.mllib.util.MLUtils","reference/api/pyspark.mllib.util.Saveable","reference/api/pyspark.resource.ExecutorResourceRequest","reference/api/pyspark.resource.ExecutorResourceRequests","reference/api/pyspark.resource.ResourceInformation","reference/api/pyspark.resource.ResourceProfile","reference/api/pyspark.resource.ResourceProfileBuilder","reference/api/pyspark.resource.TaskResourceRequest","reference/api/pyspark.resource.TaskResourceRequests","reference/api/pyspark.sql.Column","reference/api/pyspark.sql.Column.alias","reference/api/pyspark.sql.Column.asc","reference/api/pyspark.sql.Column.asc_nulls_first","reference/api/pyspark.sql.Column.asc_nulls_last","reference/api/pyspark.sql.Column.astype","reference/api/pyspark.sql.Column.between","reference/api/pyspark.sql.Column.bitwiseAND","reference/api/pyspark.sql.Column.bitwiseOR","reference/api/pyspark.sql.Column.bitwiseXOR","reference/api/pyspark.sql.Column.cast","reference/api/pyspark.sql.Column.contains","reference/api/pyspark.sql.Column.desc","reference/api/pyspark.sql.Column.desc_nulls_first","reference/api/pyspark.sql.Column.desc_nulls_last","reference/api/pyspark.sql.Column.dropFields","reference/api/pyspark.sql.Column.endswith","reference/api/pyspark.sql.Column.eqNullSafe","reference/api/pyspark.sql.Column.getField","reference/api/pyspark.sql.Column.getItem","reference/api/pyspark.sql.Column.isNotNull","reference/api/pyspark.sql.Column.isNull","reference/api/pyspark.sql.Column.isin","reference/api/pyspark.sql.Column.like","reference/api/pyspark.sql.Column.name","reference/api/pyspark.sql.Column.otherwise","reference/api/pyspark.sql.Column.over","reference/api/pyspark.sql.Column.rlike","reference/api/pyspark.sql.Column.startswith","reference/api/pyspark.sql.Column.substr","reference/api/pyspark.sql.Column.when","reference/api/pyspark.sql.Column.withField","reference/api/pyspark.sql.DataFrame","reference/api/pyspark.sql.DataFrame.agg","reference/api/pyspark.sql.DataFrame.alias","reference/api/pyspark.sql.DataFrame.approxQuantile","reference/api/pyspark.sql.DataFrame.cache","reference/api/pyspark.sql.DataFrame.checkpoint","reference/api/pyspark.sql.DataFrame.coalesce","reference/api/pyspark.sql.DataFrame.colRegex","reference/api/pyspark.sql.DataFrame.collect","reference/api/pyspark.sql.DataFrame.columns","reference/api/pyspark.sql.DataFrame.corr","reference/api/pyspark.sql.DataFrame.count","reference/api/pyspark.sql.DataFrame.cov","reference/api/pyspark.sql.DataFrame.createGlobalTempView","reference/api/pyspark.sql.DataFrame.createOrReplaceGlobalTempView","reference/api/pyspark.sql.DataFrame.createOrReplaceTempView","reference/api/pyspark.sql.DataFrame.createTempView","reference/api/pyspark.sql.DataFrame.crossJoin","reference/api/pyspark.sql.DataFrame.crosstab","reference/api/pyspark.sql.DataFrame.cube","reference/api/pyspark.sql.DataFrame.describe","reference/api/pyspark.sql.DataFrame.distinct","reference/api/pyspark.sql.DataFrame.drop","reference/api/pyspark.sql.DataFrame.dropDuplicates","reference/api/pyspark.sql.DataFrame.drop_duplicates","reference/api/pyspark.sql.DataFrame.dropna","reference/api/pyspark.sql.DataFrame.dtypes","reference/api/pyspark.sql.DataFrame.exceptAll","reference/api/pyspark.sql.DataFrame.explain","reference/api/pyspark.sql.DataFrame.fillna","reference/api/pyspark.sql.DataFrame.filter","reference/api/pyspark.sql.DataFrame.first","reference/api/pyspark.sql.DataFrame.foreach","reference/api/pyspark.sql.DataFrame.foreachPartition","reference/api/pyspark.sql.DataFrame.freqItems","reference/api/pyspark.sql.DataFrame.groupBy","reference/api/pyspark.sql.DataFrame.head","reference/api/pyspark.sql.DataFrame.hint","reference/api/pyspark.sql.DataFrame.inputFiles","reference/api/pyspark.sql.DataFrame.intersect","reference/api/pyspark.sql.DataFrame.intersectAll","reference/api/pyspark.sql.DataFrame.isLocal","reference/api/pyspark.sql.DataFrame.isStreaming","reference/api/pyspark.sql.DataFrame.join","reference/api/pyspark.sql.DataFrame.limit","reference/api/pyspark.sql.DataFrame.localCheckpoint","reference/api/pyspark.sql.DataFrame.mapInPandas","reference/api/pyspark.sql.DataFrame.na","reference/api/pyspark.sql.DataFrame.orderBy","reference/api/pyspark.sql.DataFrame.persist","reference/api/pyspark.sql.DataFrame.printSchema","reference/api/pyspark.sql.DataFrame.randomSplit","reference/api/pyspark.sql.DataFrame.rdd","reference/api/pyspark.sql.DataFrame.registerTempTable","reference/api/pyspark.sql.DataFrame.repartition","reference/api/pyspark.sql.DataFrame.repartitionByRange","reference/api/pyspark.sql.DataFrame.replace","reference/api/pyspark.sql.DataFrame.rollup","reference/api/pyspark.sql.DataFrame.sameSemantics","reference/api/pyspark.sql.DataFrame.sample","reference/api/pyspark.sql.DataFrame.sampleBy","reference/api/pyspark.sql.DataFrame.schema","reference/api/pyspark.sql.DataFrame.select","reference/api/pyspark.sql.DataFrame.selectExpr","reference/api/pyspark.sql.DataFrame.semanticHash","reference/api/pyspark.sql.DataFrame.show","reference/api/pyspark.sql.DataFrame.sort","reference/api/pyspark.sql.DataFrame.sortWithinPartitions","reference/api/pyspark.sql.DataFrame.stat","reference/api/pyspark.sql.DataFrame.storageLevel","reference/api/pyspark.sql.DataFrame.subtract","reference/api/pyspark.sql.DataFrame.summary","reference/api/pyspark.sql.DataFrame.tail","reference/api/pyspark.sql.DataFrame.take","reference/api/pyspark.sql.DataFrame.toDF","reference/api/pyspark.sql.DataFrame.toJSON","reference/api/pyspark.sql.DataFrame.toLocalIterator","reference/api/pyspark.sql.DataFrame.toPandas","reference/api/pyspark.sql.DataFrame.transform","reference/api/pyspark.sql.DataFrame.union","reference/api/pyspark.sql.DataFrame.unionAll","reference/api/pyspark.sql.DataFrame.unionByName","reference/api/pyspark.sql.DataFrame.unpersist","reference/api/pyspark.sql.DataFrame.where","reference/api/pyspark.sql.DataFrame.withColumn","reference/api/pyspark.sql.DataFrame.withColumnRenamed","reference/api/pyspark.sql.DataFrame.withWatermark","reference/api/pyspark.sql.DataFrame.write","reference/api/pyspark.sql.DataFrame.writeStream","reference/api/pyspark.sql.DataFrame.writeTo","reference/api/pyspark.sql.DataFrameNaFunctions","reference/api/pyspark.sql.DataFrameNaFunctions.drop","reference/api/pyspark.sql.DataFrameNaFunctions.fill","reference/api/pyspark.sql.DataFrameNaFunctions.replace","reference/api/pyspark.sql.DataFrameReader.csv","reference/api/pyspark.sql.DataFrameReader.format","reference/api/pyspark.sql.DataFrameReader.jdbc","reference/api/pyspark.sql.DataFrameReader.json","reference/api/pyspark.sql.DataFrameReader.load","reference/api/pyspark.sql.DataFrameReader.option","reference/api/pyspark.sql.DataFrameReader.options","reference/api/pyspark.sql.DataFrameReader.orc","reference/api/pyspark.sql.DataFrameReader.parquet","reference/api/pyspark.sql.DataFrameReader.schema","reference/api/pyspark.sql.DataFrameReader.table","reference/api/pyspark.sql.DataFrameStatFunctions","reference/api/pyspark.sql.DataFrameStatFunctions.approxQuantile","reference/api/pyspark.sql.DataFrameStatFunctions.corr","reference/api/pyspark.sql.DataFrameStatFunctions.cov","reference/api/pyspark.sql.DataFrameStatFunctions.crosstab","reference/api/pyspark.sql.DataFrameStatFunctions.freqItems","reference/api/pyspark.sql.DataFrameStatFunctions.sampleBy","reference/api/pyspark.sql.DataFrameWriter.bucketBy","reference/api/pyspark.sql.DataFrameWriter.csv","reference/api/pyspark.sql.DataFrameWriter.format","reference/api/pyspark.sql.DataFrameWriter.insertInto","reference/api/pyspark.sql.DataFrameWriter.jdbc","reference/api/pyspark.sql.DataFrameWriter.json","reference/api/pyspark.sql.DataFrameWriter.mode","reference/api/pyspark.sql.DataFrameWriter.option","reference/api/pyspark.sql.DataFrameWriter.options","reference/api/pyspark.sql.DataFrameWriter.orc","reference/api/pyspark.sql.DataFrameWriter.parquet","reference/api/pyspark.sql.DataFrameWriter.partitionBy","reference/api/pyspark.sql.DataFrameWriter.save","reference/api/pyspark.sql.DataFrameWriter.saveAsTable","reference/api/pyspark.sql.DataFrameWriter.sortBy","reference/api/pyspark.sql.DataFrameWriter.text","reference/api/pyspark.sql.GroupedData","reference/api/pyspark.sql.GroupedData.agg","reference/api/pyspark.sql.GroupedData.apply","reference/api/pyspark.sql.GroupedData.applyInPandas","reference/api/pyspark.sql.GroupedData.avg","reference/api/pyspark.sql.GroupedData.cogroup","reference/api/pyspark.sql.GroupedData.count","reference/api/pyspark.sql.GroupedData.max","reference/api/pyspark.sql.GroupedData.mean","reference/api/pyspark.sql.GroupedData.min","reference/api/pyspark.sql.GroupedData.pivot","reference/api/pyspark.sql.GroupedData.sum","reference/api/pyspark.sql.PandasCogroupedOps","reference/api/pyspark.sql.PandasCogroupedOps.applyInPandas","reference/api/pyspark.sql.Row","reference/api/pyspark.sql.Row.asDict","reference/api/pyspark.sql.SparkSession","reference/api/pyspark.sql.SparkSession.builder.appName","reference/api/pyspark.sql.SparkSession.builder.config","reference/api/pyspark.sql.SparkSession.builder.enableHiveSupport","reference/api/pyspark.sql.SparkSession.builder.getOrCreate","reference/api/pyspark.sql.SparkSession.builder.master","reference/api/pyspark.sql.SparkSession.catalog","reference/api/pyspark.sql.SparkSession.conf","reference/api/pyspark.sql.SparkSession.createDataFrame","reference/api/pyspark.sql.SparkSession.getActiveSession","reference/api/pyspark.sql.SparkSession.newSession","reference/api/pyspark.sql.SparkSession.range","reference/api/pyspark.sql.SparkSession.read","reference/api/pyspark.sql.SparkSession.readStream","reference/api/pyspark.sql.SparkSession.sparkContext","reference/api/pyspark.sql.SparkSession.sql","reference/api/pyspark.sql.SparkSession.stop","reference/api/pyspark.sql.SparkSession.streams","reference/api/pyspark.sql.SparkSession.table","reference/api/pyspark.sql.SparkSession.udf","reference/api/pyspark.sql.SparkSession.version","reference/api/pyspark.sql.Window","reference/api/pyspark.sql.Window.currentRow","reference/api/pyspark.sql.Window.orderBy","reference/api/pyspark.sql.Window.partitionBy","reference/api/pyspark.sql.Window.rangeBetween","reference/api/pyspark.sql.Window.rowsBetween","reference/api/pyspark.sql.Window.unboundedFollowing","reference/api/pyspark.sql.Window.unboundedPreceding","reference/api/pyspark.sql.WindowSpec.orderBy","reference/api/pyspark.sql.WindowSpec.partitionBy","reference/api/pyspark.sql.WindowSpec.rangeBetween","reference/api/pyspark.sql.WindowSpec.rowsBetween","reference/api/pyspark.sql.avro.functions.from_avro","reference/api/pyspark.sql.avro.functions.to_avro","reference/api/pyspark.sql.conf.RuntimeConfig","reference/api/pyspark.sql.functions.abs","reference/api/pyspark.sql.functions.acos","reference/api/pyspark.sql.functions.acosh","reference/api/pyspark.sql.functions.add_months","reference/api/pyspark.sql.functions.aggregate","reference/api/pyspark.sql.functions.approxCountDistinct","reference/api/pyspark.sql.functions.approx_count_distinct","reference/api/pyspark.sql.functions.array","reference/api/pyspark.sql.functions.array_contains","reference/api/pyspark.sql.functions.array_distinct","reference/api/pyspark.sql.functions.array_except","reference/api/pyspark.sql.functions.array_intersect","reference/api/pyspark.sql.functions.array_join","reference/api/pyspark.sql.functions.array_max","reference/api/pyspark.sql.functions.array_min","reference/api/pyspark.sql.functions.array_position","reference/api/pyspark.sql.functions.array_remove","reference/api/pyspark.sql.functions.array_repeat","reference/api/pyspark.sql.functions.array_sort","reference/api/pyspark.sql.functions.array_union","reference/api/pyspark.sql.functions.arrays_overlap","reference/api/pyspark.sql.functions.arrays_zip","reference/api/pyspark.sql.functions.asc","reference/api/pyspark.sql.functions.asc_nulls_first","reference/api/pyspark.sql.functions.asc_nulls_last","reference/api/pyspark.sql.functions.ascii","reference/api/pyspark.sql.functions.asin","reference/api/pyspark.sql.functions.asinh","reference/api/pyspark.sql.functions.assert_true","reference/api/pyspark.sql.functions.atan","reference/api/pyspark.sql.functions.atan2","reference/api/pyspark.sql.functions.atanh","reference/api/pyspark.sql.functions.avg","reference/api/pyspark.sql.functions.base64","reference/api/pyspark.sql.functions.bin","reference/api/pyspark.sql.functions.bitwiseNOT","reference/api/pyspark.sql.functions.broadcast","reference/api/pyspark.sql.functions.bround","reference/api/pyspark.sql.functions.bucket","reference/api/pyspark.sql.functions.cbrt","reference/api/pyspark.sql.functions.ceil","reference/api/pyspark.sql.functions.coalesce","reference/api/pyspark.sql.functions.col","reference/api/pyspark.sql.functions.collect_list","reference/api/pyspark.sql.functions.collect_set","reference/api/pyspark.sql.functions.column","reference/api/pyspark.sql.functions.concat","reference/api/pyspark.sql.functions.concat_ws","reference/api/pyspark.sql.functions.conv","reference/api/pyspark.sql.functions.corr","reference/api/pyspark.sql.functions.cos","reference/api/pyspark.sql.functions.cosh","reference/api/pyspark.sql.functions.count","reference/api/pyspark.sql.functions.countDistinct","reference/api/pyspark.sql.functions.covar_pop","reference/api/pyspark.sql.functions.covar_samp","reference/api/pyspark.sql.functions.crc32","reference/api/pyspark.sql.functions.create_map","reference/api/pyspark.sql.functions.cume_dist","reference/api/pyspark.sql.functions.current_date","reference/api/pyspark.sql.functions.current_timestamp","reference/api/pyspark.sql.functions.date_add","reference/api/pyspark.sql.functions.date_format","reference/api/pyspark.sql.functions.date_sub","reference/api/pyspark.sql.functions.date_trunc","reference/api/pyspark.sql.functions.datediff","reference/api/pyspark.sql.functions.dayofmonth","reference/api/pyspark.sql.functions.dayofweek","reference/api/pyspark.sql.functions.dayofyear","reference/api/pyspark.sql.functions.days","reference/api/pyspark.sql.functions.decode","reference/api/pyspark.sql.functions.degrees","reference/api/pyspark.sql.functions.dense_rank","reference/api/pyspark.sql.functions.desc","reference/api/pyspark.sql.functions.desc_nulls_first","reference/api/pyspark.sql.functions.desc_nulls_last","reference/api/pyspark.sql.functions.element_at","reference/api/pyspark.sql.functions.encode","reference/api/pyspark.sql.functions.exists","reference/api/pyspark.sql.functions.exp","reference/api/pyspark.sql.functions.explode","reference/api/pyspark.sql.functions.explode_outer","reference/api/pyspark.sql.functions.expm1","reference/api/pyspark.sql.functions.expr","reference/api/pyspark.sql.functions.factorial","reference/api/pyspark.sql.functions.filter","reference/api/pyspark.sql.functions.first","reference/api/pyspark.sql.functions.flatten","reference/api/pyspark.sql.functions.floor","reference/api/pyspark.sql.functions.forall","reference/api/pyspark.sql.functions.format_number","reference/api/pyspark.sql.functions.format_string","reference/api/pyspark.sql.functions.from_csv","reference/api/pyspark.sql.functions.from_json","reference/api/pyspark.sql.functions.from_unixtime","reference/api/pyspark.sql.functions.from_utc_timestamp","reference/api/pyspark.sql.functions.get_json_object","reference/api/pyspark.sql.functions.greatest","reference/api/pyspark.sql.functions.grouping","reference/api/pyspark.sql.functions.grouping_id","reference/api/pyspark.sql.functions.hash","reference/api/pyspark.sql.functions.hex","reference/api/pyspark.sql.functions.hour","reference/api/pyspark.sql.functions.hours","reference/api/pyspark.sql.functions.hypot","reference/api/pyspark.sql.functions.initcap","reference/api/pyspark.sql.functions.input_file_name","reference/api/pyspark.sql.functions.instr","reference/api/pyspark.sql.functions.isnan","reference/api/pyspark.sql.functions.isnull","reference/api/pyspark.sql.functions.json_tuple","reference/api/pyspark.sql.functions.kurtosis","reference/api/pyspark.sql.functions.lag","reference/api/pyspark.sql.functions.last","reference/api/pyspark.sql.functions.last_day","reference/api/pyspark.sql.functions.lead","reference/api/pyspark.sql.functions.least","reference/api/pyspark.sql.functions.length","reference/api/pyspark.sql.functions.levenshtein","reference/api/pyspark.sql.functions.lit","reference/api/pyspark.sql.functions.locate","reference/api/pyspark.sql.functions.log","reference/api/pyspark.sql.functions.log10","reference/api/pyspark.sql.functions.log1p","reference/api/pyspark.sql.functions.log2","reference/api/pyspark.sql.functions.lower","reference/api/pyspark.sql.functions.lpad","reference/api/pyspark.sql.functions.ltrim","reference/api/pyspark.sql.functions.map_concat","reference/api/pyspark.sql.functions.map_entries","reference/api/pyspark.sql.functions.map_filter","reference/api/pyspark.sql.functions.map_from_arrays","reference/api/pyspark.sql.functions.map_from_entries","reference/api/pyspark.sql.functions.map_keys","reference/api/pyspark.sql.functions.map_values","reference/api/pyspark.sql.functions.map_zip_with","reference/api/pyspark.sql.functions.max","reference/api/pyspark.sql.functions.md5","reference/api/pyspark.sql.functions.mean","reference/api/pyspark.sql.functions.min","reference/api/pyspark.sql.functions.minute","reference/api/pyspark.sql.functions.monotonically_increasing_id","reference/api/pyspark.sql.functions.month","reference/api/pyspark.sql.functions.months","reference/api/pyspark.sql.functions.months_between","reference/api/pyspark.sql.functions.nanvl","reference/api/pyspark.sql.functions.next_day","reference/api/pyspark.sql.functions.nth_value","reference/api/pyspark.sql.functions.ntile","reference/api/pyspark.sql.functions.overlay","reference/api/pyspark.sql.functions.pandas_udf","reference/api/pyspark.sql.functions.percent_rank","reference/api/pyspark.sql.functions.percentile_approx","reference/api/pyspark.sql.functions.posexplode","reference/api/pyspark.sql.functions.posexplode_outer","reference/api/pyspark.sql.functions.pow","reference/api/pyspark.sql.functions.quarter","reference/api/pyspark.sql.functions.radians","reference/api/pyspark.sql.functions.raise_error","reference/api/pyspark.sql.functions.rand","reference/api/pyspark.sql.functions.randn","reference/api/pyspark.sql.functions.rank","reference/api/pyspark.sql.functions.regexp_extract","reference/api/pyspark.sql.functions.regexp_replace","reference/api/pyspark.sql.functions.repeat","reference/api/pyspark.sql.functions.reverse","reference/api/pyspark.sql.functions.rint","reference/api/pyspark.sql.functions.round","reference/api/pyspark.sql.functions.row_number","reference/api/pyspark.sql.functions.rpad","reference/api/pyspark.sql.functions.rtrim","reference/api/pyspark.sql.functions.schema_of_csv","reference/api/pyspark.sql.functions.schema_of_json","reference/api/pyspark.sql.functions.second","reference/api/pyspark.sql.functions.sequence","reference/api/pyspark.sql.functions.sha1","reference/api/pyspark.sql.functions.sha2","reference/api/pyspark.sql.functions.shiftLeft","reference/api/pyspark.sql.functions.shiftRight","reference/api/pyspark.sql.functions.shiftRightUnsigned","reference/api/pyspark.sql.functions.shuffle","reference/api/pyspark.sql.functions.signum","reference/api/pyspark.sql.functions.sin","reference/api/pyspark.sql.functions.sinh","reference/api/pyspark.sql.functions.size","reference/api/pyspark.sql.functions.skewness","reference/api/pyspark.sql.functions.slice","reference/api/pyspark.sql.functions.sort_array","reference/api/pyspark.sql.functions.soundex","reference/api/pyspark.sql.functions.spark_partition_id","reference/api/pyspark.sql.functions.split","reference/api/pyspark.sql.functions.sqrt","reference/api/pyspark.sql.functions.stddev","reference/api/pyspark.sql.functions.stddev_pop","reference/api/pyspark.sql.functions.stddev_samp","reference/api/pyspark.sql.functions.struct","reference/api/pyspark.sql.functions.substring","reference/api/pyspark.sql.functions.substring_index","reference/api/pyspark.sql.functions.sum","reference/api/pyspark.sql.functions.sumDistinct","reference/api/pyspark.sql.functions.tan","reference/api/pyspark.sql.functions.tanh","reference/api/pyspark.sql.functions.timestamp_seconds","reference/api/pyspark.sql.functions.toDegrees","reference/api/pyspark.sql.functions.toRadians","reference/api/pyspark.sql.functions.to_csv","reference/api/pyspark.sql.functions.to_date","reference/api/pyspark.sql.functions.to_json","reference/api/pyspark.sql.functions.to_timestamp","reference/api/pyspark.sql.functions.to_utc_timestamp","reference/api/pyspark.sql.functions.transform","reference/api/pyspark.sql.functions.transform_keys","reference/api/pyspark.sql.functions.transform_values","reference/api/pyspark.sql.functions.translate","reference/api/pyspark.sql.functions.trim","reference/api/pyspark.sql.functions.trunc","reference/api/pyspark.sql.functions.udf","reference/api/pyspark.sql.functions.unbase64","reference/api/pyspark.sql.functions.unhex","reference/api/pyspark.sql.functions.unix_timestamp","reference/api/pyspark.sql.functions.upper","reference/api/pyspark.sql.functions.var_pop","reference/api/pyspark.sql.functions.var_samp","reference/api/pyspark.sql.functions.variance","reference/api/pyspark.sql.functions.weekofyear","reference/api/pyspark.sql.functions.when","reference/api/pyspark.sql.functions.window","reference/api/pyspark.sql.functions.xxhash64","reference/api/pyspark.sql.functions.year","reference/api/pyspark.sql.functions.years","reference/api/pyspark.sql.functions.zip_with","reference/api/pyspark.sql.streaming.DataStreamReader","reference/api/pyspark.sql.streaming.DataStreamReader.csv","reference/api/pyspark.sql.streaming.DataStreamReader.format","reference/api/pyspark.sql.streaming.DataStreamReader.json","reference/api/pyspark.sql.streaming.DataStreamReader.load","reference/api/pyspark.sql.streaming.DataStreamReader.option","reference/api/pyspark.sql.streaming.DataStreamReader.options","reference/api/pyspark.sql.streaming.DataStreamReader.orc","reference/api/pyspark.sql.streaming.DataStreamReader.parquet","reference/api/pyspark.sql.streaming.DataStreamReader.schema","reference/api/pyspark.sql.streaming.DataStreamReader.text","reference/api/pyspark.sql.streaming.DataStreamWriter","reference/api/pyspark.sql.streaming.DataStreamWriter.foreach","reference/api/pyspark.sql.streaming.DataStreamWriter.foreachBatch","reference/api/pyspark.sql.streaming.DataStreamWriter.format","reference/api/pyspark.sql.streaming.DataStreamWriter.option","reference/api/pyspark.sql.streaming.DataStreamWriter.options","reference/api/pyspark.sql.streaming.DataStreamWriter.outputMode","reference/api/pyspark.sql.streaming.DataStreamWriter.partitionBy","reference/api/pyspark.sql.streaming.DataStreamWriter.queryName","reference/api/pyspark.sql.streaming.DataStreamWriter.start","reference/api/pyspark.sql.streaming.DataStreamWriter.trigger","reference/api/pyspark.sql.streaming.ForeachBatchFunction","reference/api/pyspark.sql.streaming.StreamingQuery","reference/api/pyspark.sql.streaming.StreamingQuery.awaitTermination","reference/api/pyspark.sql.streaming.StreamingQuery.exception","reference/api/pyspark.sql.streaming.StreamingQuery.explain","reference/api/pyspark.sql.streaming.StreamingQuery.id","reference/api/pyspark.sql.streaming.StreamingQuery.isActive","reference/api/pyspark.sql.streaming.StreamingQuery.lastProgress","reference/api/pyspark.sql.streaming.StreamingQuery.name","reference/api/pyspark.sql.streaming.StreamingQuery.processAllAvailable","reference/api/pyspark.sql.streaming.StreamingQuery.recentProgress","reference/api/pyspark.sql.streaming.StreamingQuery.runId","reference/api/pyspark.sql.streaming.StreamingQuery.status","reference/api/pyspark.sql.streaming.StreamingQuery.stop","reference/api/pyspark.sql.streaming.StreamingQueryException","reference/api/pyspark.sql.streaming.StreamingQueryManager","reference/api/pyspark.sql.streaming.StreamingQueryManager.active","reference/api/pyspark.sql.streaming.StreamingQueryManager.awaitAnyTermination","reference/api/pyspark.sql.streaming.StreamingQueryManager.get","reference/api/pyspark.sql.streaming.StreamingQueryManager.resetTerminated","reference/api/pyspark.sql.types.ArrayType","reference/api/pyspark.sql.types.BinaryType","reference/api/pyspark.sql.types.BooleanType","reference/api/pyspark.sql.types.ByteType","reference/api/pyspark.sql.types.DataType","reference/api/pyspark.sql.types.DateType","reference/api/pyspark.sql.types.DecimalType","reference/api/pyspark.sql.types.DoubleType","reference/api/pyspark.sql.types.FloatType","reference/api/pyspark.sql.types.IntegerType","reference/api/pyspark.sql.types.LongType","reference/api/pyspark.sql.types.MapType","reference/api/pyspark.sql.types.NullType","reference/api/pyspark.sql.types.ShortType","reference/api/pyspark.sql.types.StringType","reference/api/pyspark.sql.types.StructField","reference/api/pyspark.sql.types.StructType","reference/api/pyspark.sql.types.TimestampType","reference/api/pyspark.streaming.DStream","reference/api/pyspark.streaming.DStream.cache","reference/api/pyspark.streaming.DStream.checkpoint","reference/api/pyspark.streaming.DStream.cogroup","reference/api/pyspark.streaming.DStream.combineByKey","reference/api/pyspark.streaming.DStream.context","reference/api/pyspark.streaming.DStream.count","reference/api/pyspark.streaming.DStream.countByValue","reference/api/pyspark.streaming.DStream.countByValueAndWindow","reference/api/pyspark.streaming.DStream.countByWindow","reference/api/pyspark.streaming.DStream.filter","reference/api/pyspark.streaming.DStream.flatMap","reference/api/pyspark.streaming.DStream.flatMapValues","reference/api/pyspark.streaming.DStream.foreachRDD","reference/api/pyspark.streaming.DStream.fullOuterJoin","reference/api/pyspark.streaming.DStream.glom","reference/api/pyspark.streaming.DStream.groupByKey","reference/api/pyspark.streaming.DStream.groupByKeyAndWindow","reference/api/pyspark.streaming.DStream.join","reference/api/pyspark.streaming.DStream.leftOuterJoin","reference/api/pyspark.streaming.DStream.map","reference/api/pyspark.streaming.DStream.mapPartitions","reference/api/pyspark.streaming.DStream.mapPartitionsWithIndex","reference/api/pyspark.streaming.DStream.mapValues","reference/api/pyspark.streaming.DStream.partitionBy","reference/api/pyspark.streaming.DStream.persist","reference/api/pyspark.streaming.DStream.pprint","reference/api/pyspark.streaming.DStream.reduce","reference/api/pyspark.streaming.DStream.reduceByKey","reference/api/pyspark.streaming.DStream.reduceByKeyAndWindow","reference/api/pyspark.streaming.DStream.reduceByWindow","reference/api/pyspark.streaming.DStream.repartition","reference/api/pyspark.streaming.DStream.rightOuterJoin","reference/api/pyspark.streaming.DStream.saveAsTextFiles","reference/api/pyspark.streaming.DStream.slice","reference/api/pyspark.streaming.DStream.transform","reference/api/pyspark.streaming.DStream.transformWith","reference/api/pyspark.streaming.DStream.union","reference/api/pyspark.streaming.DStream.updateStateByKey","reference/api/pyspark.streaming.DStream.window","reference/api/pyspark.streaming.StreamingContext","reference/api/pyspark.streaming.StreamingContext.addStreamingListener","reference/api/pyspark.streaming.StreamingContext.awaitTermination","reference/api/pyspark.streaming.StreamingContext.awaitTerminationOrTimeout","reference/api/pyspark.streaming.StreamingContext.binaryRecordsStream","reference/api/pyspark.streaming.StreamingContext.checkpoint","reference/api/pyspark.streaming.StreamingContext.getActive","reference/api/pyspark.streaming.StreamingContext.getActiveOrCreate","reference/api/pyspark.streaming.StreamingContext.getOrCreate","reference/api/pyspark.streaming.StreamingContext.queueStream","reference/api/pyspark.streaming.StreamingContext.remember","reference/api/pyspark.streaming.StreamingContext.socketTextStream","reference/api/pyspark.streaming.StreamingContext.sparkContext","reference/api/pyspark.streaming.StreamingContext.start","reference/api/pyspark.streaming.StreamingContext.stop","reference/api/pyspark.streaming.StreamingContext.textFileStream","reference/api/pyspark.streaming.StreamingContext.transform","reference/api/pyspark.streaming.StreamingContext.union","reference/api/pyspark.streaming.kinesis.InitialPositionInStream.LATEST","reference/api/pyspark.streaming.kinesis.InitialPositionInStream.TRIM_HORIZON","reference/api/pyspark.streaming.kinesis.KinesisUtils.createStream","reference/index","reference/pyspark","reference/pyspark.ml","reference/pyspark.mllib","reference/pyspark.resource","reference/pyspark.sql","reference/pyspark.ss","reference/pyspark.streaming","user_guide/arrow_pandas","user_guide/index","user_guide/python_packaging"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":2,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,nbsphinx:3,sphinx:56},filenames:["development/contributing.rst","development/debugging.rst","development/index.rst","development/setting_ide.rst","development/testing.rst","getting_started/index.rst","getting_started/install.rst","getting_started/quickstart.ipynb","index.rst","migration_guide/index.rst","migration_guide/pyspark_1.0_1.2_to_1.3.rst","migration_guide/pyspark_1.4_to_1.5.rst","migration_guide/pyspark_2.2_to_2.3.rst","migration_guide/pyspark_2.3.0_to_2.3.1_above.rst","migration_guide/pyspark_2.3_to_2.4.rst","migration_guide/pyspark_2.4_to_3.0.rst","reference/api/pyspark.Accumulator.rst","reference/api/pyspark.Accumulator.add.rst","reference/api/pyspark.Accumulator.value.rst","reference/api/pyspark.AccumulatorParam.rst","reference/api/pyspark.AccumulatorParam.addInPlace.rst","reference/api/pyspark.AccumulatorParam.zero.rst","reference/api/pyspark.BarrierTaskContext.rst","reference/api/pyspark.BarrierTaskContext.allGather.rst","reference/api/pyspark.BarrierTaskContext.attemptNumber.rst","reference/api/pyspark.BarrierTaskContext.barrier.rst","reference/api/pyspark.BarrierTaskContext.get.rst","reference/api/pyspark.BarrierTaskContext.getLocalProperty.rst","reference/api/pyspark.BarrierTaskContext.getTaskInfos.rst","reference/api/pyspark.BarrierTaskContext.partitionId.rst","reference/api/pyspark.BarrierTaskContext.resources.rst","reference/api/pyspark.BarrierTaskContext.stageId.rst","reference/api/pyspark.BarrierTaskContext.taskAttemptId.rst","reference/api/pyspark.BarrierTaskInfo.rst","reference/api/pyspark.Broadcast.rst","reference/api/pyspark.Broadcast.destroy.rst","reference/api/pyspark.Broadcast.dump.rst","reference/api/pyspark.Broadcast.load.rst","reference/api/pyspark.Broadcast.load_from_path.rst","reference/api/pyspark.Broadcast.unpersist.rst","reference/api/pyspark.Broadcast.value.rst","reference/api/pyspark.InheritableThread.rst","reference/api/pyspark.RDD.rst","reference/api/pyspark.RDD.aggregate.rst","reference/api/pyspark.RDD.aggregateByKey.rst","reference/api/pyspark.RDD.barrier.rst","reference/api/pyspark.RDD.cache.rst","reference/api/pyspark.RDD.cartesian.rst","reference/api/pyspark.RDD.checkpoint.rst","reference/api/pyspark.RDD.coalesce.rst","reference/api/pyspark.RDD.cogroup.rst","reference/api/pyspark.RDD.collect.rst","reference/api/pyspark.RDD.collectAsMap.rst","reference/api/pyspark.RDD.collectWithJobGroup.rst","reference/api/pyspark.RDD.combineByKey.rst","reference/api/pyspark.RDD.context.rst","reference/api/pyspark.RDD.count.rst","reference/api/pyspark.RDD.countApprox.rst","reference/api/pyspark.RDD.countApproxDistinct.rst","reference/api/pyspark.RDD.countByKey.rst","reference/api/pyspark.RDD.countByValue.rst","reference/api/pyspark.RDD.distinct.rst","reference/api/pyspark.RDD.filter.rst","reference/api/pyspark.RDD.first.rst","reference/api/pyspark.RDD.flatMap.rst","reference/api/pyspark.RDD.flatMapValues.rst","reference/api/pyspark.RDD.fold.rst","reference/api/pyspark.RDD.foldByKey.rst","reference/api/pyspark.RDD.foreach.rst","reference/api/pyspark.RDD.foreachPartition.rst","reference/api/pyspark.RDD.fullOuterJoin.rst","reference/api/pyspark.RDD.getCheckpointFile.rst","reference/api/pyspark.RDD.getNumPartitions.rst","reference/api/pyspark.RDD.getResourceProfile.rst","reference/api/pyspark.RDD.getStorageLevel.rst","reference/api/pyspark.RDD.glom.rst","reference/api/pyspark.RDD.groupBy.rst","reference/api/pyspark.RDD.groupByKey.rst","reference/api/pyspark.RDD.groupWith.rst","reference/api/pyspark.RDD.histogram.rst","reference/api/pyspark.RDD.id.rst","reference/api/pyspark.RDD.intersection.rst","reference/api/pyspark.RDD.isCheckpointed.rst","reference/api/pyspark.RDD.isEmpty.rst","reference/api/pyspark.RDD.isLocallyCheckpointed.rst","reference/api/pyspark.RDD.join.rst","reference/api/pyspark.RDD.keyBy.rst","reference/api/pyspark.RDD.keys.rst","reference/api/pyspark.RDD.leftOuterJoin.rst","reference/api/pyspark.RDD.localCheckpoint.rst","reference/api/pyspark.RDD.lookup.rst","reference/api/pyspark.RDD.map.rst","reference/api/pyspark.RDD.mapPartitions.rst","reference/api/pyspark.RDD.mapPartitionsWithIndex.rst","reference/api/pyspark.RDD.mapPartitionsWithSplit.rst","reference/api/pyspark.RDD.mapValues.rst","reference/api/pyspark.RDD.max.rst","reference/api/pyspark.RDD.mean.rst","reference/api/pyspark.RDD.meanApprox.rst","reference/api/pyspark.RDD.min.rst","reference/api/pyspark.RDD.name.rst","reference/api/pyspark.RDD.partitionBy.rst","reference/api/pyspark.RDD.persist.rst","reference/api/pyspark.RDD.pipe.rst","reference/api/pyspark.RDD.randomSplit.rst","reference/api/pyspark.RDD.reduce.rst","reference/api/pyspark.RDD.reduceByKey.rst","reference/api/pyspark.RDD.reduceByKeyLocally.rst","reference/api/pyspark.RDD.repartition.rst","reference/api/pyspark.RDD.repartitionAndSortWithinPartitions.rst","reference/api/pyspark.RDD.rightOuterJoin.rst","reference/api/pyspark.RDD.sample.rst","reference/api/pyspark.RDD.sampleByKey.rst","reference/api/pyspark.RDD.sampleStdev.rst","reference/api/pyspark.RDD.sampleVariance.rst","reference/api/pyspark.RDD.saveAsHadoopDataset.rst","reference/api/pyspark.RDD.saveAsHadoopFile.rst","reference/api/pyspark.RDD.saveAsNewAPIHadoopDataset.rst","reference/api/pyspark.RDD.saveAsNewAPIHadoopFile.rst","reference/api/pyspark.RDD.saveAsPickleFile.rst","reference/api/pyspark.RDD.saveAsSequenceFile.rst","reference/api/pyspark.RDD.saveAsTextFile.rst","reference/api/pyspark.RDD.setName.rst","reference/api/pyspark.RDD.sortBy.rst","reference/api/pyspark.RDD.sortByKey.rst","reference/api/pyspark.RDD.stats.rst","reference/api/pyspark.RDD.stdev.rst","reference/api/pyspark.RDD.subtract.rst","reference/api/pyspark.RDD.subtractByKey.rst","reference/api/pyspark.RDD.sum.rst","reference/api/pyspark.RDD.sumApprox.rst","reference/api/pyspark.RDD.take.rst","reference/api/pyspark.RDD.takeOrdered.rst","reference/api/pyspark.RDD.takeSample.rst","reference/api/pyspark.RDD.toDebugString.rst","reference/api/pyspark.RDD.toLocalIterator.rst","reference/api/pyspark.RDD.top.rst","reference/api/pyspark.RDD.treeAggregate.rst","reference/api/pyspark.RDD.treeReduce.rst","reference/api/pyspark.RDD.union.rst","reference/api/pyspark.RDD.unpersist.rst","reference/api/pyspark.RDD.values.rst","reference/api/pyspark.RDD.variance.rst","reference/api/pyspark.RDD.withResources.rst","reference/api/pyspark.RDD.zip.rst","reference/api/pyspark.RDD.zipWithIndex.rst","reference/api/pyspark.RDD.zipWithUniqueId.rst","reference/api/pyspark.RDDBarrier.rst","reference/api/pyspark.RDDBarrier.mapPartitions.rst","reference/api/pyspark.RDDBarrier.mapPartitionsWithIndex.rst","reference/api/pyspark.SparkConf.rst","reference/api/pyspark.SparkConf.contains.rst","reference/api/pyspark.SparkConf.get.rst","reference/api/pyspark.SparkConf.getAll.rst","reference/api/pyspark.SparkConf.set.rst","reference/api/pyspark.SparkConf.setAll.rst","reference/api/pyspark.SparkConf.setAppName.rst","reference/api/pyspark.SparkConf.setExecutorEnv.rst","reference/api/pyspark.SparkConf.setIfMissing.rst","reference/api/pyspark.SparkConf.setMaster.rst","reference/api/pyspark.SparkConf.setSparkHome.rst","reference/api/pyspark.SparkConf.toDebugString.rst","reference/api/pyspark.SparkContext.rst","reference/api/pyspark.SparkContext.PACKAGE_EXTENSIONS.rst","reference/api/pyspark.SparkContext.accumulator.rst","reference/api/pyspark.SparkContext.addFile.rst","reference/api/pyspark.SparkContext.addPyFile.rst","reference/api/pyspark.SparkContext.applicationId.rst","reference/api/pyspark.SparkContext.binaryFiles.rst","reference/api/pyspark.SparkContext.binaryRecords.rst","reference/api/pyspark.SparkContext.broadcast.rst","reference/api/pyspark.SparkContext.cancelAllJobs.rst","reference/api/pyspark.SparkContext.cancelJobGroup.rst","reference/api/pyspark.SparkContext.defaultMinPartitions.rst","reference/api/pyspark.SparkContext.defaultParallelism.rst","reference/api/pyspark.SparkContext.dump_profiles.rst","reference/api/pyspark.SparkContext.emptyRDD.rst","reference/api/pyspark.SparkContext.getCheckpointDir.rst","reference/api/pyspark.SparkContext.getConf.rst","reference/api/pyspark.SparkContext.getLocalProperty.rst","reference/api/pyspark.SparkContext.getOrCreate.rst","reference/api/pyspark.SparkContext.hadoopFile.rst","reference/api/pyspark.SparkContext.hadoopRDD.rst","reference/api/pyspark.SparkContext.newAPIHadoopFile.rst","reference/api/pyspark.SparkContext.newAPIHadoopRDD.rst","reference/api/pyspark.SparkContext.parallelize.rst","reference/api/pyspark.SparkContext.pickleFile.rst","reference/api/pyspark.SparkContext.range.rst","reference/api/pyspark.SparkContext.resources.rst","reference/api/pyspark.SparkContext.runJob.rst","reference/api/pyspark.SparkContext.sequenceFile.rst","reference/api/pyspark.SparkContext.setCheckpointDir.rst","reference/api/pyspark.SparkContext.setJobDescription.rst","reference/api/pyspark.SparkContext.setJobGroup.rst","reference/api/pyspark.SparkContext.setLocalProperty.rst","reference/api/pyspark.SparkContext.setLogLevel.rst","reference/api/pyspark.SparkContext.setSystemProperty.rst","reference/api/pyspark.SparkContext.show_profiles.rst","reference/api/pyspark.SparkContext.sparkUser.rst","reference/api/pyspark.SparkContext.startTime.rst","reference/api/pyspark.SparkContext.statusTracker.rst","reference/api/pyspark.SparkContext.stop.rst","reference/api/pyspark.SparkContext.textFile.rst","reference/api/pyspark.SparkContext.uiWebUrl.rst","reference/api/pyspark.SparkContext.union.rst","reference/api/pyspark.SparkContext.version.rst","reference/api/pyspark.SparkContext.wholeTextFiles.rst","reference/api/pyspark.SparkFiles.rst","reference/api/pyspark.SparkFiles.get.rst","reference/api/pyspark.SparkFiles.getRootDirectory.rst","reference/api/pyspark.StorageLevel.rst","reference/api/pyspark.StorageLevel.DISK_ONLY.rst","reference/api/pyspark.StorageLevel.DISK_ONLY_2.rst","reference/api/pyspark.StorageLevel.DISK_ONLY_3.rst","reference/api/pyspark.StorageLevel.MEMORY_AND_DISK.rst","reference/api/pyspark.StorageLevel.MEMORY_AND_DISK_2.rst","reference/api/pyspark.StorageLevel.MEMORY_ONLY.rst","reference/api/pyspark.StorageLevel.MEMORY_ONLY_2.rst","reference/api/pyspark.StorageLevel.OFF_HEAP.rst","reference/api/pyspark.TaskContext.rst","reference/api/pyspark.TaskContext.attemptNumber.rst","reference/api/pyspark.TaskContext.get.rst","reference/api/pyspark.TaskContext.getLocalProperty.rst","reference/api/pyspark.TaskContext.partitionId.rst","reference/api/pyspark.TaskContext.resources.rst","reference/api/pyspark.TaskContext.stageId.rst","reference/api/pyspark.TaskContext.taskAttemptId.rst","reference/api/pyspark.ml.Estimator.rst","reference/api/pyspark.ml.Model.rst","reference/api/pyspark.ml.Pipeline.rst","reference/api/pyspark.ml.PipelineModel.rst","reference/api/pyspark.ml.PredictionModel.rst","reference/api/pyspark.ml.Predictor.rst","reference/api/pyspark.ml.Transformer.rst","reference/api/pyspark.ml.UnaryTransformer.rst","reference/api/pyspark.ml.classification.BinaryLogisticRegressionSummary.rst","reference/api/pyspark.ml.classification.BinaryLogisticRegressionTrainingSummary.rst","reference/api/pyspark.ml.classification.BinaryRandomForestClassificationSummary.rst","reference/api/pyspark.ml.classification.BinaryRandomForestClassificationTrainingSummary.rst","reference/api/pyspark.ml.classification.DecisionTreeClassificationModel.rst","reference/api/pyspark.ml.classification.DecisionTreeClassifier.rst","reference/api/pyspark.ml.classification.FMClassificationModel.rst","reference/api/pyspark.ml.classification.FMClassificationSummary.rst","reference/api/pyspark.ml.classification.FMClassificationTrainingSummary.rst","reference/api/pyspark.ml.classification.FMClassifier.rst","reference/api/pyspark.ml.classification.GBTClassificationModel.rst","reference/api/pyspark.ml.classification.GBTClassifier.rst","reference/api/pyspark.ml.classification.LinearSVC.rst","reference/api/pyspark.ml.classification.LinearSVCModel.rst","reference/api/pyspark.ml.classification.LinearSVCSummary.rst","reference/api/pyspark.ml.classification.LinearSVCTrainingSummary.rst","reference/api/pyspark.ml.classification.LogisticRegression.rst","reference/api/pyspark.ml.classification.LogisticRegressionModel.rst","reference/api/pyspark.ml.classification.LogisticRegressionSummary.rst","reference/api/pyspark.ml.classification.LogisticRegressionTrainingSummary.rst","reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationModel.rst","reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationSummary.rst","reference/api/pyspark.ml.classification.MultilayerPerceptronClassificationTrainingSummary.rst","reference/api/pyspark.ml.classification.MultilayerPerceptronClassifier.rst","reference/api/pyspark.ml.classification.NaiveBayes.rst","reference/api/pyspark.ml.classification.NaiveBayesModel.rst","reference/api/pyspark.ml.classification.OneVsRest.rst","reference/api/pyspark.ml.classification.OneVsRestModel.rst","reference/api/pyspark.ml.classification.RandomForestClassificationModel.rst","reference/api/pyspark.ml.classification.RandomForestClassificationSummary.rst","reference/api/pyspark.ml.classification.RandomForestClassificationTrainingSummary.rst","reference/api/pyspark.ml.classification.RandomForestClassifier.rst","reference/api/pyspark.ml.clustering.BisectingKMeans.rst","reference/api/pyspark.ml.clustering.BisectingKMeansModel.rst","reference/api/pyspark.ml.clustering.BisectingKMeansSummary.rst","reference/api/pyspark.ml.clustering.DistributedLDAModel.rst","reference/api/pyspark.ml.clustering.GaussianMixture.rst","reference/api/pyspark.ml.clustering.GaussianMixtureModel.rst","reference/api/pyspark.ml.clustering.GaussianMixtureSummary.rst","reference/api/pyspark.ml.clustering.KMeans.rst","reference/api/pyspark.ml.clustering.KMeansModel.rst","reference/api/pyspark.ml.clustering.KMeansSummary.rst","reference/api/pyspark.ml.clustering.LDA.rst","reference/api/pyspark.ml.clustering.LDAModel.rst","reference/api/pyspark.ml.clustering.LocalLDAModel.rst","reference/api/pyspark.ml.clustering.PowerIterationClustering.rst","reference/api/pyspark.ml.evaluation.BinaryClassificationEvaluator.rst","reference/api/pyspark.ml.evaluation.ClusteringEvaluator.rst","reference/api/pyspark.ml.evaluation.Evaluator.rst","reference/api/pyspark.ml.evaluation.MulticlassClassificationEvaluator.rst","reference/api/pyspark.ml.evaluation.MultilabelClassificationEvaluator.rst","reference/api/pyspark.ml.evaluation.RankingEvaluator.rst","reference/api/pyspark.ml.evaluation.RegressionEvaluator.rst","reference/api/pyspark.ml.feature.Binarizer.rst","reference/api/pyspark.ml.feature.BucketedRandomProjectionLSH.rst","reference/api/pyspark.ml.feature.BucketedRandomProjectionLSHModel.rst","reference/api/pyspark.ml.feature.Bucketizer.rst","reference/api/pyspark.ml.feature.ChiSqSelector.rst","reference/api/pyspark.ml.feature.ChiSqSelectorModel.rst","reference/api/pyspark.ml.feature.CountVectorizer.rst","reference/api/pyspark.ml.feature.CountVectorizerModel.rst","reference/api/pyspark.ml.feature.DCT.rst","reference/api/pyspark.ml.feature.ElementwiseProduct.rst","reference/api/pyspark.ml.feature.FeatureHasher.rst","reference/api/pyspark.ml.feature.HashingTF.rst","reference/api/pyspark.ml.feature.IDF.rst","reference/api/pyspark.ml.feature.IDFModel.rst","reference/api/pyspark.ml.feature.Imputer.rst","reference/api/pyspark.ml.feature.ImputerModel.rst","reference/api/pyspark.ml.feature.IndexToString.rst","reference/api/pyspark.ml.feature.Interaction.rst","reference/api/pyspark.ml.feature.MaxAbsScaler.rst","reference/api/pyspark.ml.feature.MaxAbsScalerModel.rst","reference/api/pyspark.ml.feature.MinHashLSH.rst","reference/api/pyspark.ml.feature.MinHashLSHModel.rst","reference/api/pyspark.ml.feature.MinMaxScaler.rst","reference/api/pyspark.ml.feature.MinMaxScalerModel.rst","reference/api/pyspark.ml.feature.NGram.rst","reference/api/pyspark.ml.feature.Normalizer.rst","reference/api/pyspark.ml.feature.OneHotEncoder.rst","reference/api/pyspark.ml.feature.OneHotEncoderModel.rst","reference/api/pyspark.ml.feature.PCA.rst","reference/api/pyspark.ml.feature.PCAModel.rst","reference/api/pyspark.ml.feature.PolynomialExpansion.rst","reference/api/pyspark.ml.feature.QuantileDiscretizer.rst","reference/api/pyspark.ml.feature.RFormula.rst","reference/api/pyspark.ml.feature.RFormulaModel.rst","reference/api/pyspark.ml.feature.RegexTokenizer.rst","reference/api/pyspark.ml.feature.RobustScaler.rst","reference/api/pyspark.ml.feature.RobustScalerModel.rst","reference/api/pyspark.ml.feature.SQLTransformer.rst","reference/api/pyspark.ml.feature.StandardScaler.rst","reference/api/pyspark.ml.feature.StandardScalerModel.rst","reference/api/pyspark.ml.feature.StopWordsRemover.rst","reference/api/pyspark.ml.feature.StringIndexer.rst","reference/api/pyspark.ml.feature.StringIndexerModel.rst","reference/api/pyspark.ml.feature.Tokenizer.rst","reference/api/pyspark.ml.feature.UnivariateFeatureSelector.rst","reference/api/pyspark.ml.feature.UnivariateFeatureSelectorModel.rst","reference/api/pyspark.ml.feature.VarianceThresholdSelector.rst","reference/api/pyspark.ml.feature.VarianceThresholdSelectorModel.rst","reference/api/pyspark.ml.feature.VectorAssembler.rst","reference/api/pyspark.ml.feature.VectorIndexer.rst","reference/api/pyspark.ml.feature.VectorIndexerModel.rst","reference/api/pyspark.ml.feature.VectorSizeHint.rst","reference/api/pyspark.ml.feature.VectorSlicer.rst","reference/api/pyspark.ml.feature.Word2Vec.rst","reference/api/pyspark.ml.feature.Word2VecModel.rst","reference/api/pyspark.ml.fpm.FPGrowth.rst","reference/api/pyspark.ml.fpm.FPGrowthModel.rst","reference/api/pyspark.ml.fpm.PrefixSpan.rst","reference/api/pyspark.ml.functions.array_to_vector.rst","reference/api/pyspark.ml.functions.vector_to_array.rst","reference/api/pyspark.ml.image.ImageSchema.rst","reference/api/pyspark.ml.image._ImageSchema.rst","reference/api/pyspark.ml.linalg.DenseMatrix.rst","reference/api/pyspark.ml.linalg.DenseVector.rst","reference/api/pyspark.ml.linalg.Matrices.rst","reference/api/pyspark.ml.linalg.Matrix.rst","reference/api/pyspark.ml.linalg.SparseMatrix.rst","reference/api/pyspark.ml.linalg.SparseVector.rst","reference/api/pyspark.ml.linalg.Vector.rst","reference/api/pyspark.ml.linalg.Vectors.rst","reference/api/pyspark.ml.param.Param.rst","reference/api/pyspark.ml.param.Params.rst","reference/api/pyspark.ml.param.TypeConverters.rst","reference/api/pyspark.ml.recommendation.ALS.rst","reference/api/pyspark.ml.recommendation.ALSModel.rst","reference/api/pyspark.ml.regression.AFTSurvivalRegression.rst","reference/api/pyspark.ml.regression.AFTSurvivalRegressionModel.rst","reference/api/pyspark.ml.regression.DecisionTreeRegressionModel.rst","reference/api/pyspark.ml.regression.DecisionTreeRegressor.rst","reference/api/pyspark.ml.regression.FMRegressionModel.rst","reference/api/pyspark.ml.regression.FMRegressor.rst","reference/api/pyspark.ml.regression.GBTRegressionModel.rst","reference/api/pyspark.ml.regression.GBTRegressor.rst","reference/api/pyspark.ml.regression.GeneralizedLinearRegression.rst","reference/api/pyspark.ml.regression.GeneralizedLinearRegressionModel.rst","reference/api/pyspark.ml.regression.GeneralizedLinearRegressionSummary.rst","reference/api/pyspark.ml.regression.GeneralizedLinearRegressionTrainingSummary.rst","reference/api/pyspark.ml.regression.IsotonicRegression.rst","reference/api/pyspark.ml.regression.IsotonicRegressionModel.rst","reference/api/pyspark.ml.regression.LinearRegression.rst","reference/api/pyspark.ml.regression.LinearRegressionModel.rst","reference/api/pyspark.ml.regression.LinearRegressionSummary.rst","reference/api/pyspark.ml.regression.LinearRegressionTrainingSummary.rst","reference/api/pyspark.ml.regression.RandomForestRegressionModel.rst","reference/api/pyspark.ml.regression.RandomForestRegressor.rst","reference/api/pyspark.ml.stat.ChiSquareTest.rst","reference/api/pyspark.ml.stat.Correlation.rst","reference/api/pyspark.ml.stat.KolmogorovSmirnovTest.rst","reference/api/pyspark.ml.stat.MultivariateGaussian.rst","reference/api/pyspark.ml.stat.Summarizer.rst","reference/api/pyspark.ml.stat.SummaryBuilder.rst","reference/api/pyspark.ml.tuning.CrossValidator.rst","reference/api/pyspark.ml.tuning.CrossValidatorModel.rst","reference/api/pyspark.ml.tuning.ParamGridBuilder.rst","reference/api/pyspark.ml.tuning.TrainValidationSplit.rst","reference/api/pyspark.ml.tuning.TrainValidationSplitModel.rst","reference/api/pyspark.ml.util.BaseReadWrite.rst","reference/api/pyspark.ml.util.DefaultParamsReadable.rst","reference/api/pyspark.ml.util.DefaultParamsReader.rst","reference/api/pyspark.ml.util.DefaultParamsWritable.rst","reference/api/pyspark.ml.util.DefaultParamsWriter.rst","reference/api/pyspark.ml.util.GeneralMLWriter.rst","reference/api/pyspark.ml.util.HasTrainingSummary.rst","reference/api/pyspark.ml.util.Identifiable.rst","reference/api/pyspark.ml.util.MLReadable.rst","reference/api/pyspark.ml.util.MLReader.rst","reference/api/pyspark.ml.util.MLWritable.rst","reference/api/pyspark.ml.util.MLWriter.rst","reference/api/pyspark.mllib.classification.LogisticRegressionModel.rst","reference/api/pyspark.mllib.classification.LogisticRegressionWithLBFGS.rst","reference/api/pyspark.mllib.classification.LogisticRegressionWithSGD.rst","reference/api/pyspark.mllib.classification.NaiveBayes.rst","reference/api/pyspark.mllib.classification.NaiveBayesModel.rst","reference/api/pyspark.mllib.classification.SVMModel.rst","reference/api/pyspark.mllib.classification.SVMWithSGD.rst","reference/api/pyspark.mllib.classification.StreamingLogisticRegressionWithSGD.rst","reference/api/pyspark.mllib.clustering.BisectingKMeans.rst","reference/api/pyspark.mllib.clustering.BisectingKMeansModel.rst","reference/api/pyspark.mllib.clustering.GaussianMixture.rst","reference/api/pyspark.mllib.clustering.GaussianMixtureModel.rst","reference/api/pyspark.mllib.clustering.KMeans.rst","reference/api/pyspark.mllib.clustering.KMeansModel.rst","reference/api/pyspark.mllib.clustering.LDA.rst","reference/api/pyspark.mllib.clustering.LDAModel.rst","reference/api/pyspark.mllib.clustering.PowerIterationClustering.rst","reference/api/pyspark.mllib.clustering.PowerIterationClusteringModel.rst","reference/api/pyspark.mllib.clustering.StreamingKMeans.rst","reference/api/pyspark.mllib.clustering.StreamingKMeansModel.rst","reference/api/pyspark.mllib.evaluation.BinaryClassificationMetrics.rst","reference/api/pyspark.mllib.evaluation.MulticlassMetrics.rst","reference/api/pyspark.mllib.evaluation.RankingMetrics.rst","reference/api/pyspark.mllib.evaluation.RegressionMetrics.rst","reference/api/pyspark.mllib.feature.ChiSqSelector.rst","reference/api/pyspark.mllib.feature.ChiSqSelectorModel.rst","reference/api/pyspark.mllib.feature.ElementwiseProduct.rst","reference/api/pyspark.mllib.feature.HashingTF.rst","reference/api/pyspark.mllib.feature.IDF.rst","reference/api/pyspark.mllib.feature.IDFModel.rst","reference/api/pyspark.mllib.feature.Normalizer.rst","reference/api/pyspark.mllib.feature.StandardScaler.rst","reference/api/pyspark.mllib.feature.StandardScalerModel.rst","reference/api/pyspark.mllib.feature.Word2Vec.rst","reference/api/pyspark.mllib.feature.Word2VecModel.rst","reference/api/pyspark.mllib.fpm.FPGrowth.rst","reference/api/pyspark.mllib.fpm.FPGrowthModel.rst","reference/api/pyspark.mllib.fpm.PrefixSpan.rst","reference/api/pyspark.mllib.fpm.PrefixSpanModel.rst","reference/api/pyspark.mllib.linalg.DenseMatrix.rst","reference/api/pyspark.mllib.linalg.DenseVector.rst","reference/api/pyspark.mllib.linalg.Matrices.rst","reference/api/pyspark.mllib.linalg.Matrix.rst","reference/api/pyspark.mllib.linalg.QRDecomposition.rst","reference/api/pyspark.mllib.linalg.SparseMatrix.rst","reference/api/pyspark.mllib.linalg.SparseVector.rst","reference/api/pyspark.mllib.linalg.Vector.rst","reference/api/pyspark.mllib.linalg.Vectors.rst","reference/api/pyspark.mllib.linalg.distributed.BlockMatrix.rst","reference/api/pyspark.mllib.linalg.distributed.CoordinateMatrix.rst","reference/api/pyspark.mllib.linalg.distributed.DistributedMatrix.rst","reference/api/pyspark.mllib.linalg.distributed.IndexedRow.rst","reference/api/pyspark.mllib.linalg.distributed.IndexedRowMatrix.rst","reference/api/pyspark.mllib.linalg.distributed.MatrixEntry.rst","reference/api/pyspark.mllib.linalg.distributed.RowMatrix.rst","reference/api/pyspark.mllib.linalg.distributed.SingularValueDecomposition.rst","reference/api/pyspark.mllib.random.RandomRDDs.rst","reference/api/pyspark.mllib.recommendation.ALS.rst","reference/api/pyspark.mllib.recommendation.MatrixFactorizationModel.rst","reference/api/pyspark.mllib.recommendation.Rating.rst","reference/api/pyspark.mllib.regression.IsotonicRegression.rst","reference/api/pyspark.mllib.regression.IsotonicRegressionModel.rst","reference/api/pyspark.mllib.regression.LabeledPoint.rst","reference/api/pyspark.mllib.regression.LassoModel.rst","reference/api/pyspark.mllib.regression.LassoWithSGD.rst","reference/api/pyspark.mllib.regression.LinearModel.rst","reference/api/pyspark.mllib.regression.LinearRegressionModel.rst","reference/api/pyspark.mllib.regression.LinearRegressionWithSGD.rst","reference/api/pyspark.mllib.regression.RidgeRegressionModel.rst","reference/api/pyspark.mllib.regression.RidgeRegressionWithSGD.rst","reference/api/pyspark.mllib.regression.StreamingLinearAlgorithm.rst","reference/api/pyspark.mllib.regression.StreamingLinearRegressionWithSGD.rst","reference/api/pyspark.mllib.stat.ChiSqTestResult.rst","reference/api/pyspark.mllib.stat.KernelDensity.rst","reference/api/pyspark.mllib.stat.KolmogorovSmirnovTestResult.rst","reference/api/pyspark.mllib.stat.MultivariateGaussian.rst","reference/api/pyspark.mllib.stat.MultivariateStatisticalSummary.rst","reference/api/pyspark.mllib.stat.Statistics.rst","reference/api/pyspark.mllib.tree.DecisionTree.rst","reference/api/pyspark.mllib.tree.DecisionTreeModel.rst","reference/api/pyspark.mllib.tree.GradientBoostedTrees.rst","reference/api/pyspark.mllib.tree.GradientBoostedTreesModel.rst","reference/api/pyspark.mllib.tree.RandomForest.rst","reference/api/pyspark.mllib.tree.RandomForestModel.rst","reference/api/pyspark.mllib.util.JavaLoader.rst","reference/api/pyspark.mllib.util.JavaSaveable.rst","reference/api/pyspark.mllib.util.LinearDataGenerator.rst","reference/api/pyspark.mllib.util.Loader.rst","reference/api/pyspark.mllib.util.MLUtils.rst","reference/api/pyspark.mllib.util.Saveable.rst","reference/api/pyspark.resource.ExecutorResourceRequest.rst","reference/api/pyspark.resource.ExecutorResourceRequests.rst","reference/api/pyspark.resource.ResourceInformation.rst","reference/api/pyspark.resource.ResourceProfile.rst","reference/api/pyspark.resource.ResourceProfileBuilder.rst","reference/api/pyspark.resource.TaskResourceRequest.rst","reference/api/pyspark.resource.TaskResourceRequests.rst","reference/api/pyspark.sql.Column.rst","reference/api/pyspark.sql.Column.alias.rst","reference/api/pyspark.sql.Column.asc.rst","reference/api/pyspark.sql.Column.asc_nulls_first.rst","reference/api/pyspark.sql.Column.asc_nulls_last.rst","reference/api/pyspark.sql.Column.astype.rst","reference/api/pyspark.sql.Column.between.rst","reference/api/pyspark.sql.Column.bitwiseAND.rst","reference/api/pyspark.sql.Column.bitwiseOR.rst","reference/api/pyspark.sql.Column.bitwiseXOR.rst","reference/api/pyspark.sql.Column.cast.rst","reference/api/pyspark.sql.Column.contains.rst","reference/api/pyspark.sql.Column.desc.rst","reference/api/pyspark.sql.Column.desc_nulls_first.rst","reference/api/pyspark.sql.Column.desc_nulls_last.rst","reference/api/pyspark.sql.Column.dropFields.rst","reference/api/pyspark.sql.Column.endswith.rst","reference/api/pyspark.sql.Column.eqNullSafe.rst","reference/api/pyspark.sql.Column.getField.rst","reference/api/pyspark.sql.Column.getItem.rst","reference/api/pyspark.sql.Column.isNotNull.rst","reference/api/pyspark.sql.Column.isNull.rst","reference/api/pyspark.sql.Column.isin.rst","reference/api/pyspark.sql.Column.like.rst","reference/api/pyspark.sql.Column.name.rst","reference/api/pyspark.sql.Column.otherwise.rst","reference/api/pyspark.sql.Column.over.rst","reference/api/pyspark.sql.Column.rlike.rst","reference/api/pyspark.sql.Column.startswith.rst","reference/api/pyspark.sql.Column.substr.rst","reference/api/pyspark.sql.Column.when.rst","reference/api/pyspark.sql.Column.withField.rst","reference/api/pyspark.sql.DataFrame.rst","reference/api/pyspark.sql.DataFrame.agg.rst","reference/api/pyspark.sql.DataFrame.alias.rst","reference/api/pyspark.sql.DataFrame.approxQuantile.rst","reference/api/pyspark.sql.DataFrame.cache.rst","reference/api/pyspark.sql.DataFrame.checkpoint.rst","reference/api/pyspark.sql.DataFrame.coalesce.rst","reference/api/pyspark.sql.DataFrame.colRegex.rst","reference/api/pyspark.sql.DataFrame.collect.rst","reference/api/pyspark.sql.DataFrame.columns.rst","reference/api/pyspark.sql.DataFrame.corr.rst","reference/api/pyspark.sql.DataFrame.count.rst","reference/api/pyspark.sql.DataFrame.cov.rst","reference/api/pyspark.sql.DataFrame.createGlobalTempView.rst","reference/api/pyspark.sql.DataFrame.createOrReplaceGlobalTempView.rst","reference/api/pyspark.sql.DataFrame.createOrReplaceTempView.rst","reference/api/pyspark.sql.DataFrame.createTempView.rst","reference/api/pyspark.sql.DataFrame.crossJoin.rst","reference/api/pyspark.sql.DataFrame.crosstab.rst","reference/api/pyspark.sql.DataFrame.cube.rst","reference/api/pyspark.sql.DataFrame.describe.rst","reference/api/pyspark.sql.DataFrame.distinct.rst","reference/api/pyspark.sql.DataFrame.drop.rst","reference/api/pyspark.sql.DataFrame.dropDuplicates.rst","reference/api/pyspark.sql.DataFrame.drop_duplicates.rst","reference/api/pyspark.sql.DataFrame.dropna.rst","reference/api/pyspark.sql.DataFrame.dtypes.rst","reference/api/pyspark.sql.DataFrame.exceptAll.rst","reference/api/pyspark.sql.DataFrame.explain.rst","reference/api/pyspark.sql.DataFrame.fillna.rst","reference/api/pyspark.sql.DataFrame.filter.rst","reference/api/pyspark.sql.DataFrame.first.rst","reference/api/pyspark.sql.DataFrame.foreach.rst","reference/api/pyspark.sql.DataFrame.foreachPartition.rst","reference/api/pyspark.sql.DataFrame.freqItems.rst","reference/api/pyspark.sql.DataFrame.groupBy.rst","reference/api/pyspark.sql.DataFrame.head.rst","reference/api/pyspark.sql.DataFrame.hint.rst","reference/api/pyspark.sql.DataFrame.inputFiles.rst","reference/api/pyspark.sql.DataFrame.intersect.rst","reference/api/pyspark.sql.DataFrame.intersectAll.rst","reference/api/pyspark.sql.DataFrame.isLocal.rst","reference/api/pyspark.sql.DataFrame.isStreaming.rst","reference/api/pyspark.sql.DataFrame.join.rst","reference/api/pyspark.sql.DataFrame.limit.rst","reference/api/pyspark.sql.DataFrame.localCheckpoint.rst","reference/api/pyspark.sql.DataFrame.mapInPandas.rst","reference/api/pyspark.sql.DataFrame.na.rst","reference/api/pyspark.sql.DataFrame.orderBy.rst","reference/api/pyspark.sql.DataFrame.persist.rst","reference/api/pyspark.sql.DataFrame.printSchema.rst","reference/api/pyspark.sql.DataFrame.randomSplit.rst","reference/api/pyspark.sql.DataFrame.rdd.rst","reference/api/pyspark.sql.DataFrame.registerTempTable.rst","reference/api/pyspark.sql.DataFrame.repartition.rst","reference/api/pyspark.sql.DataFrame.repartitionByRange.rst","reference/api/pyspark.sql.DataFrame.replace.rst","reference/api/pyspark.sql.DataFrame.rollup.rst","reference/api/pyspark.sql.DataFrame.sameSemantics.rst","reference/api/pyspark.sql.DataFrame.sample.rst","reference/api/pyspark.sql.DataFrame.sampleBy.rst","reference/api/pyspark.sql.DataFrame.schema.rst","reference/api/pyspark.sql.DataFrame.select.rst","reference/api/pyspark.sql.DataFrame.selectExpr.rst","reference/api/pyspark.sql.DataFrame.semanticHash.rst","reference/api/pyspark.sql.DataFrame.show.rst","reference/api/pyspark.sql.DataFrame.sort.rst","reference/api/pyspark.sql.DataFrame.sortWithinPartitions.rst","reference/api/pyspark.sql.DataFrame.stat.rst","reference/api/pyspark.sql.DataFrame.storageLevel.rst","reference/api/pyspark.sql.DataFrame.subtract.rst","reference/api/pyspark.sql.DataFrame.summary.rst","reference/api/pyspark.sql.DataFrame.tail.rst","reference/api/pyspark.sql.DataFrame.take.rst","reference/api/pyspark.sql.DataFrame.toDF.rst","reference/api/pyspark.sql.DataFrame.toJSON.rst","reference/api/pyspark.sql.DataFrame.toLocalIterator.rst","reference/api/pyspark.sql.DataFrame.toPandas.rst","reference/api/pyspark.sql.DataFrame.transform.rst","reference/api/pyspark.sql.DataFrame.union.rst","reference/api/pyspark.sql.DataFrame.unionAll.rst","reference/api/pyspark.sql.DataFrame.unionByName.rst","reference/api/pyspark.sql.DataFrame.unpersist.rst","reference/api/pyspark.sql.DataFrame.where.rst","reference/api/pyspark.sql.DataFrame.withColumn.rst","reference/api/pyspark.sql.DataFrame.withColumnRenamed.rst","reference/api/pyspark.sql.DataFrame.withWatermark.rst","reference/api/pyspark.sql.DataFrame.write.rst","reference/api/pyspark.sql.DataFrame.writeStream.rst","reference/api/pyspark.sql.DataFrame.writeTo.rst","reference/api/pyspark.sql.DataFrameNaFunctions.rst","reference/api/pyspark.sql.DataFrameNaFunctions.drop.rst","reference/api/pyspark.sql.DataFrameNaFunctions.fill.rst","reference/api/pyspark.sql.DataFrameNaFunctions.replace.rst","reference/api/pyspark.sql.DataFrameReader.csv.rst","reference/api/pyspark.sql.DataFrameReader.format.rst","reference/api/pyspark.sql.DataFrameReader.jdbc.rst","reference/api/pyspark.sql.DataFrameReader.json.rst","reference/api/pyspark.sql.DataFrameReader.load.rst","reference/api/pyspark.sql.DataFrameReader.option.rst","reference/api/pyspark.sql.DataFrameReader.options.rst","reference/api/pyspark.sql.DataFrameReader.orc.rst","reference/api/pyspark.sql.DataFrameReader.parquet.rst","reference/api/pyspark.sql.DataFrameReader.schema.rst","reference/api/pyspark.sql.DataFrameReader.table.rst","reference/api/pyspark.sql.DataFrameStatFunctions.rst","reference/api/pyspark.sql.DataFrameStatFunctions.approxQuantile.rst","reference/api/pyspark.sql.DataFrameStatFunctions.corr.rst","reference/api/pyspark.sql.DataFrameStatFunctions.cov.rst","reference/api/pyspark.sql.DataFrameStatFunctions.crosstab.rst","reference/api/pyspark.sql.DataFrameStatFunctions.freqItems.rst","reference/api/pyspark.sql.DataFrameStatFunctions.sampleBy.rst","reference/api/pyspark.sql.DataFrameWriter.bucketBy.rst","reference/api/pyspark.sql.DataFrameWriter.csv.rst","reference/api/pyspark.sql.DataFrameWriter.format.rst","reference/api/pyspark.sql.DataFrameWriter.insertInto.rst","reference/api/pyspark.sql.DataFrameWriter.jdbc.rst","reference/api/pyspark.sql.DataFrameWriter.json.rst","reference/api/pyspark.sql.DataFrameWriter.mode.rst","reference/api/pyspark.sql.DataFrameWriter.option.rst","reference/api/pyspark.sql.DataFrameWriter.options.rst","reference/api/pyspark.sql.DataFrameWriter.orc.rst","reference/api/pyspark.sql.DataFrameWriter.parquet.rst","reference/api/pyspark.sql.DataFrameWriter.partitionBy.rst","reference/api/pyspark.sql.DataFrameWriter.save.rst","reference/api/pyspark.sql.DataFrameWriter.saveAsTable.rst","reference/api/pyspark.sql.DataFrameWriter.sortBy.rst","reference/api/pyspark.sql.DataFrameWriter.text.rst","reference/api/pyspark.sql.GroupedData.rst","reference/api/pyspark.sql.GroupedData.agg.rst","reference/api/pyspark.sql.GroupedData.apply.rst","reference/api/pyspark.sql.GroupedData.applyInPandas.rst","reference/api/pyspark.sql.GroupedData.avg.rst","reference/api/pyspark.sql.GroupedData.cogroup.rst","reference/api/pyspark.sql.GroupedData.count.rst","reference/api/pyspark.sql.GroupedData.max.rst","reference/api/pyspark.sql.GroupedData.mean.rst","reference/api/pyspark.sql.GroupedData.min.rst","reference/api/pyspark.sql.GroupedData.pivot.rst","reference/api/pyspark.sql.GroupedData.sum.rst","reference/api/pyspark.sql.PandasCogroupedOps.rst","reference/api/pyspark.sql.PandasCogroupedOps.applyInPandas.rst","reference/api/pyspark.sql.Row.rst","reference/api/pyspark.sql.Row.asDict.rst","reference/api/pyspark.sql.SparkSession.rst","reference/api/pyspark.sql.SparkSession.builder.appName.rst","reference/api/pyspark.sql.SparkSession.builder.config.rst","reference/api/pyspark.sql.SparkSession.builder.enableHiveSupport.rst","reference/api/pyspark.sql.SparkSession.builder.getOrCreate.rst","reference/api/pyspark.sql.SparkSession.builder.master.rst","reference/api/pyspark.sql.SparkSession.catalog.rst","reference/api/pyspark.sql.SparkSession.conf.rst","reference/api/pyspark.sql.SparkSession.createDataFrame.rst","reference/api/pyspark.sql.SparkSession.getActiveSession.rst","reference/api/pyspark.sql.SparkSession.newSession.rst","reference/api/pyspark.sql.SparkSession.range.rst","reference/api/pyspark.sql.SparkSession.read.rst","reference/api/pyspark.sql.SparkSession.readStream.rst","reference/api/pyspark.sql.SparkSession.sparkContext.rst","reference/api/pyspark.sql.SparkSession.sql.rst","reference/api/pyspark.sql.SparkSession.stop.rst","reference/api/pyspark.sql.SparkSession.streams.rst","reference/api/pyspark.sql.SparkSession.table.rst","reference/api/pyspark.sql.SparkSession.udf.rst","reference/api/pyspark.sql.SparkSession.version.rst","reference/api/pyspark.sql.Window.rst","reference/api/pyspark.sql.Window.currentRow.rst","reference/api/pyspark.sql.Window.orderBy.rst","reference/api/pyspark.sql.Window.partitionBy.rst","reference/api/pyspark.sql.Window.rangeBetween.rst","reference/api/pyspark.sql.Window.rowsBetween.rst","reference/api/pyspark.sql.Window.unboundedFollowing.rst","reference/api/pyspark.sql.Window.unboundedPreceding.rst","reference/api/pyspark.sql.WindowSpec.orderBy.rst","reference/api/pyspark.sql.WindowSpec.partitionBy.rst","reference/api/pyspark.sql.WindowSpec.rangeBetween.rst","reference/api/pyspark.sql.WindowSpec.rowsBetween.rst","reference/api/pyspark.sql.avro.functions.from_avro.rst","reference/api/pyspark.sql.avro.functions.to_avro.rst","reference/api/pyspark.sql.conf.RuntimeConfig.rst","reference/api/pyspark.sql.functions.abs.rst","reference/api/pyspark.sql.functions.acos.rst","reference/api/pyspark.sql.functions.acosh.rst","reference/api/pyspark.sql.functions.add_months.rst","reference/api/pyspark.sql.functions.aggregate.rst","reference/api/pyspark.sql.functions.approxCountDistinct.rst","reference/api/pyspark.sql.functions.approx_count_distinct.rst","reference/api/pyspark.sql.functions.array.rst","reference/api/pyspark.sql.functions.array_contains.rst","reference/api/pyspark.sql.functions.array_distinct.rst","reference/api/pyspark.sql.functions.array_except.rst","reference/api/pyspark.sql.functions.array_intersect.rst","reference/api/pyspark.sql.functions.array_join.rst","reference/api/pyspark.sql.functions.array_max.rst","reference/api/pyspark.sql.functions.array_min.rst","reference/api/pyspark.sql.functions.array_position.rst","reference/api/pyspark.sql.functions.array_remove.rst","reference/api/pyspark.sql.functions.array_repeat.rst","reference/api/pyspark.sql.functions.array_sort.rst","reference/api/pyspark.sql.functions.array_union.rst","reference/api/pyspark.sql.functions.arrays_overlap.rst","reference/api/pyspark.sql.functions.arrays_zip.rst","reference/api/pyspark.sql.functions.asc.rst","reference/api/pyspark.sql.functions.asc_nulls_first.rst","reference/api/pyspark.sql.functions.asc_nulls_last.rst","reference/api/pyspark.sql.functions.ascii.rst","reference/api/pyspark.sql.functions.asin.rst","reference/api/pyspark.sql.functions.asinh.rst","reference/api/pyspark.sql.functions.assert_true.rst","reference/api/pyspark.sql.functions.atan.rst","reference/api/pyspark.sql.functions.atan2.rst","reference/api/pyspark.sql.functions.atanh.rst","reference/api/pyspark.sql.functions.avg.rst","reference/api/pyspark.sql.functions.base64.rst","reference/api/pyspark.sql.functions.bin.rst","reference/api/pyspark.sql.functions.bitwiseNOT.rst","reference/api/pyspark.sql.functions.broadcast.rst","reference/api/pyspark.sql.functions.bround.rst","reference/api/pyspark.sql.functions.bucket.rst","reference/api/pyspark.sql.functions.cbrt.rst","reference/api/pyspark.sql.functions.ceil.rst","reference/api/pyspark.sql.functions.coalesce.rst","reference/api/pyspark.sql.functions.col.rst","reference/api/pyspark.sql.functions.collect_list.rst","reference/api/pyspark.sql.functions.collect_set.rst","reference/api/pyspark.sql.functions.column.rst","reference/api/pyspark.sql.functions.concat.rst","reference/api/pyspark.sql.functions.concat_ws.rst","reference/api/pyspark.sql.functions.conv.rst","reference/api/pyspark.sql.functions.corr.rst","reference/api/pyspark.sql.functions.cos.rst","reference/api/pyspark.sql.functions.cosh.rst","reference/api/pyspark.sql.functions.count.rst","reference/api/pyspark.sql.functions.countDistinct.rst","reference/api/pyspark.sql.functions.covar_pop.rst","reference/api/pyspark.sql.functions.covar_samp.rst","reference/api/pyspark.sql.functions.crc32.rst","reference/api/pyspark.sql.functions.create_map.rst","reference/api/pyspark.sql.functions.cume_dist.rst","reference/api/pyspark.sql.functions.current_date.rst","reference/api/pyspark.sql.functions.current_timestamp.rst","reference/api/pyspark.sql.functions.date_add.rst","reference/api/pyspark.sql.functions.date_format.rst","reference/api/pyspark.sql.functions.date_sub.rst","reference/api/pyspark.sql.functions.date_trunc.rst","reference/api/pyspark.sql.functions.datediff.rst","reference/api/pyspark.sql.functions.dayofmonth.rst","reference/api/pyspark.sql.functions.dayofweek.rst","reference/api/pyspark.sql.functions.dayofyear.rst","reference/api/pyspark.sql.functions.days.rst","reference/api/pyspark.sql.functions.decode.rst","reference/api/pyspark.sql.functions.degrees.rst","reference/api/pyspark.sql.functions.dense_rank.rst","reference/api/pyspark.sql.functions.desc.rst","reference/api/pyspark.sql.functions.desc_nulls_first.rst","reference/api/pyspark.sql.functions.desc_nulls_last.rst","reference/api/pyspark.sql.functions.element_at.rst","reference/api/pyspark.sql.functions.encode.rst","reference/api/pyspark.sql.functions.exists.rst","reference/api/pyspark.sql.functions.exp.rst","reference/api/pyspark.sql.functions.explode.rst","reference/api/pyspark.sql.functions.explode_outer.rst","reference/api/pyspark.sql.functions.expm1.rst","reference/api/pyspark.sql.functions.expr.rst","reference/api/pyspark.sql.functions.factorial.rst","reference/api/pyspark.sql.functions.filter.rst","reference/api/pyspark.sql.functions.first.rst","reference/api/pyspark.sql.functions.flatten.rst","reference/api/pyspark.sql.functions.floor.rst","reference/api/pyspark.sql.functions.forall.rst","reference/api/pyspark.sql.functions.format_number.rst","reference/api/pyspark.sql.functions.format_string.rst","reference/api/pyspark.sql.functions.from_csv.rst","reference/api/pyspark.sql.functions.from_json.rst","reference/api/pyspark.sql.functions.from_unixtime.rst","reference/api/pyspark.sql.functions.from_utc_timestamp.rst","reference/api/pyspark.sql.functions.get_json_object.rst","reference/api/pyspark.sql.functions.greatest.rst","reference/api/pyspark.sql.functions.grouping.rst","reference/api/pyspark.sql.functions.grouping_id.rst","reference/api/pyspark.sql.functions.hash.rst","reference/api/pyspark.sql.functions.hex.rst","reference/api/pyspark.sql.functions.hour.rst","reference/api/pyspark.sql.functions.hours.rst","reference/api/pyspark.sql.functions.hypot.rst","reference/api/pyspark.sql.functions.initcap.rst","reference/api/pyspark.sql.functions.input_file_name.rst","reference/api/pyspark.sql.functions.instr.rst","reference/api/pyspark.sql.functions.isnan.rst","reference/api/pyspark.sql.functions.isnull.rst","reference/api/pyspark.sql.functions.json_tuple.rst","reference/api/pyspark.sql.functions.kurtosis.rst","reference/api/pyspark.sql.functions.lag.rst","reference/api/pyspark.sql.functions.last.rst","reference/api/pyspark.sql.functions.last_day.rst","reference/api/pyspark.sql.functions.lead.rst","reference/api/pyspark.sql.functions.least.rst","reference/api/pyspark.sql.functions.length.rst","reference/api/pyspark.sql.functions.levenshtein.rst","reference/api/pyspark.sql.functions.lit.rst","reference/api/pyspark.sql.functions.locate.rst","reference/api/pyspark.sql.functions.log.rst","reference/api/pyspark.sql.functions.log10.rst","reference/api/pyspark.sql.functions.log1p.rst","reference/api/pyspark.sql.functions.log2.rst","reference/api/pyspark.sql.functions.lower.rst","reference/api/pyspark.sql.functions.lpad.rst","reference/api/pyspark.sql.functions.ltrim.rst","reference/api/pyspark.sql.functions.map_concat.rst","reference/api/pyspark.sql.functions.map_entries.rst","reference/api/pyspark.sql.functions.map_filter.rst","reference/api/pyspark.sql.functions.map_from_arrays.rst","reference/api/pyspark.sql.functions.map_from_entries.rst","reference/api/pyspark.sql.functions.map_keys.rst","reference/api/pyspark.sql.functions.map_values.rst","reference/api/pyspark.sql.functions.map_zip_with.rst","reference/api/pyspark.sql.functions.max.rst","reference/api/pyspark.sql.functions.md5.rst","reference/api/pyspark.sql.functions.mean.rst","reference/api/pyspark.sql.functions.min.rst","reference/api/pyspark.sql.functions.minute.rst","reference/api/pyspark.sql.functions.monotonically_increasing_id.rst","reference/api/pyspark.sql.functions.month.rst","reference/api/pyspark.sql.functions.months.rst","reference/api/pyspark.sql.functions.months_between.rst","reference/api/pyspark.sql.functions.nanvl.rst","reference/api/pyspark.sql.functions.next_day.rst","reference/api/pyspark.sql.functions.nth_value.rst","reference/api/pyspark.sql.functions.ntile.rst","reference/api/pyspark.sql.functions.overlay.rst","reference/api/pyspark.sql.functions.pandas_udf.rst","reference/api/pyspark.sql.functions.percent_rank.rst","reference/api/pyspark.sql.functions.percentile_approx.rst","reference/api/pyspark.sql.functions.posexplode.rst","reference/api/pyspark.sql.functions.posexplode_outer.rst","reference/api/pyspark.sql.functions.pow.rst","reference/api/pyspark.sql.functions.quarter.rst","reference/api/pyspark.sql.functions.radians.rst","reference/api/pyspark.sql.functions.raise_error.rst","reference/api/pyspark.sql.functions.rand.rst","reference/api/pyspark.sql.functions.randn.rst","reference/api/pyspark.sql.functions.rank.rst","reference/api/pyspark.sql.functions.regexp_extract.rst","reference/api/pyspark.sql.functions.regexp_replace.rst","reference/api/pyspark.sql.functions.repeat.rst","reference/api/pyspark.sql.functions.reverse.rst","reference/api/pyspark.sql.functions.rint.rst","reference/api/pyspark.sql.functions.round.rst","reference/api/pyspark.sql.functions.row_number.rst","reference/api/pyspark.sql.functions.rpad.rst","reference/api/pyspark.sql.functions.rtrim.rst","reference/api/pyspark.sql.functions.schema_of_csv.rst","reference/api/pyspark.sql.functions.schema_of_json.rst","reference/api/pyspark.sql.functions.second.rst","reference/api/pyspark.sql.functions.sequence.rst","reference/api/pyspark.sql.functions.sha1.rst","reference/api/pyspark.sql.functions.sha2.rst","reference/api/pyspark.sql.functions.shiftLeft.rst","reference/api/pyspark.sql.functions.shiftRight.rst","reference/api/pyspark.sql.functions.shiftRightUnsigned.rst","reference/api/pyspark.sql.functions.shuffle.rst","reference/api/pyspark.sql.functions.signum.rst","reference/api/pyspark.sql.functions.sin.rst","reference/api/pyspark.sql.functions.sinh.rst","reference/api/pyspark.sql.functions.size.rst","reference/api/pyspark.sql.functions.skewness.rst","reference/api/pyspark.sql.functions.slice.rst","reference/api/pyspark.sql.functions.sort_array.rst","reference/api/pyspark.sql.functions.soundex.rst","reference/api/pyspark.sql.functions.spark_partition_id.rst","reference/api/pyspark.sql.functions.split.rst","reference/api/pyspark.sql.functions.sqrt.rst","reference/api/pyspark.sql.functions.stddev.rst","reference/api/pyspark.sql.functions.stddev_pop.rst","reference/api/pyspark.sql.functions.stddev_samp.rst","reference/api/pyspark.sql.functions.struct.rst","reference/api/pyspark.sql.functions.substring.rst","reference/api/pyspark.sql.functions.substring_index.rst","reference/api/pyspark.sql.functions.sum.rst","reference/api/pyspark.sql.functions.sumDistinct.rst","reference/api/pyspark.sql.functions.tan.rst","reference/api/pyspark.sql.functions.tanh.rst","reference/api/pyspark.sql.functions.timestamp_seconds.rst","reference/api/pyspark.sql.functions.toDegrees.rst","reference/api/pyspark.sql.functions.toRadians.rst","reference/api/pyspark.sql.functions.to_csv.rst","reference/api/pyspark.sql.functions.to_date.rst","reference/api/pyspark.sql.functions.to_json.rst","reference/api/pyspark.sql.functions.to_timestamp.rst","reference/api/pyspark.sql.functions.to_utc_timestamp.rst","reference/api/pyspark.sql.functions.transform.rst","reference/api/pyspark.sql.functions.transform_keys.rst","reference/api/pyspark.sql.functions.transform_values.rst","reference/api/pyspark.sql.functions.translate.rst","reference/api/pyspark.sql.functions.trim.rst","reference/api/pyspark.sql.functions.trunc.rst","reference/api/pyspark.sql.functions.udf.rst","reference/api/pyspark.sql.functions.unbase64.rst","reference/api/pyspark.sql.functions.unhex.rst","reference/api/pyspark.sql.functions.unix_timestamp.rst","reference/api/pyspark.sql.functions.upper.rst","reference/api/pyspark.sql.functions.var_pop.rst","reference/api/pyspark.sql.functions.var_samp.rst","reference/api/pyspark.sql.functions.variance.rst","reference/api/pyspark.sql.functions.weekofyear.rst","reference/api/pyspark.sql.functions.when.rst","reference/api/pyspark.sql.functions.window.rst","reference/api/pyspark.sql.functions.xxhash64.rst","reference/api/pyspark.sql.functions.year.rst","reference/api/pyspark.sql.functions.years.rst","reference/api/pyspark.sql.functions.zip_with.rst","reference/api/pyspark.sql.streaming.DataStreamReader.rst","reference/api/pyspark.sql.streaming.DataStreamReader.csv.rst","reference/api/pyspark.sql.streaming.DataStreamReader.format.rst","reference/api/pyspark.sql.streaming.DataStreamReader.json.rst","reference/api/pyspark.sql.streaming.DataStreamReader.load.rst","reference/api/pyspark.sql.streaming.DataStreamReader.option.rst","reference/api/pyspark.sql.streaming.DataStreamReader.options.rst","reference/api/pyspark.sql.streaming.DataStreamReader.orc.rst","reference/api/pyspark.sql.streaming.DataStreamReader.parquet.rst","reference/api/pyspark.sql.streaming.DataStreamReader.schema.rst","reference/api/pyspark.sql.streaming.DataStreamReader.text.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.foreach.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.foreachBatch.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.format.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.option.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.options.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.outputMode.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.partitionBy.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.queryName.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.start.rst","reference/api/pyspark.sql.streaming.DataStreamWriter.trigger.rst","reference/api/pyspark.sql.streaming.ForeachBatchFunction.rst","reference/api/pyspark.sql.streaming.StreamingQuery.rst","reference/api/pyspark.sql.streaming.StreamingQuery.awaitTermination.rst","reference/api/pyspark.sql.streaming.StreamingQuery.exception.rst","reference/api/pyspark.sql.streaming.StreamingQuery.explain.rst","reference/api/pyspark.sql.streaming.StreamingQuery.id.rst","reference/api/pyspark.sql.streaming.StreamingQuery.isActive.rst","reference/api/pyspark.sql.streaming.StreamingQuery.lastProgress.rst","reference/api/pyspark.sql.streaming.StreamingQuery.name.rst","reference/api/pyspark.sql.streaming.StreamingQuery.processAllAvailable.rst","reference/api/pyspark.sql.streaming.StreamingQuery.recentProgress.rst","reference/api/pyspark.sql.streaming.StreamingQuery.runId.rst","reference/api/pyspark.sql.streaming.StreamingQuery.status.rst","reference/api/pyspark.sql.streaming.StreamingQuery.stop.rst","reference/api/pyspark.sql.streaming.StreamingQueryException.rst","reference/api/pyspark.sql.streaming.StreamingQueryManager.rst","reference/api/pyspark.sql.streaming.StreamingQueryManager.active.rst","reference/api/pyspark.sql.streaming.StreamingQueryManager.awaitAnyTermination.rst","reference/api/pyspark.sql.streaming.StreamingQueryManager.get.rst","reference/api/pyspark.sql.streaming.StreamingQueryManager.resetTerminated.rst","reference/api/pyspark.sql.types.ArrayType.rst","reference/api/pyspark.sql.types.BinaryType.rst","reference/api/pyspark.sql.types.BooleanType.rst","reference/api/pyspark.sql.types.ByteType.rst","reference/api/pyspark.sql.types.DataType.rst","reference/api/pyspark.sql.types.DateType.rst","reference/api/pyspark.sql.types.DecimalType.rst","reference/api/pyspark.sql.types.DoubleType.rst","reference/api/pyspark.sql.types.FloatType.rst","reference/api/pyspark.sql.types.IntegerType.rst","reference/api/pyspark.sql.types.LongType.rst","reference/api/pyspark.sql.types.MapType.rst","reference/api/pyspark.sql.types.NullType.rst","reference/api/pyspark.sql.types.ShortType.rst","reference/api/pyspark.sql.types.StringType.rst","reference/api/pyspark.sql.types.StructField.rst","reference/api/pyspark.sql.types.StructType.rst","reference/api/pyspark.sql.types.TimestampType.rst","reference/api/pyspark.streaming.DStream.rst","reference/api/pyspark.streaming.DStream.cache.rst","reference/api/pyspark.streaming.DStream.checkpoint.rst","reference/api/pyspark.streaming.DStream.cogroup.rst","reference/api/pyspark.streaming.DStream.combineByKey.rst","reference/api/pyspark.streaming.DStream.context.rst","reference/api/pyspark.streaming.DStream.count.rst","reference/api/pyspark.streaming.DStream.countByValue.rst","reference/api/pyspark.streaming.DStream.countByValueAndWindow.rst","reference/api/pyspark.streaming.DStream.countByWindow.rst","reference/api/pyspark.streaming.DStream.filter.rst","reference/api/pyspark.streaming.DStream.flatMap.rst","reference/api/pyspark.streaming.DStream.flatMapValues.rst","reference/api/pyspark.streaming.DStream.foreachRDD.rst","reference/api/pyspark.streaming.DStream.fullOuterJoin.rst","reference/api/pyspark.streaming.DStream.glom.rst","reference/api/pyspark.streaming.DStream.groupByKey.rst","reference/api/pyspark.streaming.DStream.groupByKeyAndWindow.rst","reference/api/pyspark.streaming.DStream.join.rst","reference/api/pyspark.streaming.DStream.leftOuterJoin.rst","reference/api/pyspark.streaming.DStream.map.rst","reference/api/pyspark.streaming.DStream.mapPartitions.rst","reference/api/pyspark.streaming.DStream.mapPartitionsWithIndex.rst","reference/api/pyspark.streaming.DStream.mapValues.rst","reference/api/pyspark.streaming.DStream.partitionBy.rst","reference/api/pyspark.streaming.DStream.persist.rst","reference/api/pyspark.streaming.DStream.pprint.rst","reference/api/pyspark.streaming.DStream.reduce.rst","reference/api/pyspark.streaming.DStream.reduceByKey.rst","reference/api/pyspark.streaming.DStream.reduceByKeyAndWindow.rst","reference/api/pyspark.streaming.DStream.reduceByWindow.rst","reference/api/pyspark.streaming.DStream.repartition.rst","reference/api/pyspark.streaming.DStream.rightOuterJoin.rst","reference/api/pyspark.streaming.DStream.saveAsTextFiles.rst","reference/api/pyspark.streaming.DStream.slice.rst","reference/api/pyspark.streaming.DStream.transform.rst","reference/api/pyspark.streaming.DStream.transformWith.rst","reference/api/pyspark.streaming.DStream.union.rst","reference/api/pyspark.streaming.DStream.updateStateByKey.rst","reference/api/pyspark.streaming.DStream.window.rst","reference/api/pyspark.streaming.StreamingContext.rst","reference/api/pyspark.streaming.StreamingContext.addStreamingListener.rst","reference/api/pyspark.streaming.StreamingContext.awaitTermination.rst","reference/api/pyspark.streaming.StreamingContext.awaitTerminationOrTimeout.rst","reference/api/pyspark.streaming.StreamingContext.binaryRecordsStream.rst","reference/api/pyspark.streaming.StreamingContext.checkpoint.rst","reference/api/pyspark.streaming.StreamingContext.getActive.rst","reference/api/pyspark.streaming.StreamingContext.getActiveOrCreate.rst","reference/api/pyspark.streaming.StreamingContext.getOrCreate.rst","reference/api/pyspark.streaming.StreamingContext.queueStream.rst","reference/api/pyspark.streaming.StreamingContext.remember.rst","reference/api/pyspark.streaming.StreamingContext.socketTextStream.rst","reference/api/pyspark.streaming.StreamingContext.sparkContext.rst","reference/api/pyspark.streaming.StreamingContext.start.rst","reference/api/pyspark.streaming.StreamingContext.stop.rst","reference/api/pyspark.streaming.StreamingContext.textFileStream.rst","reference/api/pyspark.streaming.StreamingContext.transform.rst","reference/api/pyspark.streaming.StreamingContext.union.rst","reference/api/pyspark.streaming.kinesis.InitialPositionInStream.LATEST.rst","reference/api/pyspark.streaming.kinesis.InitialPositionInStream.TRIM_HORIZON.rst","reference/api/pyspark.streaming.kinesis.KinesisUtils.createStream.rst","reference/index.rst","reference/pyspark.rst","reference/pyspark.ml.rst","reference/pyspark.mllib.rst","reference/pyspark.resource.rst","reference/pyspark.sql.rst","reference/pyspark.ss.rst","reference/pyspark.streaming.rst","user_guide/arrow_pandas.rst","user_guide/index.rst","user_guide/python_packaging.rst"],objects:{"pyspark.Accumulator":{add:[17,1,1,""],value:[18,1,1,""]},"pyspark.AccumulatorParam":{addInPlace:[20,1,1,""],zero:[21,1,1,""]},"pyspark.BarrierTaskContext":{allGather:[23,1,1,""],attemptNumber:[24,1,1,""],barrier:[25,1,1,""],get:[26,1,1,""],getLocalProperty:[27,1,1,""],getTaskInfos:[28,1,1,""],partitionId:[29,1,1,""],resources:[30,1,1,""],stageId:[31,1,1,""],taskAttemptId:[32,1,1,""]},"pyspark.Broadcast":{destroy:[35,1,1,""],dump:[36,1,1,""],load:[37,1,1,""],load_from_path:[38,1,1,""],unpersist:[39,1,1,""],value:[40,1,1,""]},"pyspark.RDD":{aggregate:[43,1,1,""],aggregateByKey:[44,1,1,""],barrier:[45,1,1,""],cache:[46,1,1,""],cartesian:[47,1,1,""],checkpoint:[48,1,1,""],coalesce:[49,1,1,""],cogroup:[50,1,1,""],collect:[51,1,1,""],collectAsMap:[52,1,1,""],collectWithJobGroup:[53,1,1,""],combineByKey:[54,1,1,""],context:[55,1,1,""],count:[56,1,1,""],countApprox:[57,1,1,""],countApproxDistinct:[58,1,1,""],countByKey:[59,1,1,""],countByValue:[60,1,1,""],distinct:[61,1,1,""],filter:[62,1,1,""],first:[63,1,1,""],flatMap:[64,1,1,""],flatMapValues:[65,1,1,""],fold:[66,1,1,""],foldByKey:[67,1,1,""],foreach:[68,1,1,""],foreachPartition:[69,1,1,""],fullOuterJoin:[70,1,1,""],getCheckpointFile:[71,1,1,""],getNumPartitions:[72,1,1,""],getResourceProfile:[73,1,1,""],getStorageLevel:[74,1,1,""],glom:[75,1,1,""],groupBy:[76,1,1,""],groupByKey:[77,1,1,""],groupWith:[78,1,1,""],histogram:[79,1,1,""],id:[80,1,1,""],intersection:[81,1,1,""],isCheckpointed:[82,1,1,""],isEmpty:[83,1,1,""],isLocallyCheckpointed:[84,1,1,""],join:[85,1,1,""],keyBy:[86,1,1,""],keys:[87,1,1,""],leftOuterJoin:[88,1,1,""],localCheckpoint:[89,1,1,""],lookup:[90,1,1,""],map:[91,1,1,""],mapPartitions:[92,1,1,""],mapPartitionsWithIndex:[93,1,1,""],mapPartitionsWithSplit:[94,1,1,""],mapValues:[95,1,1,""],max:[96,1,1,""],mean:[97,1,1,""],meanApprox:[98,1,1,""],min:[99,1,1,""],name:[100,1,1,""],partitionBy:[101,1,1,""],persist:[102,1,1,""],pipe:[103,1,1,""],randomSplit:[104,1,1,""],reduce:[105,1,1,""],reduceByKey:[106,1,1,""],reduceByKeyLocally:[107,1,1,""],repartition:[108,1,1,""],repartitionAndSortWithinPartitions:[109,1,1,""],rightOuterJoin:[110,1,1,""],sample:[111,1,1,""],sampleByKey:[112,1,1,""],sampleStdev:[113,1,1,""],sampleVariance:[114,1,1,""],saveAsHadoopDataset:[115,1,1,""],saveAsHadoopFile:[116,1,1,""],saveAsNewAPIHadoopDataset:[117,1,1,""],saveAsNewAPIHadoopFile:[118,1,1,""],saveAsPickleFile:[119,1,1,""],saveAsSequenceFile:[120,1,1,""],saveAsTextFile:[121,1,1,""],setName:[122,1,1,""],sortBy:[123,1,1,""],sortByKey:[124,1,1,""],stats:[125,1,1,""],stdev:[126,1,1,""],subtract:[127,1,1,""],subtractByKey:[128,1,1,""],sum:[129,1,1,""],sumApprox:[130,1,1,""],take:[131,1,1,""],takeOrdered:[132,1,1,""],takeSample:[133,1,1,""],toDebugString:[134,1,1,""],toLocalIterator:[135,1,1,""],top:[136,1,1,""],treeAggregate:[137,1,1,""],treeReduce:[138,1,1,""],union:[139,1,1,""],unpersist:[140,1,1,""],values:[141,1,1,""],variance:[142,1,1,""],withResources:[143,1,1,""],zip:[144,1,1,""],zipWithIndex:[145,1,1,""],zipWithUniqueId:[146,1,1,""]},"pyspark.RDDBarrier":{mapPartitions:[148,1,1,""],mapPartitionsWithIndex:[149,1,1,""]},"pyspark.SparkConf":{contains:[151,1,1,""],get:[152,1,1,""],getAll:[153,1,1,""],set:[154,1,1,""],setAll:[155,1,1,""],setAppName:[156,1,1,""],setExecutorEnv:[157,1,1,""],setIfMissing:[158,1,1,""],setMaster:[159,1,1,""],setSparkHome:[160,1,1,""],toDebugString:[161,1,1,""]},"pyspark.SparkContext":{PACKAGE_EXTENSIONS:[163,2,1,""],accumulator:[164,1,1,""],addFile:[165,1,1,""],addPyFile:[166,1,1,""],applicationId:[167,1,1,""],binaryFiles:[168,1,1,""],binaryRecords:[169,1,1,""],broadcast:[170,1,1,""],cancelAllJobs:[171,1,1,""],cancelJobGroup:[172,1,1,""],defaultMinPartitions:[173,1,1,""],defaultParallelism:[174,1,1,""],dump_profiles:[175,1,1,""],emptyRDD:[176,1,1,""],getCheckpointDir:[177,1,1,""],getConf:[178,1,1,""],getLocalProperty:[179,1,1,""],getOrCreate:[180,1,1,""],hadoopFile:[181,1,1,""],hadoopRDD:[182,1,1,""],newAPIHadoopFile:[183,1,1,""],newAPIHadoopRDD:[184,1,1,""],parallelize:[185,1,1,""],pickleFile:[186,1,1,""],range:[187,1,1,""],resources:[188,1,1,""],runJob:[189,1,1,""],sequenceFile:[190,1,1,""],setCheckpointDir:[191,1,1,""],setJobDescription:[192,1,1,""],setJobGroup:[193,1,1,""],setLocalProperty:[194,1,1,""],setLogLevel:[195,1,1,""],setSystemProperty:[196,1,1,""],show_profiles:[197,1,1,""],sparkUser:[198,1,1,""],startTime:[199,1,1,""],statusTracker:[200,1,1,""],stop:[201,1,1,""],textFile:[202,1,1,""],uiWebUrl:[203,1,1,""],union:[204,1,1,""],version:[205,1,1,""],wholeTextFiles:[206,1,1,""]},"pyspark.SparkFiles":{get:[208,1,1,""],getRootDirectory:[209,1,1,""]},"pyspark.StorageLevel":{DISK_ONLY:[211,2,1,""],DISK_ONLY_2:[212,2,1,""],DISK_ONLY_3:[213,2,1,""],MEMORY_AND_DISK:[214,2,1,""],MEMORY_AND_DISK_2:[215,2,1,""],MEMORY_ONLY:[216,2,1,""],MEMORY_ONLY_2:[217,2,1,""],OFF_HEAP:[218,2,1,""]},"pyspark.TaskContext":{attemptNumber:[220,1,1,""],get:[221,1,1,""],getLocalProperty:[222,1,1,""],partitionId:[223,1,1,""],resources:[224,1,1,""],stageId:[225,1,1,""],taskAttemptId:[226,1,1,""]},"pyspark.ml":{Estimator:[227,0,1,""],Model:[228,0,1,""],Pipeline:[229,0,1,""],PipelineModel:[230,0,1,""],PredictionModel:[231,0,1,""],Predictor:[232,0,1,""],Transformer:[233,0,1,""],UnaryTransformer:[234,0,1,""]},"pyspark.ml.Estimator":{clear:[227,1,1,""],copy:[227,1,1,""],explainParam:[227,1,1,""],explainParams:[227,1,1,""],extractParamMap:[227,1,1,""],fit:[227,1,1,""],fitMultiple:[227,1,1,""],getOrDefault:[227,1,1,""],getParam:[227,1,1,""],hasDefault:[227,1,1,""],hasParam:[227,1,1,""],isDefined:[227,1,1,""],isSet:[227,1,1,""],params:[227,2,1,""],set:[227,1,1,""]},"pyspark.ml.Model":{clear:[228,1,1,""],copy:[228,1,1,""],explainParam:[228,1,1,""],explainParams:[228,1,1,""],extractParamMap:[228,1,1,""],getOrDefault:[228,1,1,""],getParam:[228,1,1,""],hasDefault:[228,1,1,""],hasParam:[228,1,1,""],isDefined:[228,1,1,""],isSet:[228,1,1,""],params:[228,2,1,""],set:[228,1,1,""],transform:[228,1,1,""]},"pyspark.ml.Pipeline":{clear:[229,1,1,""],copy:[229,1,1,""],explainParam:[229,1,1,""],explainParams:[229,1,1,""],extractParamMap:[229,1,1,""],fit:[229,1,1,""],fitMultiple:[229,1,1,""],getOrDefault:[229,1,1,""],getParam:[229,1,1,""],getStages:[229,1,1,""],hasDefault:[229,1,1,""],hasParam:[229,1,1,""],isDefined:[229,1,1,""],isSet:[229,1,1,""],load:[229,1,1,""],params:[229,2,1,""],read:[229,1,1,""],save:[229,1,1,""],set:[229,1,1,""],setParams:[229,1,1,""],setStages:[229,1,1,""],stages:[229,2,1,""],write:[229,1,1,""]},"pyspark.ml.PipelineModel":{clear:[230,1,1,""],copy:[230,1,1,""],explainParam:[230,1,1,""],explainParams:[230,1,1,""],extractParamMap:[230,1,1,""],getOrDefault:[230,1,1,""],getParam:[230,1,1,""],hasDefault:[230,1,1,""],hasParam:[230,1,1,""],isDefined:[230,1,1,""],isSet:[230,1,1,""],load:[230,1,1,""],params:[230,2,1,""],read:[230,1,1,""],save:[230,1,1,""],set:[230,1,1,""],transform:[230,1,1,""],write:[230,1,1,""]},"pyspark.ml.PredictionModel":{clear:[231,1,1,""],copy:[231,1,1,""],explainParam:[231,1,1,""],explainParams:[231,1,1,""],extractParamMap:[231,1,1,""],featuresCol:[231,2,1,""],getFeaturesCol:[231,1,1,""],getLabelCol:[231,1,1,""],getOrDefault:[231,1,1,""],getParam:[231,1,1,""],getPredictionCol:[231,1,1,""],hasDefault:[231,1,1,""],hasParam:[231,1,1,""],isDefined:[231,1,1,""],isSet:[231,1,1,""],labelCol:[231,2,1,""],numFeatures:[231,2,1,""],params:[231,2,1,""],predict:[231,1,1,""],predictionCol:[231,2,1,""],set:[231,1,1,""],setFeaturesCol:[231,1,1,""],setPredictionCol:[231,1,1,""],transform:[231,1,1,""]},"pyspark.ml.Predictor":{clear:[232,1,1,""],copy:[232,1,1,""],explainParam:[232,1,1,""],explainParams:[232,1,1,""],extractParamMap:[232,1,1,""],featuresCol:[232,2,1,""],fit:[232,1,1,""],fitMultiple:[232,1,1,""],getFeaturesCol:[232,1,1,""],getLabelCol:[232,1,1,""],getOrDefault:[232,1,1,""],getParam:[232,1,1,""],getPredictionCol:[232,1,1,""],hasDefault:[232,1,1,""],hasParam:[232,1,1,""],isDefined:[232,1,1,""],isSet:[232,1,1,""],labelCol:[232,2,1,""],params:[232,2,1,""],predictionCol:[232,2,1,""],set:[232,1,1,""],setFeaturesCol:[232,1,1,""],setLabelCol:[232,1,1,""],setPredictionCol:[232,1,1,""]},"pyspark.ml.Transformer":{clear:[233,1,1,""],copy:[233,1,1,""],explainParam:[233,1,1,""],explainParams:[233,1,1,""],extractParamMap:[233,1,1,""],getOrDefault:[233,1,1,""],getParam:[233,1,1,""],hasDefault:[233,1,1,""],hasParam:[233,1,1,""],isDefined:[233,1,1,""],isSet:[233,1,1,""],params:[233,2,1,""],set:[233,1,1,""],transform:[233,1,1,""]},"pyspark.ml.UnaryTransformer":{clear:[234,1,1,""],copy:[234,1,1,""],createTransformFunc:[234,1,1,""],explainParam:[234,1,1,""],explainParams:[234,1,1,""],extractParamMap:[234,1,1,""],getInputCol:[234,1,1,""],getOrDefault:[234,1,1,""],getOutputCol:[234,1,1,""],getParam:[234,1,1,""],hasDefault:[234,1,1,""],hasParam:[234,1,1,""],inputCol:[234,2,1,""],isDefined:[234,1,1,""],isSet:[234,1,1,""],outputCol:[234,2,1,""],outputDataType:[234,1,1,""],params:[234,2,1,""],set:[234,1,1,""],setInputCol:[234,1,1,""],setOutputCol:[234,1,1,""],transform:[234,1,1,""],transformSchema:[234,1,1,""],validateInputType:[234,1,1,""]},"pyspark.ml.classification":{BinaryLogisticRegressionSummary:[235,0,1,""],BinaryLogisticRegressionTrainingSummary:[236,0,1,""],BinaryRandomForestClassificationSummary:[237,0,1,""],BinaryRandomForestClassificationTrainingSummary:[238,0,1,""],DecisionTreeClassificationModel:[239,0,1,""],DecisionTreeClassifier:[240,0,1,""],FMClassificationModel:[241,0,1,""],FMClassificationSummary:[242,0,1,""],FMClassificationTrainingSummary:[243,0,1,""],FMClassifier:[244,0,1,""],GBTClassificationModel:[245,0,1,""],GBTClassifier:[246,0,1,""],LinearSVC:[247,0,1,""],LinearSVCModel:[248,0,1,""],LinearSVCSummary:[249,0,1,""],LinearSVCTrainingSummary:[250,0,1,""],LogisticRegression:[251,0,1,""],LogisticRegressionModel:[252,0,1,""],LogisticRegressionSummary:[253,0,1,""],LogisticRegressionTrainingSummary:[254,0,1,""],MultilayerPerceptronClassificationModel:[255,0,1,""],MultilayerPerceptronClassificationSummary:[256,0,1,""],MultilayerPerceptronClassificationTrainingSummary:[257,0,1,""],MultilayerPerceptronClassifier:[258,0,1,""],NaiveBayes:[259,0,1,""],NaiveBayesModel:[260,0,1,""],OneVsRest:[261,0,1,""],OneVsRestModel:[262,0,1,""],RandomForestClassificationModel:[263,0,1,""],RandomForestClassificationSummary:[264,0,1,""],RandomForestClassificationTrainingSummary:[265,0,1,""],RandomForestClassifier:[266,0,1,""]},"pyspark.ml.classification.BinaryLogisticRegressionSummary":{accuracy:[235,2,1,""],areaUnderROC:[235,2,1,""],fMeasureByLabel:[235,1,1,""],fMeasureByThreshold:[235,2,1,""],falsePositiveRateByLabel:[235,2,1,""],featuresCol:[235,2,1,""],labelCol:[235,2,1,""],labels:[235,2,1,""],pr:[235,2,1,""],precisionByLabel:[235,2,1,""],precisionByThreshold:[235,2,1,""],predictionCol:[235,2,1,""],predictions:[235,2,1,""],probabilityCol:[235,2,1,""],recallByLabel:[235,2,1,""],recallByThreshold:[235,2,1,""],roc:[235,2,1,""],scoreCol:[235,2,1,""],truePositiveRateByLabel:[235,2,1,""],weightCol:[235,2,1,""],weightedFMeasure:[235,1,1,""],weightedFalsePositiveRate:[235,2,1,""],weightedPrecision:[235,2,1,""],weightedRecall:[235,2,1,""],weightedTruePositiveRate:[235,2,1,""]},"pyspark.ml.classification.BinaryLogisticRegressionTrainingSummary":{accuracy:[236,2,1,""],areaUnderROC:[236,2,1,""],fMeasureByLabel:[236,1,1,""],fMeasureByThreshold:[236,2,1,""],falsePositiveRateByLabel:[236,2,1,""],featuresCol:[236,2,1,""],labelCol:[236,2,1,""],labels:[236,2,1,""],objectiveHistory:[236,2,1,""],pr:[236,2,1,""],precisionByLabel:[236,2,1,""],precisionByThreshold:[236,2,1,""],predictionCol:[236,2,1,""],predictions:[236,2,1,""],probabilityCol:[236,2,1,""],recallByLabel:[236,2,1,""],recallByThreshold:[236,2,1,""],roc:[236,2,1,""],scoreCol:[236,2,1,""],totalIterations:[236,2,1,""],truePositiveRateByLabel:[236,2,1,""],weightCol:[236,2,1,""],weightedFMeasure:[236,1,1,""],weightedFalsePositiveRate:[236,2,1,""],weightedPrecision:[236,2,1,""],weightedRecall:[236,2,1,""],weightedTruePositiveRate:[236,2,1,""]},"pyspark.ml.classification.BinaryRandomForestClassificationSummary":{accuracy:[237,2,1,""],areaUnderROC:[237,2,1,""],fMeasureByLabel:[237,1,1,""],fMeasureByThreshold:[237,2,1,""],falsePositiveRateByLabel:[237,2,1,""],labelCol:[237,2,1,""],labels:[237,2,1,""],pr:[237,2,1,""],precisionByLabel:[237,2,1,""],precisionByThreshold:[237,2,1,""],predictionCol:[237,2,1,""],predictions:[237,2,1,""],recallByLabel:[237,2,1,""],recallByThreshold:[237,2,1,""],roc:[237,2,1,""],scoreCol:[237,2,1,""],truePositiveRateByLabel:[237,2,1,""],weightCol:[237,2,1,""],weightedFMeasure:[237,1,1,""],weightedFalsePositiveRate:[237,2,1,""],weightedPrecision:[237,2,1,""],weightedRecall:[237,2,1,""],weightedTruePositiveRate:[237,2,1,""]},"pyspark.ml.classification.BinaryRandomForestClassificationTrainingSummary":{accuracy:[238,2,1,""],areaUnderROC:[238,2,1,""],fMeasureByLabel:[238,1,1,""],fMeasureByThreshold:[238,2,1,""],falsePositiveRateByLabel:[238,2,1,""],labelCol:[238,2,1,""],labels:[238,2,1,""],objectiveHistory:[238,2,1,""],pr:[238,2,1,""],precisionByLabel:[238,2,1,""],precisionByThreshold:[238,2,1,""],predictionCol:[238,2,1,""],predictions:[238,2,1,""],recallByLabel:[238,2,1,""],recallByThreshold:[238,2,1,""],roc:[238,2,1,""],scoreCol:[238,2,1,""],totalIterations:[238,2,1,""],truePositiveRateByLabel:[238,2,1,""],weightCol:[238,2,1,""],weightedFMeasure:[238,1,1,""],weightedFalsePositiveRate:[238,2,1,""],weightedPrecision:[238,2,1,""],weightedRecall:[238,2,1,""],weightedTruePositiveRate:[238,2,1,""]},"pyspark.ml.classification.DecisionTreeClassificationModel":{cacheNodeIds:[239,2,1,""],checkpointInterval:[239,2,1,""],clear:[239,1,1,""],copy:[239,1,1,""],depth:[239,2,1,""],explainParam:[239,1,1,""],explainParams:[239,1,1,""],extractParamMap:[239,1,1,""],featureImportances:[239,2,1,""],featuresCol:[239,2,1,""],getCacheNodeIds:[239,1,1,""],getCheckpointInterval:[239,1,1,""],getFeaturesCol:[239,1,1,""],getImpurity:[239,1,1,""],getLabelCol:[239,1,1,""],getLeafCol:[239,1,1,""],getMaxBins:[239,1,1,""],getMaxDepth:[239,1,1,""],getMaxMemoryInMB:[239,1,1,""],getMinInfoGain:[239,1,1,""],getMinInstancesPerNode:[239,1,1,""],getMinWeightFractionPerNode:[239,1,1,""],getOrDefault:[239,1,1,""],getParam:[239,1,1,""],getPredictionCol:[239,1,1,""],getProbabilityCol:[239,1,1,""],getRawPredictionCol:[239,1,1,""],getSeed:[239,1,1,""],getThresholds:[239,1,1,""],getWeightCol:[239,1,1,""],hasDefault:[239,1,1,""],hasParam:[239,1,1,""],impurity:[239,2,1,""],isDefined:[239,1,1,""],isSet:[239,1,1,""],labelCol:[239,2,1,""],leafCol:[239,2,1,""],load:[239,1,1,""],maxBins:[239,2,1,""],maxDepth:[239,2,1,""],maxMemoryInMB:[239,2,1,""],minInfoGain:[239,2,1,""],minInstancesPerNode:[239,2,1,""],minWeightFractionPerNode:[239,2,1,""],numClasses:[239,2,1,""],numFeatures:[239,2,1,""],numNodes:[239,2,1,""],params:[239,2,1,""],predict:[239,1,1,""],predictLeaf:[239,1,1,""],predictProbability:[239,1,1,""],predictRaw:[239,1,1,""],predictionCol:[239,2,1,""],probabilityCol:[239,2,1,""],rawPredictionCol:[239,2,1,""],read:[239,1,1,""],save:[239,1,1,""],seed:[239,2,1,""],set:[239,1,1,""],setFeaturesCol:[239,1,1,""],setLeafCol:[239,1,1,""],setPredictionCol:[239,1,1,""],setProbabilityCol:[239,1,1,""],setRawPredictionCol:[239,1,1,""],setThresholds:[239,1,1,""],supportedImpurities:[239,2,1,""],thresholds:[239,2,1,""],toDebugString:[239,2,1,""],transform:[239,1,1,""],weightCol:[239,2,1,""],write:[239,1,1,""]},"pyspark.ml.classification.DecisionTreeClassifier":{cacheNodeIds:[240,2,1,""],checkpointInterval:[240,2,1,""],clear:[240,1,1,""],copy:[240,1,1,""],explainParam:[240,1,1,""],explainParams:[240,1,1,""],extractParamMap:[240,1,1,""],featuresCol:[240,2,1,""],fit:[240,1,1,""],fitMultiple:[240,1,1,""],getCacheNodeIds:[240,1,1,""],getCheckpointInterval:[240,1,1,""],getFeaturesCol:[240,1,1,""],getImpurity:[240,1,1,""],getLabelCol:[240,1,1,""],getLeafCol:[240,1,1,""],getMaxBins:[240,1,1,""],getMaxDepth:[240,1,1,""],getMaxMemoryInMB:[240,1,1,""],getMinInfoGain:[240,1,1,""],getMinInstancesPerNode:[240,1,1,""],getMinWeightFractionPerNode:[240,1,1,""],getOrDefault:[240,1,1,""],getParam:[240,1,1,""],getPredictionCol:[240,1,1,""],getProbabilityCol:[240,1,1,""],getRawPredictionCol:[240,1,1,""],getSeed:[240,1,1,""],getThresholds:[240,1,1,""],getWeightCol:[240,1,1,""],hasDefault:[240,1,1,""],hasParam:[240,1,1,""],impurity:[240,2,1,""],isDefined:[240,1,1,""],isSet:[240,1,1,""],labelCol:[240,2,1,""],leafCol:[240,2,1,""],load:[240,1,1,""],maxBins:[240,2,1,""],maxDepth:[240,2,1,""],maxMemoryInMB:[240,2,1,""],minInfoGain:[240,2,1,""],minInstancesPerNode:[240,2,1,""],minWeightFractionPerNode:[240,2,1,""],params:[240,2,1,""],predictionCol:[240,2,1,""],probabilityCol:[240,2,1,""],rawPredictionCol:[240,2,1,""],read:[240,1,1,""],save:[240,1,1,""],seed:[240,2,1,""],set:[240,1,1,""],setCacheNodeIds:[240,1,1,""],setCheckpointInterval:[240,1,1,""],setFeaturesCol:[240,1,1,""],setImpurity:[240,1,1,""],setLabelCol:[240,1,1,""],setLeafCol:[240,1,1,""],setMaxBins:[240,1,1,""],setMaxDepth:[240,1,1,""],setMaxMemoryInMB:[240,1,1,""],setMinInfoGain:[240,1,1,""],setMinInstancesPerNode:[240,1,1,""],setMinWeightFractionPerNode:[240,1,1,""],setParams:[240,1,1,""],setPredictionCol:[240,1,1,""],setProbabilityCol:[240,1,1,""],setRawPredictionCol:[240,1,1,""],setSeed:[240,1,1,""],setThresholds:[240,1,1,""],setWeightCol:[240,1,1,""],supportedImpurities:[240,2,1,""],thresholds:[240,2,1,""],weightCol:[240,2,1,""],write:[240,1,1,""]},"pyspark.ml.classification.FMClassificationModel":{clear:[241,1,1,""],copy:[241,1,1,""],evaluate:[241,1,1,""],explainParam:[241,1,1,""],explainParams:[241,1,1,""],extractParamMap:[241,1,1,""],factorSize:[241,2,1,""],factors:[241,2,1,""],featuresCol:[241,2,1,""],fitIntercept:[241,2,1,""],fitLinear:[241,2,1,""],getFactorSize:[241,1,1,""],getFeaturesCol:[241,1,1,""],getFitIntercept:[241,1,1,""],getFitLinear:[241,1,1,""],getInitStd:[241,1,1,""],getLabelCol:[241,1,1,""],getMaxIter:[241,1,1,""],getMiniBatchFraction:[241,1,1,""],getOrDefault:[241,1,1,""],getParam:[241,1,1,""],getPredictionCol:[241,1,1,""],getProbabilityCol:[241,1,1,""],getRawPredictionCol:[241,1,1,""],getRegParam:[241,1,1,""],getSeed:[241,1,1,""],getSolver:[241,1,1,""],getStepSize:[241,1,1,""],getThresholds:[241,1,1,""],getTol:[241,1,1,""],getWeightCol:[241,1,1,""],hasDefault:[241,1,1,""],hasParam:[241,1,1,""],hasSummary:[241,2,1,""],initStd:[241,2,1,""],intercept:[241,2,1,""],isDefined:[241,1,1,""],isSet:[241,1,1,""],labelCol:[241,2,1,""],linear:[241,2,1,""],load:[241,1,1,""],maxIter:[241,2,1,""],miniBatchFraction:[241,2,1,""],numClasses:[241,2,1,""],numFeatures:[241,2,1,""],params:[241,2,1,""],predict:[241,1,1,""],predictProbability:[241,1,1,""],predictRaw:[241,1,1,""],predictionCol:[241,2,1,""],probabilityCol:[241,2,1,""],rawPredictionCol:[241,2,1,""],read:[241,1,1,""],regParam:[241,2,1,""],save:[241,1,1,""],seed:[241,2,1,""],set:[241,1,1,""],setFeaturesCol:[241,1,1,""],setPredictionCol:[241,1,1,""],setProbabilityCol:[241,1,1,""],setRawPredictionCol:[241,1,1,""],setThresholds:[241,1,1,""],solver:[241,2,1,""],stepSize:[241,2,1,""],summary:[241,1,1,""],thresholds:[241,2,1,""],tol:[241,2,1,""],transform:[241,1,1,""],weightCol:[241,2,1,""],write:[241,1,1,""]},"pyspark.ml.classification.FMClassificationSummary":{accuracy:[242,2,1,""],areaUnderROC:[242,2,1,""],fMeasureByLabel:[242,1,1,""],fMeasureByThreshold:[242,2,1,""],falsePositiveRateByLabel:[242,2,1,""],labelCol:[242,2,1,""],labels:[242,2,1,""],pr:[242,2,1,""],precisionByLabel:[242,2,1,""],precisionByThreshold:[242,2,1,""],predictionCol:[242,2,1,""],predictions:[242,2,1,""],recallByLabel:[242,2,1,""],recallByThreshold:[242,2,1,""],roc:[242,2,1,""],scoreCol:[242,2,1,""],truePositiveRateByLabel:[242,2,1,""],weightCol:[242,2,1,""],weightedFMeasure:[242,1,1,""],weightedFalsePositiveRate:[242,2,1,""],weightedPrecision:[242,2,1,""],weightedRecall:[242,2,1,""],weightedTruePositiveRate:[242,2,1,""]},"pyspark.ml.classification.FMClassificationTrainingSummary":{accuracy:[243,2,1,""],areaUnderROC:[243,2,1,""],fMeasureByLabel:[243,1,1,""],fMeasureByThreshold:[243,2,1,""],falsePositiveRateByLabel:[243,2,1,""],labelCol:[243,2,1,""],labels:[243,2,1,""],objectiveHistory:[243,2,1,""],pr:[243,2,1,""],precisionByLabel:[243,2,1,""],precisionByThreshold:[243,2,1,""],predictionCol:[243,2,1,""],predictions:[243,2,1,""],recallByLabel:[243,2,1,""],recallByThreshold:[243,2,1,""],roc:[243,2,1,""],scoreCol:[243,2,1,""],totalIterations:[243,2,1,""],truePositiveRateByLabel:[243,2,1,""],weightCol:[243,2,1,""],weightedFMeasure:[243,1,1,""],weightedFalsePositiveRate:[243,2,1,""],weightedPrecision:[243,2,1,""],weightedRecall:[243,2,1,""],weightedTruePositiveRate:[243,2,1,""]},"pyspark.ml.classification.FMClassifier":{clear:[244,1,1,""],copy:[244,1,1,""],explainParam:[244,1,1,""],explainParams:[244,1,1,""],extractParamMap:[244,1,1,""],factorSize:[244,2,1,""],featuresCol:[244,2,1,""],fit:[244,1,1,""],fitIntercept:[244,2,1,""],fitLinear:[244,2,1,""],fitMultiple:[244,1,1,""],getFactorSize:[244,1,1,""],getFeaturesCol:[244,1,1,""],getFitIntercept:[244,1,1,""],getFitLinear:[244,1,1,""],getInitStd:[244,1,1,""],getLabelCol:[244,1,1,""],getMaxIter:[244,1,1,""],getMiniBatchFraction:[244,1,1,""],getOrDefault:[244,1,1,""],getParam:[244,1,1,""],getPredictionCol:[244,1,1,""],getProbabilityCol:[244,1,1,""],getRawPredictionCol:[244,1,1,""],getRegParam:[244,1,1,""],getSeed:[244,1,1,""],getSolver:[244,1,1,""],getStepSize:[244,1,1,""],getThresholds:[244,1,1,""],getTol:[244,1,1,""],getWeightCol:[244,1,1,""],hasDefault:[244,1,1,""],hasParam:[244,1,1,""],initStd:[244,2,1,""],isDefined:[244,1,1,""],isSet:[244,1,1,""],labelCol:[244,2,1,""],load:[244,1,1,""],maxIter:[244,2,1,""],miniBatchFraction:[244,2,1,""],params:[244,2,1,""],predictionCol:[244,2,1,""],probabilityCol:[244,2,1,""],rawPredictionCol:[244,2,1,""],read:[244,1,1,""],regParam:[244,2,1,""],save:[244,1,1,""],seed:[244,2,1,""],set:[244,1,1,""],setFactorSize:[244,1,1,""],setFeaturesCol:[244,1,1,""],setFitIntercept:[244,1,1,""],setFitLinear:[244,1,1,""],setInitStd:[244,1,1,""],setLabelCol:[244,1,1,""],setMaxIter:[244,1,1,""],setMiniBatchFraction:[244,1,1,""],setParams:[244,1,1,""],setPredictionCol:[244,1,1,""],setProbabilityCol:[244,1,1,""],setRawPredictionCol:[244,1,1,""],setRegParam:[244,1,1,""],setSeed:[244,1,1,""],setSolver:[244,1,1,""],setStepSize:[244,1,1,""],setThresholds:[244,1,1,""],setTol:[244,1,1,""],solver:[244,2,1,""],stepSize:[244,2,1,""],thresholds:[244,2,1,""],tol:[244,2,1,""],weightCol:[244,2,1,""],write:[244,1,1,""]},"pyspark.ml.classification.GBTClassificationModel":{cacheNodeIds:[245,2,1,""],checkpointInterval:[245,2,1,""],clear:[245,1,1,""],copy:[245,1,1,""],evaluateEachIteration:[245,1,1,""],explainParam:[245,1,1,""],explainParams:[245,1,1,""],extractParamMap:[245,1,1,""],featureImportances:[245,2,1,""],featureSubsetStrategy:[245,2,1,""],featuresCol:[245,2,1,""],getCacheNodeIds:[245,1,1,""],getCheckpointInterval:[245,1,1,""],getFeatureSubsetStrategy:[245,1,1,""],getFeaturesCol:[245,1,1,""],getImpurity:[245,1,1,""],getLabelCol:[245,1,1,""],getLeafCol:[245,1,1,""],getLossType:[245,1,1,""],getMaxBins:[245,1,1,""],getMaxDepth:[245,1,1,""],getMaxIter:[245,1,1,""],getMaxMemoryInMB:[245,1,1,""],getMinInfoGain:[245,1,1,""],getMinInstancesPerNode:[245,1,1,""],getMinWeightFractionPerNode:[245,1,1,""],getNumTrees:[245,2,1,""],getOrDefault:[245,1,1,""],getParam:[245,1,1,""],getPredictionCol:[245,1,1,""],getProbabilityCol:[245,1,1,""],getRawPredictionCol:[245,1,1,""],getSeed:[245,1,1,""],getStepSize:[245,1,1,""],getSubsamplingRate:[245,1,1,""],getThresholds:[245,1,1,""],getValidationIndicatorCol:[245,1,1,""],getValidationTol:[245,1,1,""],getWeightCol:[245,1,1,""],hasDefault:[245,1,1,""],hasParam:[245,1,1,""],impurity:[245,2,1,""],isDefined:[245,1,1,""],isSet:[245,1,1,""],labelCol:[245,2,1,""],leafCol:[245,2,1,""],load:[245,1,1,""],lossType:[245,2,1,""],maxBins:[245,2,1,""],maxDepth:[245,2,1,""],maxIter:[245,2,1,""],maxMemoryInMB:[245,2,1,""],minInfoGain:[245,2,1,""],minInstancesPerNode:[245,2,1,""],minWeightFractionPerNode:[245,2,1,""],numClasses:[245,2,1,""],numFeatures:[245,2,1,""],params:[245,2,1,""],predict:[245,1,1,""],predictLeaf:[245,1,1,""],predictProbability:[245,1,1,""],predictRaw:[245,1,1,""],predictionCol:[245,2,1,""],probabilityCol:[245,2,1,""],rawPredictionCol:[245,2,1,""],read:[245,1,1,""],save:[245,1,1,""],seed:[245,2,1,""],set:[245,1,1,""],setFeaturesCol:[245,1,1,""],setLeafCol:[245,1,1,""],setPredictionCol:[245,1,1,""],setProbabilityCol:[245,1,1,""],setRawPredictionCol:[245,1,1,""],setThresholds:[245,1,1,""],stepSize:[245,2,1,""],subsamplingRate:[245,2,1,""],supportedFeatureSubsetStrategies:[245,2,1,""],supportedImpurities:[245,2,1,""],supportedLossTypes:[245,2,1,""],thresholds:[245,2,1,""],toDebugString:[245,2,1,""],totalNumNodes:[245,2,1,""],transform:[245,1,1,""],treeWeights:[245,2,1,""],trees:[245,2,1,""],validationIndicatorCol:[245,2,1,""],validationTol:[245,2,1,""],weightCol:[245,2,1,""],write:[245,1,1,""]},"pyspark.ml.classification.GBTClassifier":{cacheNodeIds:[246,2,1,""],checkpointInterval:[246,2,1,""],clear:[246,1,1,""],copy:[246,1,1,""],explainParam:[246,1,1,""],explainParams:[246,1,1,""],extractParamMap:[246,1,1,""],featureSubsetStrategy:[246,2,1,""],featuresCol:[246,2,1,""],fit:[246,1,1,""],fitMultiple:[246,1,1,""],getCacheNodeIds:[246,1,1,""],getCheckpointInterval:[246,1,1,""],getFeatureSubsetStrategy:[246,1,1,""],getFeaturesCol:[246,1,1,""],getImpurity:[246,1,1,""],getLabelCol:[246,1,1,""],getLeafCol:[246,1,1,""],getLossType:[246,1,1,""],getMaxBins:[246,1,1,""],getMaxDepth:[246,1,1,""],getMaxIter:[246,1,1,""],getMaxMemoryInMB:[246,1,1,""],getMinInfoGain:[246,1,1,""],getMinInstancesPerNode:[246,1,1,""],getMinWeightFractionPerNode:[246,1,1,""],getOrDefault:[246,1,1,""],getParam:[246,1,1,""],getPredictionCol:[246,1,1,""],getProbabilityCol:[246,1,1,""],getRawPredictionCol:[246,1,1,""],getSeed:[246,1,1,""],getStepSize:[246,1,1,""],getSubsamplingRate:[246,1,1,""],getThresholds:[246,1,1,""],getValidationIndicatorCol:[246,1,1,""],getValidationTol:[246,1,1,""],getWeightCol:[246,1,1,""],hasDefault:[246,1,1,""],hasParam:[246,1,1,""],impurity:[246,2,1,""],isDefined:[246,1,1,""],isSet:[246,1,1,""],labelCol:[246,2,1,""],leafCol:[246,2,1,""],load:[246,1,1,""],lossType:[246,2,1,""],maxBins:[246,2,1,""],maxDepth:[246,2,1,""],maxIter:[246,2,1,""],maxMemoryInMB:[246,2,1,""],minInfoGain:[246,2,1,""],minInstancesPerNode:[246,2,1,""],minWeightFractionPerNode:[246,2,1,""],params:[246,2,1,""],predictionCol:[246,2,1,""],probabilityCol:[246,2,1,""],rawPredictionCol:[246,2,1,""],read:[246,1,1,""],save:[246,1,1,""],seed:[246,2,1,""],set:[246,1,1,""],setCacheNodeIds:[246,1,1,""],setCheckpointInterval:[246,1,1,""],setFeatureSubsetStrategy:[246,1,1,""],setFeaturesCol:[246,1,1,""],setImpurity:[246,1,1,""],setLabelCol:[246,1,1,""],setLeafCol:[246,1,1,""],setLossType:[246,1,1,""],setMaxBins:[246,1,1,""],setMaxDepth:[246,1,1,""],setMaxIter:[246,1,1,""],setMaxMemoryInMB:[246,1,1,""],setMinInfoGain:[246,1,1,""],setMinInstancesPerNode:[246,1,1,""],setMinWeightFractionPerNode:[246,1,1,""],setParams:[246,1,1,""],setPredictionCol:[246,1,1,""],setProbabilityCol:[246,1,1,""],setRawPredictionCol:[246,1,1,""],setSeed:[246,1,1,""],setStepSize:[246,1,1,""],setSubsamplingRate:[246,1,1,""],setThresholds:[246,1,1,""],setValidationIndicatorCol:[246,1,1,""],setWeightCol:[246,1,1,""],stepSize:[246,2,1,""],subsamplingRate:[246,2,1,""],supportedFeatureSubsetStrategies:[246,2,1,""],supportedImpurities:[246,2,1,""],supportedLossTypes:[246,2,1,""],thresholds:[246,2,1,""],validationIndicatorCol:[246,2,1,""],validationTol:[246,2,1,""],weightCol:[246,2,1,""],write:[246,1,1,""]},"pyspark.ml.classification.LinearSVC":{aggregationDepth:[247,2,1,""],clear:[247,1,1,""],copy:[247,1,1,""],explainParam:[247,1,1,""],explainParams:[247,1,1,""],extractParamMap:[247,1,1,""],featuresCol:[247,2,1,""],fit:[247,1,1,""],fitIntercept:[247,2,1,""],fitMultiple:[247,1,1,""],getAggregationDepth:[247,1,1,""],getFeaturesCol:[247,1,1,""],getFitIntercept:[247,1,1,""],getLabelCol:[247,1,1,""],getMaxBlockSizeInMB:[247,1,1,""],getMaxIter:[247,1,1,""],getOrDefault:[247,1,1,""],getParam:[247,1,1,""],getPredictionCol:[247,1,1,""],getRawPredictionCol:[247,1,1,""],getRegParam:[247,1,1,""],getStandardization:[247,1,1,""],getThreshold:[247,1,1,""],getTol:[247,1,1,""],getWeightCol:[247,1,1,""],hasDefault:[247,1,1,""],hasParam:[247,1,1,""],isDefined:[247,1,1,""],isSet:[247,1,1,""],labelCol:[247,2,1,""],load:[247,1,1,""],maxBlockSizeInMB:[247,2,1,""],maxIter:[247,2,1,""],params:[247,2,1,""],predictionCol:[247,2,1,""],rawPredictionCol:[247,2,1,""],read:[247,1,1,""],regParam:[247,2,1,""],save:[247,1,1,""],set:[247,1,1,""],setAggregationDepth:[247,1,1,""],setFeaturesCol:[247,1,1,""],setFitIntercept:[247,1,1,""],setLabelCol:[247,1,1,""],setMaxBlockSizeInMB:[247,1,1,""],setMaxIter:[247,1,1,""],setParams:[247,1,1,""],setPredictionCol:[247,1,1,""],setRawPredictionCol:[247,1,1,""],setRegParam:[247,1,1,""],setStandardization:[247,1,1,""],setThreshold:[247,1,1,""],setTol:[247,1,1,""],setWeightCol:[247,1,1,""],standardization:[247,2,1,""],threshold:[247,2,1,""],tol:[247,2,1,""],weightCol:[247,2,1,""],write:[247,1,1,""]},"pyspark.ml.classification.LinearSVCModel":{aggregationDepth:[248,2,1,""],clear:[248,1,1,""],coefficients:[248,2,1,""],copy:[248,1,1,""],evaluate:[248,1,1,""],explainParam:[248,1,1,""],explainParams:[248,1,1,""],extractParamMap:[248,1,1,""],featuresCol:[248,2,1,""],fitIntercept:[248,2,1,""],getAggregationDepth:[248,1,1,""],getFeaturesCol:[248,1,1,""],getFitIntercept:[248,1,1,""],getLabelCol:[248,1,1,""],getMaxBlockSizeInMB:[248,1,1,""],getMaxIter:[248,1,1,""],getOrDefault:[248,1,1,""],getParam:[248,1,1,""],getPredictionCol:[248,1,1,""],getRawPredictionCol:[248,1,1,""],getRegParam:[248,1,1,""],getStandardization:[248,1,1,""],getThreshold:[248,1,1,""],getTol:[248,1,1,""],getWeightCol:[248,1,1,""],hasDefault:[248,1,1,""],hasParam:[248,1,1,""],hasSummary:[248,2,1,""],intercept:[248,2,1,""],isDefined:[248,1,1,""],isSet:[248,1,1,""],labelCol:[248,2,1,""],load:[248,1,1,""],maxBlockSizeInMB:[248,2,1,""],maxIter:[248,2,1,""],numClasses:[248,2,1,""],numFeatures:[248,2,1,""],params:[248,2,1,""],predict:[248,1,1,""],predictRaw:[248,1,1,""],predictionCol:[248,2,1,""],rawPredictionCol:[248,2,1,""],read:[248,1,1,""],regParam:[248,2,1,""],save:[248,1,1,""],set:[248,1,1,""],setFeaturesCol:[248,1,1,""],setPredictionCol:[248,1,1,""],setRawPredictionCol:[248,1,1,""],setThreshold:[248,1,1,""],standardization:[248,2,1,""],summary:[248,1,1,""],threshold:[248,2,1,""],tol:[248,2,1,""],transform:[248,1,1,""],weightCol:[248,2,1,""],write:[248,1,1,""]},"pyspark.ml.classification.LinearSVCSummary":{accuracy:[249,2,1,""],areaUnderROC:[249,2,1,""],fMeasureByLabel:[249,1,1,""],fMeasureByThreshold:[249,2,1,""],falsePositiveRateByLabel:[249,2,1,""],labelCol:[249,2,1,""],labels:[249,2,1,""],pr:[249,2,1,""],precisionByLabel:[249,2,1,""],precisionByThreshold:[249,2,1,""],predictionCol:[249,2,1,""],predictions:[249,2,1,""],recallByLabel:[249,2,1,""],recallByThreshold:[249,2,1,""],roc:[249,2,1,""],scoreCol:[249,2,1,""],truePositiveRateByLabel:[249,2,1,""],weightCol:[249,2,1,""],weightedFMeasure:[249,1,1,""],weightedFalsePositiveRate:[249,2,1,""],weightedPrecision:[249,2,1,""],weightedRecall:[249,2,1,""],weightedTruePositiveRate:[249,2,1,""]},"pyspark.ml.classification.LinearSVCTrainingSummary":{accuracy:[250,2,1,""],areaUnderROC:[250,2,1,""],fMeasureByLabel:[250,1,1,""],fMeasureByThreshold:[250,2,1,""],falsePositiveRateByLabel:[250,2,1,""],labelCol:[250,2,1,""],labels:[250,2,1,""],objectiveHistory:[250,2,1,""],pr:[250,2,1,""],precisionByLabel:[250,2,1,""],precisionByThreshold:[250,2,1,""],predictionCol:[250,2,1,""],predictions:[250,2,1,""],recallByLabel:[250,2,1,""],recallByThreshold:[250,2,1,""],roc:[250,2,1,""],scoreCol:[250,2,1,""],totalIterations:[250,2,1,""],truePositiveRateByLabel:[250,2,1,""],weightCol:[250,2,1,""],weightedFMeasure:[250,1,1,""],weightedFalsePositiveRate:[250,2,1,""],weightedPrecision:[250,2,1,""],weightedRecall:[250,2,1,""],weightedTruePositiveRate:[250,2,1,""]},"pyspark.ml.classification.LogisticRegression":{aggregationDepth:[251,2,1,""],clear:[251,1,1,""],copy:[251,1,1,""],elasticNetParam:[251,2,1,""],explainParam:[251,1,1,""],explainParams:[251,1,1,""],extractParamMap:[251,1,1,""],family:[251,2,1,""],featuresCol:[251,2,1,""],fit:[251,1,1,""],fitIntercept:[251,2,1,""],fitMultiple:[251,1,1,""],getAggregationDepth:[251,1,1,""],getElasticNetParam:[251,1,1,""],getFamily:[251,1,1,""],getFeaturesCol:[251,1,1,""],getFitIntercept:[251,1,1,""],getLabelCol:[251,1,1,""],getLowerBoundsOnCoefficients:[251,1,1,""],getLowerBoundsOnIntercepts:[251,1,1,""],getMaxBlockSizeInMB:[251,1,1,""],getMaxIter:[251,1,1,""],getOrDefault:[251,1,1,""],getParam:[251,1,1,""],getPredictionCol:[251,1,1,""],getProbabilityCol:[251,1,1,""],getRawPredictionCol:[251,1,1,""],getRegParam:[251,1,1,""],getStandardization:[251,1,1,""],getThreshold:[251,1,1,""],getThresholds:[251,1,1,""],getTol:[251,1,1,""],getUpperBoundsOnCoefficients:[251,1,1,""],getUpperBoundsOnIntercepts:[251,1,1,""],getWeightCol:[251,1,1,""],hasDefault:[251,1,1,""],hasParam:[251,1,1,""],isDefined:[251,1,1,""],isSet:[251,1,1,""],labelCol:[251,2,1,""],load:[251,1,1,""],lowerBoundsOnCoefficients:[251,2,1,""],lowerBoundsOnIntercepts:[251,2,1,""],maxBlockSizeInMB:[251,2,1,""],maxIter:[251,2,1,""],params:[251,2,1,""],predictionCol:[251,2,1,""],probabilityCol:[251,2,1,""],rawPredictionCol:[251,2,1,""],read:[251,1,1,""],regParam:[251,2,1,""],save:[251,1,1,""],set:[251,1,1,""],setAggregationDepth:[251,1,1,""],setElasticNetParam:[251,1,1,""],setFamily:[251,1,1,""],setFeaturesCol:[251,1,1,""],setFitIntercept:[251,1,1,""],setLabelCol:[251,1,1,""],setLowerBoundsOnCoefficients:[251,1,1,""],setLowerBoundsOnIntercepts:[251,1,1,""],setMaxBlockSizeInMB:[251,1,1,""],setMaxIter:[251,1,1,""],setParams:[251,1,1,""],setPredictionCol:[251,1,1,""],setProbabilityCol:[251,1,1,""],setRawPredictionCol:[251,1,1,""],setRegParam:[251,1,1,""],setStandardization:[251,1,1,""],setThreshold:[251,1,1,""],setThresholds:[251,1,1,""],setTol:[251,1,1,""],setUpperBoundsOnCoefficients:[251,1,1,""],setUpperBoundsOnIntercepts:[251,1,1,""],setWeightCol:[251,1,1,""],standardization:[251,2,1,""],threshold:[251,2,1,""],thresholds:[251,2,1,""],tol:[251,2,1,""],upperBoundsOnCoefficients:[251,2,1,""],upperBoundsOnIntercepts:[251,2,1,""],weightCol:[251,2,1,""],write:[251,1,1,""]},"pyspark.ml.classification.LogisticRegressionModel":{aggregationDepth:[252,2,1,""],clear:[252,1,1,""],coefficientMatrix:[252,2,1,""],coefficients:[252,2,1,""],copy:[252,1,1,""],elasticNetParam:[252,2,1,""],evaluate:[252,1,1,""],explainParam:[252,1,1,""],explainParams:[252,1,1,""],extractParamMap:[252,1,1,""],family:[252,2,1,""],featuresCol:[252,2,1,""],fitIntercept:[252,2,1,""],getAggregationDepth:[252,1,1,""],getElasticNetParam:[252,1,1,""],getFamily:[252,1,1,""],getFeaturesCol:[252,1,1,""],getFitIntercept:[252,1,1,""],getLabelCol:[252,1,1,""],getLowerBoundsOnCoefficients:[252,1,1,""],getLowerBoundsOnIntercepts:[252,1,1,""],getMaxBlockSizeInMB:[252,1,1,""],getMaxIter:[252,1,1,""],getOrDefault:[252,1,1,""],getParam:[252,1,1,""],getPredictionCol:[252,1,1,""],getProbabilityCol:[252,1,1,""],getRawPredictionCol:[252,1,1,""],getRegParam:[252,1,1,""],getStandardization:[252,1,1,""],getThreshold:[252,1,1,""],getThresholds:[252,1,1,""],getTol:[252,1,1,""],getUpperBoundsOnCoefficients:[252,1,1,""],getUpperBoundsOnIntercepts:[252,1,1,""],getWeightCol:[252,1,1,""],hasDefault:[252,1,1,""],hasParam:[252,1,1,""],hasSummary:[252,2,1,""],intercept:[252,2,1,""],interceptVector:[252,2,1,""],isDefined:[252,1,1,""],isSet:[252,1,1,""],labelCol:[252,2,1,""],load:[252,1,1,""],lowerBoundsOnCoefficients:[252,2,1,""],lowerBoundsOnIntercepts:[252,2,1,""],maxBlockSizeInMB:[252,2,1,""],maxIter:[252,2,1,""],numClasses:[252,2,1,""],numFeatures:[252,2,1,""],params:[252,2,1,""],predict:[252,1,1,""],predictProbability:[252,1,1,""],predictRaw:[252,1,1,""],predictionCol:[252,2,1,""],probabilityCol:[252,2,1,""],rawPredictionCol:[252,2,1,""],read:[252,1,1,""],regParam:[252,2,1,""],save:[252,1,1,""],set:[252,1,1,""],setFeaturesCol:[252,1,1,""],setPredictionCol:[252,1,1,""],setProbabilityCol:[252,1,1,""],setRawPredictionCol:[252,1,1,""],setThreshold:[252,1,1,""],setThresholds:[252,1,1,""],standardization:[252,2,1,""],summary:[252,2,1,""],threshold:[252,2,1,""],thresholds:[252,2,1,""],tol:[252,2,1,""],transform:[252,1,1,""],upperBoundsOnCoefficients:[252,2,1,""],upperBoundsOnIntercepts:[252,2,1,""],weightCol:[252,2,1,""],write:[252,1,1,""]},"pyspark.ml.classification.LogisticRegressionSummary":{accuracy:[253,2,1,""],fMeasureByLabel:[253,1,1,""],falsePositiveRateByLabel:[253,2,1,""],featuresCol:[253,2,1,""],labelCol:[253,2,1,""],labels:[253,2,1,""],precisionByLabel:[253,2,1,""],predictionCol:[253,2,1,""],predictions:[253,2,1,""],probabilityCol:[253,2,1,""],recallByLabel:[253,2,1,""],truePositiveRateByLabel:[253,2,1,""],weightCol:[253,2,1,""],weightedFMeasure:[253,1,1,""],weightedFalsePositiveRate:[253,2,1,""],weightedPrecision:[253,2,1,""],weightedRecall:[253,2,1,""],weightedTruePositiveRate:[253,2,1,""]},"pyspark.ml.classification.LogisticRegressionTrainingSummary":{accuracy:[254,2,1,""],fMeasureByLabel:[254,1,1,""],falsePositiveRateByLabel:[254,2,1,""],featuresCol:[254,2,1,""],labelCol:[254,2,1,""],labels:[254,2,1,""],objectiveHistory:[254,2,1,""],precisionByLabel:[254,2,1,""],predictionCol:[254,2,1,""],predictions:[254,2,1,""],probabilityCol:[254,2,1,""],recallByLabel:[254,2,1,""],totalIterations:[254,2,1,""],truePositiveRateByLabel:[254,2,1,""],weightCol:[254,2,1,""],weightedFMeasure:[254,1,1,""],weightedFalsePositiveRate:[254,2,1,""],weightedPrecision:[254,2,1,""],weightedRecall:[254,2,1,""],weightedTruePositiveRate:[254,2,1,""]},"pyspark.ml.classification.MultilayerPerceptronClassificationModel":{blockSize:[255,2,1,""],clear:[255,1,1,""],copy:[255,1,1,""],evaluate:[255,1,1,""],explainParam:[255,1,1,""],explainParams:[255,1,1,""],extractParamMap:[255,1,1,""],featuresCol:[255,2,1,""],getBlockSize:[255,1,1,""],getFeaturesCol:[255,1,1,""],getInitialWeights:[255,1,1,""],getLabelCol:[255,1,1,""],getLayers:[255,1,1,""],getMaxIter:[255,1,1,""],getOrDefault:[255,1,1,""],getParam:[255,1,1,""],getPredictionCol:[255,1,1,""],getProbabilityCol:[255,1,1,""],getRawPredictionCol:[255,1,1,""],getSeed:[255,1,1,""],getSolver:[255,1,1,""],getStepSize:[255,1,1,""],getThresholds:[255,1,1,""],getTol:[255,1,1,""],hasDefault:[255,1,1,""],hasParam:[255,1,1,""],hasSummary:[255,2,1,""],initialWeights:[255,2,1,""],isDefined:[255,1,1,""],isSet:[255,1,1,""],labelCol:[255,2,1,""],layers:[255,2,1,""],load:[255,1,1,""],maxIter:[255,2,1,""],numClasses:[255,2,1,""],numFeatures:[255,2,1,""],params:[255,2,1,""],predict:[255,1,1,""],predictProbability:[255,1,1,""],predictRaw:[255,1,1,""],predictionCol:[255,2,1,""],probabilityCol:[255,2,1,""],rawPredictionCol:[255,2,1,""],read:[255,1,1,""],save:[255,1,1,""],seed:[255,2,1,""],set:[255,1,1,""],setFeaturesCol:[255,1,1,""],setPredictionCol:[255,1,1,""],setProbabilityCol:[255,1,1,""],setRawPredictionCol:[255,1,1,""],setThresholds:[255,1,1,""],solver:[255,2,1,""],stepSize:[255,2,1,""],summary:[255,1,1,""],thresholds:[255,2,1,""],tol:[255,2,1,""],transform:[255,1,1,""],weights:[255,2,1,""],write:[255,1,1,""]},"pyspark.ml.classification.MultilayerPerceptronClassificationSummary":{accuracy:[256,2,1,""],fMeasureByLabel:[256,1,1,""],falsePositiveRateByLabel:[256,2,1,""],labelCol:[256,2,1,""],labels:[256,2,1,""],precisionByLabel:[256,2,1,""],predictionCol:[256,2,1,""],predictions:[256,2,1,""],recallByLabel:[256,2,1,""],truePositiveRateByLabel:[256,2,1,""],weightCol:[256,2,1,""],weightedFMeasure:[256,1,1,""],weightedFalsePositiveRate:[256,2,1,""],weightedPrecision:[256,2,1,""],weightedRecall:[256,2,1,""],weightedTruePositiveRate:[256,2,1,""]},"pyspark.ml.classification.MultilayerPerceptronClassificationTrainingSummary":{accuracy:[257,2,1,""],fMeasureByLabel:[257,1,1,""],falsePositiveRateByLabel:[257,2,1,""],labelCol:[257,2,1,""],labels:[257,2,1,""],objectiveHistory:[257,2,1,""],precisionByLabel:[257,2,1,""],predictionCol:[257,2,1,""],predictions:[257,2,1,""],recallByLabel:[257,2,1,""],totalIterations:[257,2,1,""],truePositiveRateByLabel:[257,2,1,""],weightCol:[257,2,1,""],weightedFMeasure:[257,1,1,""],weightedFalsePositiveRate:[257,2,1,""],weightedPrecision:[257,2,1,""],weightedRecall:[257,2,1,""],weightedTruePositiveRate:[257,2,1,""]},"pyspark.ml.classification.MultilayerPerceptronClassifier":{blockSize:[258,2,1,""],clear:[258,1,1,""],copy:[258,1,1,""],explainParam:[258,1,1,""],explainParams:[258,1,1,""],extractParamMap:[258,1,1,""],featuresCol:[258,2,1,""],fit:[258,1,1,""],fitMultiple:[258,1,1,""],getBlockSize:[258,1,1,""],getFeaturesCol:[258,1,1,""],getInitialWeights:[258,1,1,""],getLabelCol:[258,1,1,""],getLayers:[258,1,1,""],getMaxIter:[258,1,1,""],getOrDefault:[258,1,1,""],getParam:[258,1,1,""],getPredictionCol:[258,1,1,""],getProbabilityCol:[258,1,1,""],getRawPredictionCol:[258,1,1,""],getSeed:[258,1,1,""],getSolver:[258,1,1,""],getStepSize:[258,1,1,""],getThresholds:[258,1,1,""],getTol:[258,1,1,""],hasDefault:[258,1,1,""],hasParam:[258,1,1,""],initialWeights:[258,2,1,""],isDefined:[258,1,1,""],isSet:[258,1,1,""],labelCol:[258,2,1,""],layers:[258,2,1,""],load:[258,1,1,""],maxIter:[258,2,1,""],params:[258,2,1,""],predictionCol:[258,2,1,""],probabilityCol:[258,2,1,""],rawPredictionCol:[258,2,1,""],read:[258,1,1,""],save:[258,1,1,""],seed:[258,2,1,""],set:[258,1,1,""],setBlockSize:[258,1,1,""],setFeaturesCol:[258,1,1,""],setInitialWeights:[258,1,1,""],setLabelCol:[258,1,1,""],setLayers:[258,1,1,""],setMaxIter:[258,1,1,""],setParams:[258,1,1,""],setPredictionCol:[258,1,1,""],setProbabilityCol:[258,1,1,""],setRawPredictionCol:[258,1,1,""],setSeed:[258,1,1,""],setSolver:[258,1,1,""],setStepSize:[258,1,1,""],setThresholds:[258,1,1,""],setTol:[258,1,1,""],solver:[258,2,1,""],stepSize:[258,2,1,""],thresholds:[258,2,1,""],tol:[258,2,1,""],write:[258,1,1,""]},"pyspark.ml.classification.NaiveBayes":{clear:[259,1,1,""],copy:[259,1,1,""],explainParam:[259,1,1,""],explainParams:[259,1,1,""],extractParamMap:[259,1,1,""],featuresCol:[259,2,1,""],fit:[259,1,1,""],fitMultiple:[259,1,1,""],getFeaturesCol:[259,1,1,""],getLabelCol:[259,1,1,""],getModelType:[259,1,1,""],getOrDefault:[259,1,1,""],getParam:[259,1,1,""],getPredictionCol:[259,1,1,""],getProbabilityCol:[259,1,1,""],getRawPredictionCol:[259,1,1,""],getSmoothing:[259,1,1,""],getThresholds:[259,1,1,""],getWeightCol:[259,1,1,""],hasDefault:[259,1,1,""],hasParam:[259,1,1,""],isDefined:[259,1,1,""],isSet:[259,1,1,""],labelCol:[259,2,1,""],load:[259,1,1,""],modelType:[259,2,1,""],params:[259,2,1,""],predictionCol:[259,2,1,""],probabilityCol:[259,2,1,""],rawPredictionCol:[259,2,1,""],read:[259,1,1,""],save:[259,1,1,""],set:[259,1,1,""],setFeaturesCol:[259,1,1,""],setLabelCol:[259,1,1,""],setModelType:[259,1,1,""],setParams:[259,1,1,""],setPredictionCol:[259,1,1,""],setProbabilityCol:[259,1,1,""],setRawPredictionCol:[259,1,1,""],setSmoothing:[259,1,1,""],setThresholds:[259,1,1,""],setWeightCol:[259,1,1,""],smoothing:[259,2,1,""],thresholds:[259,2,1,""],weightCol:[259,2,1,""],write:[259,1,1,""]},"pyspark.ml.classification.NaiveBayesModel":{clear:[260,1,1,""],copy:[260,1,1,""],explainParam:[260,1,1,""],explainParams:[260,1,1,""],extractParamMap:[260,1,1,""],featuresCol:[260,2,1,""],getFeaturesCol:[260,1,1,""],getLabelCol:[260,1,1,""],getModelType:[260,1,1,""],getOrDefault:[260,1,1,""],getParam:[260,1,1,""],getPredictionCol:[260,1,1,""],getProbabilityCol:[260,1,1,""],getRawPredictionCol:[260,1,1,""],getSmoothing:[260,1,1,""],getThresholds:[260,1,1,""],getWeightCol:[260,1,1,""],hasDefault:[260,1,1,""],hasParam:[260,1,1,""],isDefined:[260,1,1,""],isSet:[260,1,1,""],labelCol:[260,2,1,""],load:[260,1,1,""],modelType:[260,2,1,""],numClasses:[260,2,1,""],numFeatures:[260,2,1,""],params:[260,2,1,""],pi:[260,2,1,""],predict:[260,1,1,""],predictProbability:[260,1,1,""],predictRaw:[260,1,1,""],predictionCol:[260,2,1,""],probabilityCol:[260,2,1,""],rawPredictionCol:[260,2,1,""],read:[260,1,1,""],save:[260,1,1,""],set:[260,1,1,""],setFeaturesCol:[260,1,1,""],setPredictionCol:[260,1,1,""],setProbabilityCol:[260,1,1,""],setRawPredictionCol:[260,1,1,""],setThresholds:[260,1,1,""],sigma:[260,2,1,""],smoothing:[260,2,1,""],theta:[260,2,1,""],thresholds:[260,2,1,""],transform:[260,1,1,""],weightCol:[260,2,1,""],write:[260,1,1,""]},"pyspark.ml.classification.OneVsRest":{classifier:[261,2,1,""],clear:[261,1,1,""],copy:[261,1,1,""],explainParam:[261,1,1,""],explainParams:[261,1,1,""],extractParamMap:[261,1,1,""],featuresCol:[261,2,1,""],fit:[261,1,1,""],fitMultiple:[261,1,1,""],getClassifier:[261,1,1,""],getFeaturesCol:[261,1,1,""],getLabelCol:[261,1,1,""],getOrDefault:[261,1,1,""],getParallelism:[261,1,1,""],getParam:[261,1,1,""],getPredictionCol:[261,1,1,""],getRawPredictionCol:[261,1,1,""],getWeightCol:[261,1,1,""],hasDefault:[261,1,1,""],hasParam:[261,1,1,""],isDefined:[261,1,1,""],isSet:[261,1,1,""],labelCol:[261,2,1,""],load:[261,1,1,""],parallelism:[261,2,1,""],params:[261,2,1,""],predictionCol:[261,2,1,""],rawPredictionCol:[261,2,1,""],read:[261,1,1,""],save:[261,1,1,""],set:[261,1,1,""],setClassifier:[261,1,1,""],setFeaturesCol:[261,1,1,""],setLabelCol:[261,1,1,""],setParallelism:[261,1,1,""],setParams:[261,1,1,""],setPredictionCol:[261,1,1,""],setRawPredictionCol:[261,1,1,""],setWeightCol:[261,1,1,""],weightCol:[261,2,1,""],write:[261,1,1,""]},"pyspark.ml.classification.OneVsRestModel":{classifier:[262,2,1,""],clear:[262,1,1,""],copy:[262,1,1,""],explainParam:[262,1,1,""],explainParams:[262,1,1,""],extractParamMap:[262,1,1,""],featuresCol:[262,2,1,""],getClassifier:[262,1,1,""],getFeaturesCol:[262,1,1,""],getLabelCol:[262,1,1,""],getOrDefault:[262,1,1,""],getParam:[262,1,1,""],getPredictionCol:[262,1,1,""],getRawPredictionCol:[262,1,1,""],getWeightCol:[262,1,1,""],hasDefault:[262,1,1,""],hasParam:[262,1,1,""],isDefined:[262,1,1,""],isSet:[262,1,1,""],labelCol:[262,2,1,""],load:[262,1,1,""],params:[262,2,1,""],predictionCol:[262,2,1,""],rawPredictionCol:[262,2,1,""],read:[262,1,1,""],save:[262,1,1,""],set:[262,1,1,""],setFeaturesCol:[262,1,1,""],setPredictionCol:[262,1,1,""],setRawPredictionCol:[262,1,1,""],transform:[262,1,1,""],weightCol:[262,2,1,""],write:[262,1,1,""]},"pyspark.ml.classification.RandomForestClassificationModel":{bootstrap:[263,2,1,""],cacheNodeIds:[263,2,1,""],checkpointInterval:[263,2,1,""],clear:[263,1,1,""],copy:[263,1,1,""],evaluate:[263,1,1,""],explainParam:[263,1,1,""],explainParams:[263,1,1,""],extractParamMap:[263,1,1,""],featureImportances:[263,2,1,""],featureSubsetStrategy:[263,2,1,""],featuresCol:[263,2,1,""],getBootstrap:[263,1,1,""],getCacheNodeIds:[263,1,1,""],getCheckpointInterval:[263,1,1,""],getFeatureSubsetStrategy:[263,1,1,""],getFeaturesCol:[263,1,1,""],getImpurity:[263,1,1,""],getLabelCol:[263,1,1,""],getLeafCol:[263,1,1,""],getMaxBins:[263,1,1,""],getMaxDepth:[263,1,1,""],getMaxMemoryInMB:[263,1,1,""],getMinInfoGain:[263,1,1,""],getMinInstancesPerNode:[263,1,1,""],getMinWeightFractionPerNode:[263,1,1,""],getNumTrees:[263,2,1,""],getOrDefault:[263,1,1,""],getParam:[263,1,1,""],getPredictionCol:[263,1,1,""],getProbabilityCol:[263,1,1,""],getRawPredictionCol:[263,1,1,""],getSeed:[263,1,1,""],getSubsamplingRate:[263,1,1,""],getThresholds:[263,1,1,""],getWeightCol:[263,1,1,""],hasDefault:[263,1,1,""],hasParam:[263,1,1,""],hasSummary:[263,2,1,""],impurity:[263,2,1,""],isDefined:[263,1,1,""],isSet:[263,1,1,""],labelCol:[263,2,1,""],leafCol:[263,2,1,""],load:[263,1,1,""],maxBins:[263,2,1,""],maxDepth:[263,2,1,""],maxMemoryInMB:[263,2,1,""],minInfoGain:[263,2,1,""],minInstancesPerNode:[263,2,1,""],minWeightFractionPerNode:[263,2,1,""],numClasses:[263,2,1,""],numFeatures:[263,2,1,""],numTrees:[263,2,1,""],params:[263,2,1,""],predict:[263,1,1,""],predictLeaf:[263,1,1,""],predictProbability:[263,1,1,""],predictRaw:[263,1,1,""],predictionCol:[263,2,1,""],probabilityCol:[263,2,1,""],rawPredictionCol:[263,2,1,""],read:[263,1,1,""],save:[263,1,1,""],seed:[263,2,1,""],set:[263,1,1,""],setFeaturesCol:[263,1,1,""],setLeafCol:[263,1,1,""],setPredictionCol:[263,1,1,""],setProbabilityCol:[263,1,1,""],setRawPredictionCol:[263,1,1,""],setThresholds:[263,1,1,""],subsamplingRate:[263,2,1,""],summary:[263,2,1,""],supportedFeatureSubsetStrategies:[263,2,1,""],supportedImpurities:[263,2,1,""],thresholds:[263,2,1,""],toDebugString:[263,2,1,""],totalNumNodes:[263,2,1,""],transform:[263,1,1,""],treeWeights:[263,2,1,""],trees:[263,2,1,""],weightCol:[263,2,1,""],write:[263,1,1,""]},"pyspark.ml.classification.RandomForestClassificationSummary":{accuracy:[264,2,1,""],fMeasureByLabel:[264,1,1,""],falsePositiveRateByLabel:[264,2,1,""],labelCol:[264,2,1,""],labels:[264,2,1,""],precisionByLabel:[264,2,1,""],predictionCol:[264,2,1,""],predictions:[264,2,1,""],recallByLabel:[264,2,1,""],truePositiveRateByLabel:[264,2,1,""],weightCol:[264,2,1,""],weightedFMeasure:[264,1,1,""],weightedFalsePositiveRate:[264,2,1,""],weightedPrecision:[264,2,1,""],weightedRecall:[264,2,1,""],weightedTruePositiveRate:[264,2,1,""]},"pyspark.ml.classification.RandomForestClassificationTrainingSummary":{accuracy:[265,2,1,""],fMeasureByLabel:[265,1,1,""],falsePositiveRateByLabel:[265,2,1,""],labelCol:[265,2,1,""],labels:[265,2,1,""],objectiveHistory:[265,2,1,""],precisionByLabel:[265,2,1,""],predictionCol:[265,2,1,""],predictions:[265,2,1,""],recallByLabel:[265,2,1,""],totalIterations:[265,2,1,""],truePositiveRateByLabel:[265,2,1,""],weightCol:[265,2,1,""],weightedFMeasure:[265,1,1,""],weightedFalsePositiveRate:[265,2,1,""],weightedPrecision:[265,2,1,""],weightedRecall:[265,2,1,""],weightedTruePositiveRate:[265,2,1,""]},"pyspark.ml.classification.RandomForestClassifier":{bootstrap:[266,2,1,""],cacheNodeIds:[266,2,1,""],checkpointInterval:[266,2,1,""],clear:[266,1,1,""],copy:[266,1,1,""],explainParam:[266,1,1,""],explainParams:[266,1,1,""],extractParamMap:[266,1,1,""],featureSubsetStrategy:[266,2,1,""],featuresCol:[266,2,1,""],fit:[266,1,1,""],fitMultiple:[266,1,1,""],getBootstrap:[266,1,1,""],getCacheNodeIds:[266,1,1,""],getCheckpointInterval:[266,1,1,""],getFeatureSubsetStrategy:[266,1,1,""],getFeaturesCol:[266,1,1,""],getImpurity:[266,1,1,""],getLabelCol:[266,1,1,""],getLeafCol:[266,1,1,""],getMaxBins:[266,1,1,""],getMaxDepth:[266,1,1,""],getMaxMemoryInMB:[266,1,1,""],getMinInfoGain:[266,1,1,""],getMinInstancesPerNode:[266,1,1,""],getMinWeightFractionPerNode:[266,1,1,""],getNumTrees:[266,1,1,""],getOrDefault:[266,1,1,""],getParam:[266,1,1,""],getPredictionCol:[266,1,1,""],getProbabilityCol:[266,1,1,""],getRawPredictionCol:[266,1,1,""],getSeed:[266,1,1,""],getSubsamplingRate:[266,1,1,""],getThresholds:[266,1,1,""],getWeightCol:[266,1,1,""],hasDefault:[266,1,1,""],hasParam:[266,1,1,""],impurity:[266,2,1,""],isDefined:[266,1,1,""],isSet:[266,1,1,""],labelCol:[266,2,1,""],leafCol:[266,2,1,""],load:[266,1,1,""],maxBins:[266,2,1,""],maxDepth:[266,2,1,""],maxMemoryInMB:[266,2,1,""],minInfoGain:[266,2,1,""],minInstancesPerNode:[266,2,1,""],minWeightFractionPerNode:[266,2,1,""],numTrees:[266,2,1,""],params:[266,2,1,""],predictionCol:[266,2,1,""],probabilityCol:[266,2,1,""],rawPredictionCol:[266,2,1,""],read:[266,1,1,""],save:[266,1,1,""],seed:[266,2,1,""],set:[266,1,1,""],setBootstrap:[266,1,1,""],setCacheNodeIds:[266,1,1,""],setCheckpointInterval:[266,1,1,""],setFeatureSubsetStrategy:[266,1,1,""],setFeaturesCol:[266,1,1,""],setImpurity:[266,1,1,""],setLabelCol:[266,1,1,""],setLeafCol:[266,1,1,""],setMaxBins:[266,1,1,""],setMaxDepth:[266,1,1,""],setMaxMemoryInMB:[266,1,1,""],setMinInfoGain:[266,1,1,""],setMinInstancesPerNode:[266,1,1,""],setMinWeightFractionPerNode:[266,1,1,""],setNumTrees:[266,1,1,""],setParams:[266,1,1,""],setPredictionCol:[266,1,1,""],setProbabilityCol:[266,1,1,""],setRawPredictionCol:[266,1,1,""],setSeed:[266,1,1,""],setSubsamplingRate:[266,1,1,""],setThresholds:[266,1,1,""],setWeightCol:[266,1,1,""],subsamplingRate:[266,2,1,""],supportedFeatureSubsetStrategies:[266,2,1,""],supportedImpurities:[266,2,1,""],thresholds:[266,2,1,""],weightCol:[266,2,1,""],write:[266,1,1,""]},"pyspark.ml.clustering":{BisectingKMeans:[267,0,1,""],BisectingKMeansModel:[268,0,1,""],BisectingKMeansSummary:[269,0,1,""],DistributedLDAModel:[270,0,1,""],GaussianMixture:[271,0,1,""],GaussianMixtureModel:[272,0,1,""],GaussianMixtureSummary:[273,0,1,""],KMeans:[274,0,1,""],KMeansModel:[275,0,1,""],KMeansSummary:[276,0,1,""],LDA:[277,0,1,""],LDAModel:[278,0,1,""],LocalLDAModel:[279,0,1,""],PowerIterationClustering:[280,0,1,""]},"pyspark.ml.clustering.BisectingKMeans":{clear:[267,1,1,""],copy:[267,1,1,""],distanceMeasure:[267,2,1,""],explainParam:[267,1,1,""],explainParams:[267,1,1,""],extractParamMap:[267,1,1,""],featuresCol:[267,2,1,""],fit:[267,1,1,""],fitMultiple:[267,1,1,""],getDistanceMeasure:[267,1,1,""],getFeaturesCol:[267,1,1,""],getK:[267,1,1,""],getMaxIter:[267,1,1,""],getMinDivisibleClusterSize:[267,1,1,""],getOrDefault:[267,1,1,""],getParam:[267,1,1,""],getPredictionCol:[267,1,1,""],getSeed:[267,1,1,""],getWeightCol:[267,1,1,""],hasDefault:[267,1,1,""],hasParam:[267,1,1,""],isDefined:[267,1,1,""],isSet:[267,1,1,""],k:[267,2,1,""],load:[267,1,1,""],maxIter:[267,2,1,""],minDivisibleClusterSize:[267,2,1,""],params:[267,2,1,""],predictionCol:[267,2,1,""],read:[267,1,1,""],save:[267,1,1,""],seed:[267,2,1,""],set:[267,1,1,""],setDistanceMeasure:[267,1,1,""],setFeaturesCol:[267,1,1,""],setK:[267,1,1,""],setMaxIter:[267,1,1,""],setMinDivisibleClusterSize:[267,1,1,""],setParams:[267,1,1,""],setPredictionCol:[267,1,1,""],setSeed:[267,1,1,""],setWeightCol:[267,1,1,""],weightCol:[267,2,1,""],write:[267,1,1,""]},"pyspark.ml.clustering.BisectingKMeansModel":{clear:[268,1,1,""],clusterCenters:[268,1,1,""],computeCost:[268,1,1,""],copy:[268,1,1,""],distanceMeasure:[268,2,1,""],explainParam:[268,1,1,""],explainParams:[268,1,1,""],extractParamMap:[268,1,1,""],featuresCol:[268,2,1,""],getDistanceMeasure:[268,1,1,""],getFeaturesCol:[268,1,1,""],getK:[268,1,1,""],getMaxIter:[268,1,1,""],getMinDivisibleClusterSize:[268,1,1,""],getOrDefault:[268,1,1,""],getParam:[268,1,1,""],getPredictionCol:[268,1,1,""],getSeed:[268,1,1,""],getWeightCol:[268,1,1,""],hasDefault:[268,1,1,""],hasParam:[268,1,1,""],hasSummary:[268,2,1,""],isDefined:[268,1,1,""],isSet:[268,1,1,""],k:[268,2,1,""],load:[268,1,1,""],maxIter:[268,2,1,""],minDivisibleClusterSize:[268,2,1,""],params:[268,2,1,""],predict:[268,1,1,""],predictionCol:[268,2,1,""],read:[268,1,1,""],save:[268,1,1,""],seed:[268,2,1,""],set:[268,1,1,""],setFeaturesCol:[268,1,1,""],setPredictionCol:[268,1,1,""],summary:[268,2,1,""],transform:[268,1,1,""],weightCol:[268,2,1,""],write:[268,1,1,""]},"pyspark.ml.clustering.BisectingKMeansSummary":{cluster:[269,2,1,""],clusterSizes:[269,2,1,""],featuresCol:[269,2,1,""],k:[269,2,1,""],numIter:[269,2,1,""],predictionCol:[269,2,1,""],predictions:[269,2,1,""],trainingCost:[269,2,1,""]},"pyspark.ml.clustering.DistributedLDAModel":{checkpointInterval:[270,2,1,""],clear:[270,1,1,""],copy:[270,1,1,""],describeTopics:[270,1,1,""],docConcentration:[270,2,1,""],estimatedDocConcentration:[270,1,1,""],explainParam:[270,1,1,""],explainParams:[270,1,1,""],extractParamMap:[270,1,1,""],featuresCol:[270,2,1,""],getCheckpointFiles:[270,1,1,""],getCheckpointInterval:[270,1,1,""],getDocConcentration:[270,1,1,""],getFeaturesCol:[270,1,1,""],getK:[270,1,1,""],getKeepLastCheckpoint:[270,1,1,""],getLearningDecay:[270,1,1,""],getLearningOffset:[270,1,1,""],getMaxIter:[270,1,1,""],getOptimizeDocConcentration:[270,1,1,""],getOptimizer:[270,1,1,""],getOrDefault:[270,1,1,""],getParam:[270,1,1,""],getSeed:[270,1,1,""],getSubsamplingRate:[270,1,1,""],getTopicConcentration:[270,1,1,""],getTopicDistributionCol:[270,1,1,""],hasDefault:[270,1,1,""],hasParam:[270,1,1,""],isDefined:[270,1,1,""],isDistributed:[270,1,1,""],isSet:[270,1,1,""],k:[270,2,1,""],keepLastCheckpoint:[270,2,1,""],learningDecay:[270,2,1,""],learningOffset:[270,2,1,""],load:[270,1,1,""],logLikelihood:[270,1,1,""],logPerplexity:[270,1,1,""],logPrior:[270,1,1,""],maxIter:[270,2,1,""],optimizeDocConcentration:[270,2,1,""],optimizer:[270,2,1,""],params:[270,2,1,""],read:[270,1,1,""],save:[270,1,1,""],seed:[270,2,1,""],set:[270,1,1,""],setFeaturesCol:[270,1,1,""],setSeed:[270,1,1,""],setTopicDistributionCol:[270,1,1,""],subsamplingRate:[270,2,1,""],toLocal:[270,1,1,""],topicConcentration:[270,2,1,""],topicDistributionCol:[270,2,1,""],topicsMatrix:[270,1,1,""],trainingLogLikelihood:[270,1,1,""],transform:[270,1,1,""],vocabSize:[270,1,1,""],write:[270,1,1,""]},"pyspark.ml.clustering.GaussianMixture":{aggregationDepth:[271,2,1,""],clear:[271,1,1,""],copy:[271,1,1,""],explainParam:[271,1,1,""],explainParams:[271,1,1,""],extractParamMap:[271,1,1,""],featuresCol:[271,2,1,""],fit:[271,1,1,""],fitMultiple:[271,1,1,""],getAggregationDepth:[271,1,1,""],getFeaturesCol:[271,1,1,""],getK:[271,1,1,""],getMaxIter:[271,1,1,""],getOrDefault:[271,1,1,""],getParam:[271,1,1,""],getPredictionCol:[271,1,1,""],getProbabilityCol:[271,1,1,""],getSeed:[271,1,1,""],getTol:[271,1,1,""],getWeightCol:[271,1,1,""],hasDefault:[271,1,1,""],hasParam:[271,1,1,""],isDefined:[271,1,1,""],isSet:[271,1,1,""],k:[271,2,1,""],load:[271,1,1,""],maxIter:[271,2,1,""],params:[271,2,1,""],predictionCol:[271,2,1,""],probabilityCol:[271,2,1,""],read:[271,1,1,""],save:[271,1,1,""],seed:[271,2,1,""],set:[271,1,1,""],setAggregationDepth:[271,1,1,""],setFeaturesCol:[271,1,1,""],setK:[271,1,1,""],setMaxIter:[271,1,1,""],setParams:[271,1,1,""],setPredictionCol:[271,1,1,""],setProbabilityCol:[271,1,1,""],setSeed:[271,1,1,""],setTol:[271,1,1,""],setWeightCol:[271,1,1,""],tol:[271,2,1,""],weightCol:[271,2,1,""],write:[271,1,1,""]},"pyspark.ml.clustering.GaussianMixtureModel":{aggregationDepth:[272,2,1,""],clear:[272,1,1,""],copy:[272,1,1,""],explainParam:[272,1,1,""],explainParams:[272,1,1,""],extractParamMap:[272,1,1,""],featuresCol:[272,2,1,""],gaussians:[272,2,1,""],gaussiansDF:[272,2,1,""],getAggregationDepth:[272,1,1,""],getFeaturesCol:[272,1,1,""],getK:[272,1,1,""],getMaxIter:[272,1,1,""],getOrDefault:[272,1,1,""],getParam:[272,1,1,""],getPredictionCol:[272,1,1,""],getProbabilityCol:[272,1,1,""],getSeed:[272,1,1,""],getTol:[272,1,1,""],getWeightCol:[272,1,1,""],hasDefault:[272,1,1,""],hasParam:[272,1,1,""],hasSummary:[272,2,1,""],isDefined:[272,1,1,""],isSet:[272,1,1,""],k:[272,2,1,""],load:[272,1,1,""],maxIter:[272,2,1,""],params:[272,2,1,""],predict:[272,1,1,""],predictProbability:[272,1,1,""],predictionCol:[272,2,1,""],probabilityCol:[272,2,1,""],read:[272,1,1,""],save:[272,1,1,""],seed:[272,2,1,""],set:[272,1,1,""],setFeaturesCol:[272,1,1,""],setPredictionCol:[272,1,1,""],setProbabilityCol:[272,1,1,""],summary:[272,2,1,""],tol:[272,2,1,""],transform:[272,1,1,""],weightCol:[272,2,1,""],weights:[272,2,1,""],write:[272,1,1,""]},"pyspark.ml.clustering.GaussianMixtureSummary":{cluster:[273,2,1,""],clusterSizes:[273,2,1,""],featuresCol:[273,2,1,""],k:[273,2,1,""],logLikelihood:[273,2,1,""],numIter:[273,2,1,""],predictionCol:[273,2,1,""],predictions:[273,2,1,""],probability:[273,2,1,""],probabilityCol:[273,2,1,""]},"pyspark.ml.clustering.KMeans":{clear:[274,1,1,""],copy:[274,1,1,""],distanceMeasure:[274,2,1,""],explainParam:[274,1,1,""],explainParams:[274,1,1,""],extractParamMap:[274,1,1,""],featuresCol:[274,2,1,""],fit:[274,1,1,""],fitMultiple:[274,1,1,""],getDistanceMeasure:[274,1,1,""],getFeaturesCol:[274,1,1,""],getInitMode:[274,1,1,""],getInitSteps:[274,1,1,""],getK:[274,1,1,""],getMaxIter:[274,1,1,""],getOrDefault:[274,1,1,""],getParam:[274,1,1,""],getPredictionCol:[274,1,1,""],getSeed:[274,1,1,""],getTol:[274,1,1,""],getWeightCol:[274,1,1,""],hasDefault:[274,1,1,""],hasParam:[274,1,1,""],initMode:[274,2,1,""],initSteps:[274,2,1,""],isDefined:[274,1,1,""],isSet:[274,1,1,""],k:[274,2,1,""],load:[274,1,1,""],maxIter:[274,2,1,""],params:[274,2,1,""],predictionCol:[274,2,1,""],read:[274,1,1,""],save:[274,1,1,""],seed:[274,2,1,""],set:[274,1,1,""],setDistanceMeasure:[274,1,1,""],setFeaturesCol:[274,1,1,""],setInitMode:[274,1,1,""],setInitSteps:[274,1,1,""],setK:[274,1,1,""],setMaxIter:[274,1,1,""],setParams:[274,1,1,""],setPredictionCol:[274,1,1,""],setSeed:[274,1,1,""],setTol:[274,1,1,""],setWeightCol:[274,1,1,""],tol:[274,2,1,""],weightCol:[274,2,1,""],write:[274,1,1,""]},"pyspark.ml.clustering.KMeansModel":{clear:[275,1,1,""],clusterCenters:[275,1,1,""],copy:[275,1,1,""],distanceMeasure:[275,2,1,""],explainParam:[275,1,1,""],explainParams:[275,1,1,""],extractParamMap:[275,1,1,""],featuresCol:[275,2,1,""],getDistanceMeasure:[275,1,1,""],getFeaturesCol:[275,1,1,""],getInitMode:[275,1,1,""],getInitSteps:[275,1,1,""],getK:[275,1,1,""],getMaxIter:[275,1,1,""],getOrDefault:[275,1,1,""],getParam:[275,1,1,""],getPredictionCol:[275,1,1,""],getSeed:[275,1,1,""],getTol:[275,1,1,""],getWeightCol:[275,1,1,""],hasDefault:[275,1,1,""],hasParam:[275,1,1,""],hasSummary:[275,2,1,""],initMode:[275,2,1,""],initSteps:[275,2,1,""],isDefined:[275,1,1,""],isSet:[275,1,1,""],k:[275,2,1,""],load:[275,1,1,""],maxIter:[275,2,1,""],params:[275,2,1,""],predict:[275,1,1,""],predictionCol:[275,2,1,""],read:[275,1,1,""],save:[275,1,1,""],seed:[275,2,1,""],set:[275,1,1,""],setFeaturesCol:[275,1,1,""],setPredictionCol:[275,1,1,""],summary:[275,2,1,""],tol:[275,2,1,""],transform:[275,1,1,""],weightCol:[275,2,1,""],write:[275,1,1,""]},"pyspark.ml.clustering.KMeansSummary":{cluster:[276,2,1,""],clusterSizes:[276,2,1,""],featuresCol:[276,2,1,""],k:[276,2,1,""],numIter:[276,2,1,""],predictionCol:[276,2,1,""],predictions:[276,2,1,""],trainingCost:[276,2,1,""]},"pyspark.ml.clustering.LDA":{checkpointInterval:[277,2,1,""],clear:[277,1,1,""],copy:[277,1,1,""],docConcentration:[277,2,1,""],explainParam:[277,1,1,""],explainParams:[277,1,1,""],extractParamMap:[277,1,1,""],featuresCol:[277,2,1,""],fit:[277,1,1,""],fitMultiple:[277,1,1,""],getCheckpointInterval:[277,1,1,""],getDocConcentration:[277,1,1,""],getFeaturesCol:[277,1,1,""],getK:[277,1,1,""],getKeepLastCheckpoint:[277,1,1,""],getLearningDecay:[277,1,1,""],getLearningOffset:[277,1,1,""],getMaxIter:[277,1,1,""],getOptimizeDocConcentration:[277,1,1,""],getOptimizer:[277,1,1,""],getOrDefault:[277,1,1,""],getParam:[277,1,1,""],getSeed:[277,1,1,""],getSubsamplingRate:[277,1,1,""],getTopicConcentration:[277,1,1,""],getTopicDistributionCol:[277,1,1,""],hasDefault:[277,1,1,""],hasParam:[277,1,1,""],isDefined:[277,1,1,""],isSet:[277,1,1,""],k:[277,2,1,""],keepLastCheckpoint:[277,2,1,""],learningDecay:[277,2,1,""],learningOffset:[277,2,1,""],load:[277,1,1,""],maxIter:[277,2,1,""],optimizeDocConcentration:[277,2,1,""],optimizer:[277,2,1,""],params:[277,2,1,""],read:[277,1,1,""],save:[277,1,1,""],seed:[277,2,1,""],set:[277,1,1,""],setCheckpointInterval:[277,1,1,""],setDocConcentration:[277,1,1,""],setFeaturesCol:[277,1,1,""],setK:[277,1,1,""],setKeepLastCheckpoint:[277,1,1,""],setLearningDecay:[277,1,1,""],setLearningOffset:[277,1,1,""],setMaxIter:[277,1,1,""],setOptimizeDocConcentration:[277,1,1,""],setOptimizer:[277,1,1,""],setParams:[277,1,1,""],setSeed:[277,1,1,""],setSubsamplingRate:[277,1,1,""],setTopicConcentration:[277,1,1,""],setTopicDistributionCol:[277,1,1,""],subsamplingRate:[277,2,1,""],topicConcentration:[277,2,1,""],topicDistributionCol:[277,2,1,""],write:[277,1,1,""]},"pyspark.ml.clustering.LDAModel":{checkpointInterval:[278,2,1,""],clear:[278,1,1,""],copy:[278,1,1,""],describeTopics:[278,1,1,""],docConcentration:[278,2,1,""],estimatedDocConcentration:[278,1,1,""],explainParam:[278,1,1,""],explainParams:[278,1,1,""],extractParamMap:[278,1,1,""],featuresCol:[278,2,1,""],getCheckpointInterval:[278,1,1,""],getDocConcentration:[278,1,1,""],getFeaturesCol:[278,1,1,""],getK:[278,1,1,""],getKeepLastCheckpoint:[278,1,1,""],getLearningDecay:[278,1,1,""],getLearningOffset:[278,1,1,""],getMaxIter:[278,1,1,""],getOptimizeDocConcentration:[278,1,1,""],getOptimizer:[278,1,1,""],getOrDefault:[278,1,1,""],getParam:[278,1,1,""],getSeed:[278,1,1,""],getSubsamplingRate:[278,1,1,""],getTopicConcentration:[278,1,1,""],getTopicDistributionCol:[278,1,1,""],hasDefault:[278,1,1,""],hasParam:[278,1,1,""],isDefined:[278,1,1,""],isDistributed:[278,1,1,""],isSet:[278,1,1,""],k:[278,2,1,""],keepLastCheckpoint:[278,2,1,""],learningDecay:[278,2,1,""],learningOffset:[278,2,1,""],logLikelihood:[278,1,1,""],logPerplexity:[278,1,1,""],maxIter:[278,2,1,""],optimizeDocConcentration:[278,2,1,""],optimizer:[278,2,1,""],params:[278,2,1,""],seed:[278,2,1,""],set:[278,1,1,""],setFeaturesCol:[278,1,1,""],setSeed:[278,1,1,""],setTopicDistributionCol:[278,1,1,""],subsamplingRate:[278,2,1,""],topicConcentration:[278,2,1,""],topicDistributionCol:[278,2,1,""],topicsMatrix:[278,1,1,""],transform:[278,1,1,""],vocabSize:[278,1,1,""]},"pyspark.ml.clustering.LocalLDAModel":{checkpointInterval:[279,2,1,""],clear:[279,1,1,""],copy:[279,1,1,""],describeTopics:[279,1,1,""],docConcentration:[279,2,1,""],estimatedDocConcentration:[279,1,1,""],explainParam:[279,1,1,""],explainParams:[279,1,1,""],extractParamMap:[279,1,1,""],featuresCol:[279,2,1,""],getCheckpointInterval:[279,1,1,""],getDocConcentration:[279,1,1,""],getFeaturesCol:[279,1,1,""],getK:[279,1,1,""],getKeepLastCheckpoint:[279,1,1,""],getLearningDecay:[279,1,1,""],getLearningOffset:[279,1,1,""],getMaxIter:[279,1,1,""],getOptimizeDocConcentration:[279,1,1,""],getOptimizer:[279,1,1,""],getOrDefault:[279,1,1,""],getParam:[279,1,1,""],getSeed:[279,1,1,""],getSubsamplingRate:[279,1,1,""],getTopicConcentration:[279,1,1,""],getTopicDistributionCol:[279,1,1,""],hasDefault:[279,1,1,""],hasParam:[279,1,1,""],isDefined:[279,1,1,""],isDistributed:[279,1,1,""],isSet:[279,1,1,""],k:[279,2,1,""],keepLastCheckpoint:[279,2,1,""],learningDecay:[279,2,1,""],learningOffset:[279,2,1,""],load:[279,1,1,""],logLikelihood:[279,1,1,""],logPerplexity:[279,1,1,""],maxIter:[279,2,1,""],optimizeDocConcentration:[279,2,1,""],optimizer:[279,2,1,""],params:[279,2,1,""],read:[279,1,1,""],save:[279,1,1,""],seed:[279,2,1,""],set:[279,1,1,""],setFeaturesCol:[279,1,1,""],setSeed:[279,1,1,""],setTopicDistributionCol:[279,1,1,""],subsamplingRate:[279,2,1,""],topicConcentration:[279,2,1,""],topicDistributionCol:[279,2,1,""],topicsMatrix:[279,1,1,""],transform:[279,1,1,""],vocabSize:[279,1,1,""],write:[279,1,1,""]},"pyspark.ml.clustering.PowerIterationClustering":{assignClusters:[280,1,1,""],clear:[280,1,1,""],copy:[280,1,1,""],dstCol:[280,2,1,""],explainParam:[280,1,1,""],explainParams:[280,1,1,""],extractParamMap:[280,1,1,""],getDstCol:[280,1,1,""],getInitMode:[280,1,1,""],getK:[280,1,1,""],getMaxIter:[280,1,1,""],getOrDefault:[280,1,1,""],getParam:[280,1,1,""],getSrcCol:[280,1,1,""],getWeightCol:[280,1,1,""],hasDefault:[280,1,1,""],hasParam:[280,1,1,""],initMode:[280,2,1,""],isDefined:[280,1,1,""],isSet:[280,1,1,""],k:[280,2,1,""],load:[280,1,1,""],maxIter:[280,2,1,""],params:[280,2,1,""],read:[280,1,1,""],save:[280,1,1,""],set:[280,1,1,""],setDstCol:[280,1,1,""],setInitMode:[280,1,1,""],setK:[280,1,1,""],setMaxIter:[280,1,1,""],setParams:[280,1,1,""],setSrcCol:[280,1,1,""],setWeightCol:[280,1,1,""],srcCol:[280,2,1,""],weightCol:[280,2,1,""],write:[280,1,1,""]},"pyspark.ml.evaluation":{BinaryClassificationEvaluator:[281,0,1,""],ClusteringEvaluator:[282,0,1,""],Evaluator:[283,0,1,""],MulticlassClassificationEvaluator:[284,0,1,""],MultilabelClassificationEvaluator:[285,0,1,""],RankingEvaluator:[286,0,1,""],RegressionEvaluator:[287,0,1,""]},"pyspark.ml.evaluation.BinaryClassificationEvaluator":{clear:[281,1,1,""],copy:[281,1,1,""],evaluate:[281,1,1,""],explainParam:[281,1,1,""],explainParams:[281,1,1,""],extractParamMap:[281,1,1,""],getLabelCol:[281,1,1,""],getMetricName:[281,1,1,""],getNumBins:[281,1,1,""],getOrDefault:[281,1,1,""],getParam:[281,1,1,""],getRawPredictionCol:[281,1,1,""],getWeightCol:[281,1,1,""],hasDefault:[281,1,1,""],hasParam:[281,1,1,""],isDefined:[281,1,1,""],isLargerBetter:[281,1,1,""],isSet:[281,1,1,""],labelCol:[281,2,1,""],load:[281,1,1,""],metricName:[281,2,1,""],numBins:[281,2,1,""],params:[281,2,1,""],rawPredictionCol:[281,2,1,""],read:[281,1,1,""],save:[281,1,1,""],set:[281,1,1,""],setLabelCol:[281,1,1,""],setMetricName:[281,1,1,""],setNumBins:[281,1,1,""],setParams:[281,1,1,""],setRawPredictionCol:[281,1,1,""],setWeightCol:[281,1,1,""],weightCol:[281,2,1,""],write:[281,1,1,""]},"pyspark.ml.evaluation.ClusteringEvaluator":{clear:[282,1,1,""],copy:[282,1,1,""],distanceMeasure:[282,2,1,""],evaluate:[282,1,1,""],explainParam:[282,1,1,""],explainParams:[282,1,1,""],extractParamMap:[282,1,1,""],featuresCol:[282,2,1,""],getDistanceMeasure:[282,1,1,""],getFeaturesCol:[282,1,1,""],getMetricName:[282,1,1,""],getOrDefault:[282,1,1,""],getParam:[282,1,1,""],getPredictionCol:[282,1,1,""],getWeightCol:[282,1,1,""],hasDefault:[282,1,1,""],hasParam:[282,1,1,""],isDefined:[282,1,1,""],isLargerBetter:[282,1,1,""],isSet:[282,1,1,""],load:[282,1,1,""],metricName:[282,2,1,""],params:[282,2,1,""],predictionCol:[282,2,1,""],read:[282,1,1,""],save:[282,1,1,""],set:[282,1,1,""],setDistanceMeasure:[282,1,1,""],setFeaturesCol:[282,1,1,""],setMetricName:[282,1,1,""],setParams:[282,1,1,""],setPredictionCol:[282,1,1,""],setWeightCol:[282,1,1,""],weightCol:[282,2,1,""],write:[282,1,1,""]},"pyspark.ml.evaluation.Evaluator":{clear:[283,1,1,""],copy:[283,1,1,""],evaluate:[283,1,1,""],explainParam:[283,1,1,""],explainParams:[283,1,1,""],extractParamMap:[283,1,1,""],getOrDefault:[283,1,1,""],getParam:[283,1,1,""],hasDefault:[283,1,1,""],hasParam:[283,1,1,""],isDefined:[283,1,1,""],isLargerBetter:[283,1,1,""],isSet:[283,1,1,""],params:[283,2,1,""],set:[283,1,1,""]},"pyspark.ml.evaluation.MulticlassClassificationEvaluator":{beta:[284,2,1,""],clear:[284,1,1,""],copy:[284,1,1,""],eps:[284,2,1,""],evaluate:[284,1,1,""],explainParam:[284,1,1,""],explainParams:[284,1,1,""],extractParamMap:[284,1,1,""],getBeta:[284,1,1,""],getEps:[284,1,1,""],getLabelCol:[284,1,1,""],getMetricLabel:[284,1,1,""],getMetricName:[284,1,1,""],getOrDefault:[284,1,1,""],getParam:[284,1,1,""],getPredictionCol:[284,1,1,""],getProbabilityCol:[284,1,1,""],getWeightCol:[284,1,1,""],hasDefault:[284,1,1,""],hasParam:[284,1,1,""],isDefined:[284,1,1,""],isLargerBetter:[284,1,1,""],isSet:[284,1,1,""],labelCol:[284,2,1,""],load:[284,1,1,""],metricLabel:[284,2,1,""],metricName:[284,2,1,""],params:[284,2,1,""],predictionCol:[284,2,1,""],probabilityCol:[284,2,1,""],read:[284,1,1,""],save:[284,1,1,""],set:[284,1,1,""],setBeta:[284,1,1,""],setEps:[284,1,1,""],setLabelCol:[284,1,1,""],setMetricLabel:[284,1,1,""],setMetricName:[284,1,1,""],setParams:[284,1,1,""],setPredictionCol:[284,1,1,""],setProbabilityCol:[284,1,1,""],setWeightCol:[284,1,1,""],weightCol:[284,2,1,""],write:[284,1,1,""]},"pyspark.ml.evaluation.MultilabelClassificationEvaluator":{clear:[285,1,1,""],copy:[285,1,1,""],evaluate:[285,1,1,""],explainParam:[285,1,1,""],explainParams:[285,1,1,""],extractParamMap:[285,1,1,""],getLabelCol:[285,1,1,""],getMetricLabel:[285,1,1,""],getMetricName:[285,1,1,""],getOrDefault:[285,1,1,""],getParam:[285,1,1,""],getPredictionCol:[285,1,1,""],hasDefault:[285,1,1,""],hasParam:[285,1,1,""],isDefined:[285,1,1,""],isLargerBetter:[285,1,1,""],isSet:[285,1,1,""],labelCol:[285,2,1,""],load:[285,1,1,""],metricLabel:[285,2,1,""],metricName:[285,2,1,""],params:[285,2,1,""],predictionCol:[285,2,1,""],read:[285,1,1,""],save:[285,1,1,""],set:[285,1,1,""],setLabelCol:[285,1,1,""],setMetricLabel:[285,1,1,""],setMetricName:[285,1,1,""],setParams:[285,1,1,""],setPredictionCol:[285,1,1,""],write:[285,1,1,""]},"pyspark.ml.evaluation.RankingEvaluator":{clear:[286,1,1,""],copy:[286,1,1,""],evaluate:[286,1,1,""],explainParam:[286,1,1,""],explainParams:[286,1,1,""],extractParamMap:[286,1,1,""],getK:[286,1,1,""],getLabelCol:[286,1,1,""],getMetricName:[286,1,1,""],getOrDefault:[286,1,1,""],getParam:[286,1,1,""],getPredictionCol:[286,1,1,""],hasDefault:[286,1,1,""],hasParam:[286,1,1,""],isDefined:[286,1,1,""],isLargerBetter:[286,1,1,""],isSet:[286,1,1,""],k:[286,2,1,""],labelCol:[286,2,1,""],load:[286,1,1,""],metricName:[286,2,1,""],params:[286,2,1,""],predictionCol:[286,2,1,""],read:[286,1,1,""],save:[286,1,1,""],set:[286,1,1,""],setK:[286,1,1,""],setLabelCol:[286,1,1,""],setMetricName:[286,1,1,""],setParams:[286,1,1,""],setPredictionCol:[286,1,1,""],write:[286,1,1,""]},"pyspark.ml.evaluation.RegressionEvaluator":{clear:[287,1,1,""],copy:[287,1,1,""],evaluate:[287,1,1,""],explainParam:[287,1,1,""],explainParams:[287,1,1,""],extractParamMap:[287,1,1,""],getLabelCol:[287,1,1,""],getMetricName:[287,1,1,""],getOrDefault:[287,1,1,""],getParam:[287,1,1,""],getPredictionCol:[287,1,1,""],getThroughOrigin:[287,1,1,""],getWeightCol:[287,1,1,""],hasDefault:[287,1,1,""],hasParam:[287,1,1,""],isDefined:[287,1,1,""],isLargerBetter:[287,1,1,""],isSet:[287,1,1,""],labelCol:[287,2,1,""],load:[287,1,1,""],metricName:[287,2,1,""],params:[287,2,1,""],predictionCol:[287,2,1,""],read:[287,1,1,""],save:[287,1,1,""],set:[287,1,1,""],setLabelCol:[287,1,1,""],setMetricName:[287,1,1,""],setParams:[287,1,1,""],setPredictionCol:[287,1,1,""],setThroughOrigin:[287,1,1,""],setWeightCol:[287,1,1,""],throughOrigin:[287,2,1,""],weightCol:[287,2,1,""],write:[287,1,1,""]},"pyspark.ml.feature":{Binarizer:[288,0,1,""],BucketedRandomProjectionLSH:[289,0,1,""],BucketedRandomProjectionLSHModel:[290,0,1,""],Bucketizer:[291,0,1,""],ChiSqSelector:[292,0,1,""],ChiSqSelectorModel:[293,0,1,""],CountVectorizer:[294,0,1,""],CountVectorizerModel:[295,0,1,""],DCT:[296,0,1,""],ElementwiseProduct:[297,0,1,""],FeatureHasher:[298,0,1,""],HashingTF:[299,0,1,""],IDF:[300,0,1,""],IDFModel:[301,0,1,""],Imputer:[302,0,1,""],ImputerModel:[303,0,1,""],IndexToString:[304,0,1,""],Interaction:[305,0,1,""],MaxAbsScaler:[306,0,1,""],MaxAbsScalerModel:[307,0,1,""],MinHashLSH:[308,0,1,""],MinHashLSHModel:[309,0,1,""],MinMaxScaler:[310,0,1,""],MinMaxScalerModel:[311,0,1,""],NGram:[312,0,1,""],Normalizer:[313,0,1,""],OneHotEncoder:[314,0,1,""],OneHotEncoderModel:[315,0,1,""],PCA:[316,0,1,""],PCAModel:[317,0,1,""],PolynomialExpansion:[318,0,1,""],QuantileDiscretizer:[319,0,1,""],RFormula:[320,0,1,""],RFormulaModel:[321,0,1,""],RegexTokenizer:[322,0,1,""],RobustScaler:[323,0,1,""],RobustScalerModel:[324,0,1,""],SQLTransformer:[325,0,1,""],StandardScaler:[326,0,1,""],StandardScalerModel:[327,0,1,""],StopWordsRemover:[328,0,1,""],StringIndexer:[329,0,1,""],StringIndexerModel:[330,0,1,""],Tokenizer:[331,0,1,""],UnivariateFeatureSelector:[332,0,1,""],UnivariateFeatureSelectorModel:[333,0,1,""],VarianceThresholdSelector:[334,0,1,""],VarianceThresholdSelectorModel:[335,0,1,""],VectorAssembler:[336,0,1,""],VectorIndexer:[337,0,1,""],VectorIndexerModel:[338,0,1,""],VectorSizeHint:[339,0,1,""],VectorSlicer:[340,0,1,""],Word2Vec:[341,0,1,""],Word2VecModel:[342,0,1,""]},"pyspark.ml.feature.Binarizer":{clear:[288,1,1,""],copy:[288,1,1,""],explainParam:[288,1,1,""],explainParams:[288,1,1,""],extractParamMap:[288,1,1,""],getInputCol:[288,1,1,""],getInputCols:[288,1,1,""],getOrDefault:[288,1,1,""],getOutputCol:[288,1,1,""],getOutputCols:[288,1,1,""],getParam:[288,1,1,""],getThreshold:[288,1,1,""],getThresholds:[288,1,1,""],hasDefault:[288,1,1,""],hasParam:[288,1,1,""],inputCol:[288,2,1,""],inputCols:[288,2,1,""],isDefined:[288,1,1,""],isSet:[288,1,1,""],load:[288,1,1,""],outputCol:[288,2,1,""],outputCols:[288,2,1,""],params:[288,2,1,""],read:[288,1,1,""],save:[288,1,1,""],set:[288,1,1,""],setInputCol:[288,1,1,""],setInputCols:[288,1,1,""],setOutputCol:[288,1,1,""],setOutputCols:[288,1,1,""],setParams:[288,1,1,""],setThreshold:[288,1,1,""],setThresholds:[288,1,1,""],threshold:[288,2,1,""],thresholds:[288,2,1,""],transform:[288,1,1,""],write:[288,1,1,""]},"pyspark.ml.feature.BucketedRandomProjectionLSH":{bucketLength:[289,2,1,""],clear:[289,1,1,""],copy:[289,1,1,""],explainParam:[289,1,1,""],explainParams:[289,1,1,""],extractParamMap:[289,1,1,""],fit:[289,1,1,""],fitMultiple:[289,1,1,""],getBucketLength:[289,1,1,""],getInputCol:[289,1,1,""],getNumHashTables:[289,1,1,""],getOrDefault:[289,1,1,""],getOutputCol:[289,1,1,""],getParam:[289,1,1,""],getSeed:[289,1,1,""],hasDefault:[289,1,1,""],hasParam:[289,1,1,""],inputCol:[289,2,1,""],isDefined:[289,1,1,""],isSet:[289,1,1,""],load:[289,1,1,""],numHashTables:[289,2,1,""],outputCol:[289,2,1,""],params:[289,2,1,""],read:[289,1,1,""],save:[289,1,1,""],seed:[289,2,1,""],set:[289,1,1,""],setBucketLength:[289,1,1,""],setInputCol:[289,1,1,""],setNumHashTables:[289,1,1,""],setOutputCol:[289,1,1,""],setParams:[289,1,1,""],setSeed:[289,1,1,""],write:[289,1,1,""]},"pyspark.ml.feature.BucketedRandomProjectionLSHModel":{approxNearestNeighbors:[290,1,1,""],approxSimilarityJoin:[290,1,1,""],bucketLength:[290,2,1,""],clear:[290,1,1,""],copy:[290,1,1,""],explainParam:[290,1,1,""],explainParams:[290,1,1,""],extractParamMap:[290,1,1,""],getBucketLength:[290,1,1,""],getInputCol:[290,1,1,""],getNumHashTables:[290,1,1,""],getOrDefault:[290,1,1,""],getOutputCol:[290,1,1,""],getParam:[290,1,1,""],hasDefault:[290,1,1,""],hasParam:[290,1,1,""],inputCol:[290,2,1,""],isDefined:[290,1,1,""],isSet:[290,1,1,""],load:[290,1,1,""],numHashTables:[290,2,1,""],outputCol:[290,2,1,""],params:[290,2,1,""],read:[290,1,1,""],save:[290,1,1,""],set:[290,1,1,""],setInputCol:[290,1,1,""],setOutputCol:[290,1,1,""],transform:[290,1,1,""],write:[290,1,1,""]},"pyspark.ml.feature.Bucketizer":{clear:[291,1,1,""],copy:[291,1,1,""],explainParam:[291,1,1,""],explainParams:[291,1,1,""],extractParamMap:[291,1,1,""],getHandleInvalid:[291,1,1,""],getInputCol:[291,1,1,""],getInputCols:[291,1,1,""],getOrDefault:[291,1,1,""],getOutputCol:[291,1,1,""],getOutputCols:[291,1,1,""],getParam:[291,1,1,""],getSplits:[291,1,1,""],getSplitsArray:[291,1,1,""],handleInvalid:[291,2,1,""],hasDefault:[291,1,1,""],hasParam:[291,1,1,""],inputCol:[291,2,1,""],inputCols:[291,2,1,""],isDefined:[291,1,1,""],isSet:[291,1,1,""],load:[291,1,1,""],outputCol:[291,2,1,""],outputCols:[291,2,1,""],params:[291,2,1,""],read:[291,1,1,""],save:[291,1,1,""],set:[291,1,1,""],setHandleInvalid:[291,1,1,""],setInputCol:[291,1,1,""],setInputCols:[291,1,1,""],setOutputCol:[291,1,1,""],setOutputCols:[291,1,1,""],setParams:[291,1,1,""],setSplits:[291,1,1,""],setSplitsArray:[291,1,1,""],splits:[291,2,1,""],splitsArray:[291,2,1,""],transform:[291,1,1,""],write:[291,1,1,""]},"pyspark.ml.feature.ChiSqSelector":{clear:[292,1,1,""],copy:[292,1,1,""],explainParam:[292,1,1,""],explainParams:[292,1,1,""],extractParamMap:[292,1,1,""],fdr:[292,2,1,""],featuresCol:[292,2,1,""],fit:[292,1,1,""],fitMultiple:[292,1,1,""],fpr:[292,2,1,""],fwe:[292,2,1,""],getFdr:[292,1,1,""],getFeaturesCol:[292,1,1,""],getFpr:[292,1,1,""],getFwe:[292,1,1,""],getLabelCol:[292,1,1,""],getNumTopFeatures:[292,1,1,""],getOrDefault:[292,1,1,""],getOutputCol:[292,1,1,""],getParam:[292,1,1,""],getPercentile:[292,1,1,""],getSelectorType:[292,1,1,""],hasDefault:[292,1,1,""],hasParam:[292,1,1,""],isDefined:[292,1,1,""],isSet:[292,1,1,""],labelCol:[292,2,1,""],load:[292,1,1,""],numTopFeatures:[292,2,1,""],outputCol:[292,2,1,""],params:[292,2,1,""],percentile:[292,2,1,""],read:[292,1,1,""],save:[292,1,1,""],selectorType:[292,2,1,""],set:[292,1,1,""],setFdr:[292,1,1,""],setFeaturesCol:[292,1,1,""],setFpr:[292,1,1,""],setFwe:[292,1,1,""],setLabelCol:[292,1,1,""],setNumTopFeatures:[292,1,1,""],setOutputCol:[292,1,1,""],setParams:[292,1,1,""],setPercentile:[292,1,1,""],setSelectorType:[292,1,1,""],write:[292,1,1,""]},"pyspark.ml.feature.ChiSqSelectorModel":{clear:[293,1,1,""],copy:[293,1,1,""],explainParam:[293,1,1,""],explainParams:[293,1,1,""],extractParamMap:[293,1,1,""],fdr:[293,2,1,""],featuresCol:[293,2,1,""],fpr:[293,2,1,""],fwe:[293,2,1,""],getFdr:[293,1,1,""],getFeaturesCol:[293,1,1,""],getFpr:[293,1,1,""],getFwe:[293,1,1,""],getLabelCol:[293,1,1,""],getNumTopFeatures:[293,1,1,""],getOrDefault:[293,1,1,""],getOutputCol:[293,1,1,""],getParam:[293,1,1,""],getPercentile:[293,1,1,""],getSelectorType:[293,1,1,""],hasDefault:[293,1,1,""],hasParam:[293,1,1,""],isDefined:[293,1,1,""],isSet:[293,1,1,""],labelCol:[293,2,1,""],load:[293,1,1,""],numTopFeatures:[293,2,1,""],outputCol:[293,2,1,""],params:[293,2,1,""],percentile:[293,2,1,""],read:[293,1,1,""],save:[293,1,1,""],selectedFeatures:[293,2,1,""],selectorType:[293,2,1,""],set:[293,1,1,""],setFeaturesCol:[293,1,1,""],setOutputCol:[293,1,1,""],transform:[293,1,1,""],write:[293,1,1,""]},"pyspark.ml.feature.CountVectorizer":{binary:[294,2,1,""],clear:[294,1,1,""],copy:[294,1,1,""],explainParam:[294,1,1,""],explainParams:[294,1,1,""],extractParamMap:[294,1,1,""],fit:[294,1,1,""],fitMultiple:[294,1,1,""],getBinary:[294,1,1,""],getInputCol:[294,1,1,""],getMaxDF:[294,1,1,""],getMinDF:[294,1,1,""],getMinTF:[294,1,1,""],getOrDefault:[294,1,1,""],getOutputCol:[294,1,1,""],getParam:[294,1,1,""],getVocabSize:[294,1,1,""],hasDefault:[294,1,1,""],hasParam:[294,1,1,""],inputCol:[294,2,1,""],isDefined:[294,1,1,""],isSet:[294,1,1,""],load:[294,1,1,""],maxDF:[294,2,1,""],minDF:[294,2,1,""],minTF:[294,2,1,""],outputCol:[294,2,1,""],params:[294,2,1,""],read:[294,1,1,""],save:[294,1,1,""],set:[294,1,1,""],setBinary:[294,1,1,""],setInputCol:[294,1,1,""],setMaxDF:[294,1,1,""],setMinDF:[294,1,1,""],setMinTF:[294,1,1,""],setOutputCol:[294,1,1,""],setParams:[294,1,1,""],setVocabSize:[294,1,1,""],vocabSize:[294,2,1,""],write:[294,1,1,""]},"pyspark.ml.feature.CountVectorizerModel":{binary:[295,2,1,""],clear:[295,1,1,""],copy:[295,1,1,""],explainParam:[295,1,1,""],explainParams:[295,1,1,""],extractParamMap:[295,1,1,""],from_vocabulary:[295,1,1,""],getBinary:[295,1,1,""],getInputCol:[295,1,1,""],getMaxDF:[295,1,1,""],getMinDF:[295,1,1,""],getMinTF:[295,1,1,""],getOrDefault:[295,1,1,""],getOutputCol:[295,1,1,""],getParam:[295,1,1,""],getVocabSize:[295,1,1,""],hasDefault:[295,1,1,""],hasParam:[295,1,1,""],inputCol:[295,2,1,""],isDefined:[295,1,1,""],isSet:[295,1,1,""],load:[295,1,1,""],maxDF:[295,2,1,""],minDF:[295,2,1,""],minTF:[295,2,1,""],outputCol:[295,2,1,""],params:[295,2,1,""],read:[295,1,1,""],save:[295,1,1,""],set:[295,1,1,""],setBinary:[295,1,1,""],setInputCol:[295,1,1,""],setMinTF:[295,1,1,""],setOutputCol:[295,1,1,""],transform:[295,1,1,""],vocabSize:[295,2,1,""],vocabulary:[295,2,1,""],write:[295,1,1,""]},"pyspark.ml.feature.DCT":{clear:[296,1,1,""],copy:[296,1,1,""],explainParam:[296,1,1,""],explainParams:[296,1,1,""],extractParamMap:[296,1,1,""],getInputCol:[296,1,1,""],getInverse:[296,1,1,""],getOrDefault:[296,1,1,""],getOutputCol:[296,1,1,""],getParam:[296,1,1,""],hasDefault:[296,1,1,""],hasParam:[296,1,1,""],inputCol:[296,2,1,""],inverse:[296,2,1,""],isDefined:[296,1,1,""],isSet:[296,1,1,""],load:[296,1,1,""],outputCol:[296,2,1,""],params:[296,2,1,""],read:[296,1,1,""],save:[296,1,1,""],set:[296,1,1,""],setInputCol:[296,1,1,""],setInverse:[296,1,1,""],setOutputCol:[296,1,1,""],setParams:[296,1,1,""],transform:[296,1,1,""],write:[296,1,1,""]},"pyspark.ml.feature.ElementwiseProduct":{clear:[297,1,1,""],copy:[297,1,1,""],explainParam:[297,1,1,""],explainParams:[297,1,1,""],extractParamMap:[297,1,1,""],getInputCol:[297,1,1,""],getOrDefault:[297,1,1,""],getOutputCol:[297,1,1,""],getParam:[297,1,1,""],getScalingVec:[297,1,1,""],hasDefault:[297,1,1,""],hasParam:[297,1,1,""],inputCol:[297,2,1,""],isDefined:[297,1,1,""],isSet:[297,1,1,""],load:[297,1,1,""],outputCol:[297,2,1,""],params:[297,2,1,""],read:[297,1,1,""],save:[297,1,1,""],scalingVec:[297,2,1,""],set:[297,1,1,""],setInputCol:[297,1,1,""],setOutputCol:[297,1,1,""],setParams:[297,1,1,""],setScalingVec:[297,1,1,""],transform:[297,1,1,""],write:[297,1,1,""]},"pyspark.ml.feature.FeatureHasher":{categoricalCols:[298,2,1,""],clear:[298,1,1,""],copy:[298,1,1,""],explainParam:[298,1,1,""],explainParams:[298,1,1,""],extractParamMap:[298,1,1,""],getCategoricalCols:[298,1,1,""],getInputCols:[298,1,1,""],getNumFeatures:[298,1,1,""],getOrDefault:[298,1,1,""],getOutputCol:[298,1,1,""],getParam:[298,1,1,""],hasDefault:[298,1,1,""],hasParam:[298,1,1,""],inputCols:[298,2,1,""],isDefined:[298,1,1,""],isSet:[298,1,1,""],load:[298,1,1,""],numFeatures:[298,2,1,""],outputCol:[298,2,1,""],params:[298,2,1,""],read:[298,1,1,""],save:[298,1,1,""],set:[298,1,1,""],setCategoricalCols:[298,1,1,""],setInputCols:[298,1,1,""],setNumFeatures:[298,1,1,""],setOutputCol:[298,1,1,""],setParams:[298,1,1,""],transform:[298,1,1,""],write:[298,1,1,""]},"pyspark.ml.feature.HashingTF":{binary:[299,2,1,""],clear:[299,1,1,""],copy:[299,1,1,""],explainParam:[299,1,1,""],explainParams:[299,1,1,""],extractParamMap:[299,1,1,""],getBinary:[299,1,1,""],getInputCol:[299,1,1,""],getNumFeatures:[299,1,1,""],getOrDefault:[299,1,1,""],getOutputCol:[299,1,1,""],getParam:[299,1,1,""],hasDefault:[299,1,1,""],hasParam:[299,1,1,""],indexOf:[299,1,1,""],inputCol:[299,2,1,""],isDefined:[299,1,1,""],isSet:[299,1,1,""],load:[299,1,1,""],numFeatures:[299,2,1,""],outputCol:[299,2,1,""],params:[299,2,1,""],read:[299,1,1,""],save:[299,1,1,""],set:[299,1,1,""],setBinary:[299,1,1,""],setInputCol:[299,1,1,""],setNumFeatures:[299,1,1,""],setOutputCol:[299,1,1,""],setParams:[299,1,1,""],transform:[299,1,1,""],write:[299,1,1,""]},"pyspark.ml.feature.IDF":{clear:[300,1,1,""],copy:[300,1,1,""],explainParam:[300,1,1,""],explainParams:[300,1,1,""],extractParamMap:[300,1,1,""],fit:[300,1,1,""],fitMultiple:[300,1,1,""],getInputCol:[300,1,1,""],getMinDocFreq:[300,1,1,""],getOrDefault:[300,1,1,""],getOutputCol:[300,1,1,""],getParam:[300,1,1,""],hasDefault:[300,1,1,""],hasParam:[300,1,1,""],inputCol:[300,2,1,""],isDefined:[300,1,1,""],isSet:[300,1,1,""],load:[300,1,1,""],minDocFreq:[300,2,1,""],outputCol:[300,2,1,""],params:[300,2,1,""],read:[300,1,1,""],save:[300,1,1,""],set:[300,1,1,""],setInputCol:[300,1,1,""],setMinDocFreq:[300,1,1,""],setOutputCol:[300,1,1,""],setParams:[300,1,1,""],write:[300,1,1,""]},"pyspark.ml.feature.IDFModel":{clear:[301,1,1,""],copy:[301,1,1,""],docFreq:[301,2,1,""],explainParam:[301,1,1,""],explainParams:[301,1,1,""],extractParamMap:[301,1,1,""],getInputCol:[301,1,1,""],getMinDocFreq:[301,1,1,""],getOrDefault:[301,1,1,""],getOutputCol:[301,1,1,""],getParam:[301,1,1,""],hasDefault:[301,1,1,""],hasParam:[301,1,1,""],idf:[301,2,1,""],inputCol:[301,2,1,""],isDefined:[301,1,1,""],isSet:[301,1,1,""],load:[301,1,1,""],minDocFreq:[301,2,1,""],numDocs:[301,2,1,""],outputCol:[301,2,1,""],params:[301,2,1,""],read:[301,1,1,""],save:[301,1,1,""],set:[301,1,1,""],setInputCol:[301,1,1,""],setOutputCol:[301,1,1,""],transform:[301,1,1,""],write:[301,1,1,""]},"pyspark.ml.feature.Imputer":{clear:[302,1,1,""],copy:[302,1,1,""],explainParam:[302,1,1,""],explainParams:[302,1,1,""],extractParamMap:[302,1,1,""],fit:[302,1,1,""],fitMultiple:[302,1,1,""],getInputCol:[302,1,1,""],getInputCols:[302,1,1,""],getMissingValue:[302,1,1,""],getOrDefault:[302,1,1,""],getOutputCol:[302,1,1,""],getOutputCols:[302,1,1,""],getParam:[302,1,1,""],getRelativeError:[302,1,1,""],getStrategy:[302,1,1,""],hasDefault:[302,1,1,""],hasParam:[302,1,1,""],inputCol:[302,2,1,""],inputCols:[302,2,1,""],isDefined:[302,1,1,""],isSet:[302,1,1,""],load:[302,1,1,""],missingValue:[302,2,1,""],outputCol:[302,2,1,""],outputCols:[302,2,1,""],params:[302,2,1,""],read:[302,1,1,""],relativeError:[302,2,1,""],save:[302,1,1,""],set:[302,1,1,""],setInputCol:[302,1,1,""],setInputCols:[302,1,1,""],setMissingValue:[302,1,1,""],setOutputCol:[302,1,1,""],setOutputCols:[302,1,1,""],setParams:[302,1,1,""],setRelativeError:[302,1,1,""],setStrategy:[302,1,1,""],strategy:[302,2,1,""],write:[302,1,1,""]},"pyspark.ml.feature.ImputerModel":{clear:[303,1,1,""],copy:[303,1,1,""],explainParam:[303,1,1,""],explainParams:[303,1,1,""],extractParamMap:[303,1,1,""],getInputCol:[303,1,1,""],getInputCols:[303,1,1,""],getMissingValue:[303,1,1,""],getOrDefault:[303,1,1,""],getOutputCol:[303,1,1,""],getOutputCols:[303,1,1,""],getParam:[303,1,1,""],getRelativeError:[303,1,1,""],getStrategy:[303,1,1,""],hasDefault:[303,1,1,""],hasParam:[303,1,1,""],inputCol:[303,2,1,""],inputCols:[303,2,1,""],isDefined:[303,1,1,""],isSet:[303,1,1,""],load:[303,1,1,""],missingValue:[303,2,1,""],outputCol:[303,2,1,""],outputCols:[303,2,1,""],params:[303,2,1,""],read:[303,1,1,""],relativeError:[303,2,1,""],save:[303,1,1,""],set:[303,1,1,""],setInputCol:[303,1,1,""],setInputCols:[303,1,1,""],setOutputCol:[303,1,1,""],setOutputCols:[303,1,1,""],strategy:[303,2,1,""],surrogateDF:[303,2,1,""],transform:[303,1,1,""],write:[303,1,1,""]},"pyspark.ml.feature.IndexToString":{clear:[304,1,1,""],copy:[304,1,1,""],explainParam:[304,1,1,""],explainParams:[304,1,1,""],extractParamMap:[304,1,1,""],getInputCol:[304,1,1,""],getLabels:[304,1,1,""],getOrDefault:[304,1,1,""],getOutputCol:[304,1,1,""],getParam:[304,1,1,""],hasDefault:[304,1,1,""],hasParam:[304,1,1,""],inputCol:[304,2,1,""],isDefined:[304,1,1,""],isSet:[304,1,1,""],labels:[304,2,1,""],load:[304,1,1,""],outputCol:[304,2,1,""],params:[304,2,1,""],read:[304,1,1,""],save:[304,1,1,""],set:[304,1,1,""],setInputCol:[304,1,1,""],setLabels:[304,1,1,""],setOutputCol:[304,1,1,""],setParams:[304,1,1,""],transform:[304,1,1,""],write:[304,1,1,""]},"pyspark.ml.feature.Interaction":{clear:[305,1,1,""],copy:[305,1,1,""],explainParam:[305,1,1,""],explainParams:[305,1,1,""],extractParamMap:[305,1,1,""],getInputCols:[305,1,1,""],getOrDefault:[305,1,1,""],getOutputCol:[305,1,1,""],getParam:[305,1,1,""],hasDefault:[305,1,1,""],hasParam:[305,1,1,""],inputCols:[305,2,1,""],isDefined:[305,1,1,""],isSet:[305,1,1,""],load:[305,1,1,""],outputCol:[305,2,1,""],params:[305,2,1,""],read:[305,1,1,""],save:[305,1,1,""],set:[305,1,1,""],setInputCols:[305,1,1,""],setOutputCol:[305,1,1,""],setParams:[305,1,1,""],transform:[305,1,1,""],write:[305,1,1,""]},"pyspark.ml.feature.MaxAbsScaler":{clear:[306,1,1,""],copy:[306,1,1,""],explainParam:[306,1,1,""],explainParams:[306,1,1,""],extractParamMap:[306,1,1,""],fit:[306,1,1,""],fitMultiple:[306,1,1,""],getInputCol:[306,1,1,""],getOrDefault:[306,1,1,""],getOutputCol:[306,1,1,""],getParam:[306,1,1,""],hasDefault:[306,1,1,""],hasParam:[306,1,1,""],inputCol:[306,2,1,""],isDefined:[306,1,1,""],isSet:[306,1,1,""],load:[306,1,1,""],outputCol:[306,2,1,""],params:[306,2,1,""],read:[306,1,1,""],save:[306,1,1,""],set:[306,1,1,""],setInputCol:[306,1,1,""],setOutputCol:[306,1,1,""],setParams:[306,1,1,""],write:[306,1,1,""]},"pyspark.ml.feature.MaxAbsScalerModel":{clear:[307,1,1,""],copy:[307,1,1,""],explainParam:[307,1,1,""],explainParams:[307,1,1,""],extractParamMap:[307,1,1,""],getInputCol:[307,1,1,""],getOrDefault:[307,1,1,""],getOutputCol:[307,1,1,""],getParam:[307,1,1,""],hasDefault:[307,1,1,""],hasParam:[307,1,1,""],inputCol:[307,2,1,""],isDefined:[307,1,1,""],isSet:[307,1,1,""],load:[307,1,1,""],maxAbs:[307,2,1,""],outputCol:[307,2,1,""],params:[307,2,1,""],read:[307,1,1,""],save:[307,1,1,""],set:[307,1,1,""],setInputCol:[307,1,1,""],setOutputCol:[307,1,1,""],transform:[307,1,1,""],write:[307,1,1,""]},"pyspark.ml.feature.MinHashLSH":{clear:[308,1,1,""],copy:[308,1,1,""],explainParam:[308,1,1,""],explainParams:[308,1,1,""],extractParamMap:[308,1,1,""],fit:[308,1,1,""],fitMultiple:[308,1,1,""],getInputCol:[308,1,1,""],getNumHashTables:[308,1,1,""],getOrDefault:[308,1,1,""],getOutputCol:[308,1,1,""],getParam:[308,1,1,""],getSeed:[308,1,1,""],hasDefault:[308,1,1,""],hasParam:[308,1,1,""],inputCol:[308,2,1,""],isDefined:[308,1,1,""],isSet:[308,1,1,""],load:[308,1,1,""],numHashTables:[308,2,1,""],outputCol:[308,2,1,""],params:[308,2,1,""],read:[308,1,1,""],save:[308,1,1,""],seed:[308,2,1,""],set:[308,1,1,""],setInputCol:[308,1,1,""],setNumHashTables:[308,1,1,""],setOutputCol:[308,1,1,""],setParams:[308,1,1,""],setSeed:[308,1,1,""],write:[308,1,1,""]},"pyspark.ml.feature.MinHashLSHModel":{approxNearestNeighbors:[309,1,1,""],approxSimilarityJoin:[309,1,1,""],clear:[309,1,1,""],copy:[309,1,1,""],explainParam:[309,1,1,""],explainParams:[309,1,1,""],extractParamMap:[309,1,1,""],getInputCol:[309,1,1,""],getNumHashTables:[309,1,1,""],getOrDefault:[309,1,1,""],getOutputCol:[309,1,1,""],getParam:[309,1,1,""],hasDefault:[309,1,1,""],hasParam:[309,1,1,""],inputCol:[309,2,1,""],isDefined:[309,1,1,""],isSet:[309,1,1,""],load:[309,1,1,""],numHashTables:[309,2,1,""],outputCol:[309,2,1,""],params:[309,2,1,""],read:[309,1,1,""],save:[309,1,1,""],set:[309,1,1,""],setInputCol:[309,1,1,""],setOutputCol:[309,1,1,""],transform:[309,1,1,""],write:[309,1,1,""]},"pyspark.ml.feature.MinMaxScaler":{clear:[310,1,1,""],copy:[310,1,1,""],explainParam:[310,1,1,""],explainParams:[310,1,1,""],extractParamMap:[310,1,1,""],fit:[310,1,1,""],fitMultiple:[310,1,1,""],getInputCol:[310,1,1,""],getMax:[310,1,1,""],getMin:[310,1,1,""],getOrDefault:[310,1,1,""],getOutputCol:[310,1,1,""],getParam:[310,1,1,""],hasDefault:[310,1,1,""],hasParam:[310,1,1,""],inputCol:[310,2,1,""],isDefined:[310,1,1,""],isSet:[310,1,1,""],load:[310,1,1,""],max:[310,2,1,""],min:[310,2,1,""],outputCol:[310,2,1,""],params:[310,2,1,""],read:[310,1,1,""],save:[310,1,1,""],set:[310,1,1,""],setInputCol:[310,1,1,""],setMax:[310,1,1,""],setMin:[310,1,1,""],setOutputCol:[310,1,1,""],setParams:[310,1,1,""],write:[310,1,1,""]},"pyspark.ml.feature.MinMaxScalerModel":{clear:[311,1,1,""],copy:[311,1,1,""],explainParam:[311,1,1,""],explainParams:[311,1,1,""],extractParamMap:[311,1,1,""],getInputCol:[311,1,1,""],getMax:[311,1,1,""],getMin:[311,1,1,""],getOrDefault:[311,1,1,""],getOutputCol:[311,1,1,""],getParam:[311,1,1,""],hasDefault:[311,1,1,""],hasParam:[311,1,1,""],inputCol:[311,2,1,""],isDefined:[311,1,1,""],isSet:[311,1,1,""],load:[311,1,1,""],max:[311,2,1,""],min:[311,2,1,""],originalMax:[311,2,1,""],originalMin:[311,2,1,""],outputCol:[311,2,1,""],params:[311,2,1,""],read:[311,1,1,""],save:[311,1,1,""],set:[311,1,1,""],setInputCol:[311,1,1,""],setMax:[311,1,1,""],setMin:[311,1,1,""],setOutputCol:[311,1,1,""],transform:[311,1,1,""],write:[311,1,1,""]},"pyspark.ml.feature.NGram":{clear:[312,1,1,""],copy:[312,1,1,""],explainParam:[312,1,1,""],explainParams:[312,1,1,""],extractParamMap:[312,1,1,""],getInputCol:[312,1,1,""],getN:[312,1,1,""],getOrDefault:[312,1,1,""],getOutputCol:[312,1,1,""],getParam:[312,1,1,""],hasDefault:[312,1,1,""],hasParam:[312,1,1,""],inputCol:[312,2,1,""],isDefined:[312,1,1,""],isSet:[312,1,1,""],load:[312,1,1,""],n:[312,2,1,""],outputCol:[312,2,1,""],params:[312,2,1,""],read:[312,1,1,""],save:[312,1,1,""],set:[312,1,1,""],setInputCol:[312,1,1,""],setN:[312,1,1,""],setOutputCol:[312,1,1,""],setParams:[312,1,1,""],transform:[312,1,1,""],write:[312,1,1,""]},"pyspark.ml.feature.Normalizer":{clear:[313,1,1,""],copy:[313,1,1,""],explainParam:[313,1,1,""],explainParams:[313,1,1,""],extractParamMap:[313,1,1,""],getInputCol:[313,1,1,""],getOrDefault:[313,1,1,""],getOutputCol:[313,1,1,""],getP:[313,1,1,""],getParam:[313,1,1,""],hasDefault:[313,1,1,""],hasParam:[313,1,1,""],inputCol:[313,2,1,""],isDefined:[313,1,1,""],isSet:[313,1,1,""],load:[313,1,1,""],outputCol:[313,2,1,""],p:[313,2,1,""],params:[313,2,1,""],read:[313,1,1,""],save:[313,1,1,""],set:[313,1,1,""],setInputCol:[313,1,1,""],setOutputCol:[313,1,1,""],setP:[313,1,1,""],setParams:[313,1,1,""],transform:[313,1,1,""],write:[313,1,1,""]},"pyspark.ml.feature.OneHotEncoder":{clear:[314,1,1,""],copy:[314,1,1,""],dropLast:[314,2,1,""],explainParam:[314,1,1,""],explainParams:[314,1,1,""],extractParamMap:[314,1,1,""],fit:[314,1,1,""],fitMultiple:[314,1,1,""],getDropLast:[314,1,1,""],getHandleInvalid:[314,1,1,""],getInputCol:[314,1,1,""],getInputCols:[314,1,1,""],getOrDefault:[314,1,1,""],getOutputCol:[314,1,1,""],getOutputCols:[314,1,1,""],getParam:[314,1,1,""],handleInvalid:[314,2,1,""],hasDefault:[314,1,1,""],hasParam:[314,1,1,""],inputCol:[314,2,1,""],inputCols:[314,2,1,""],isDefined:[314,1,1,""],isSet:[314,1,1,""],load:[314,1,1,""],outputCol:[314,2,1,""],outputCols:[314,2,1,""],params:[314,2,1,""],read:[314,1,1,""],save:[314,1,1,""],set:[314,1,1,""],setDropLast:[314,1,1,""],setHandleInvalid:[314,1,1,""],setInputCol:[314,1,1,""],setInputCols:[314,1,1,""],setOutputCol:[314,1,1,""],setOutputCols:[314,1,1,""],setParams:[314,1,1,""],write:[314,1,1,""]},"pyspark.ml.feature.OneHotEncoderModel":{categorySizes:[315,2,1,""],clear:[315,1,1,""],copy:[315,1,1,""],dropLast:[315,2,1,""],explainParam:[315,1,1,""],explainParams:[315,1,1,""],extractParamMap:[315,1,1,""],getDropLast:[315,1,1,""],getHandleInvalid:[315,1,1,""],getInputCol:[315,1,1,""],getInputCols:[315,1,1,""],getOrDefault:[315,1,1,""],getOutputCol:[315,1,1,""],getOutputCols:[315,1,1,""],getParam:[315,1,1,""],handleInvalid:[315,2,1,""],hasDefault:[315,1,1,""],hasParam:[315,1,1,""],inputCol:[315,2,1,""],inputCols:[315,2,1,""],isDefined:[315,1,1,""],isSet:[315,1,1,""],load:[315,1,1,""],outputCol:[315,2,1,""],outputCols:[315,2,1,""],params:[315,2,1,""],read:[315,1,1,""],save:[315,1,1,""],set:[315,1,1,""],setDropLast:[315,1,1,""],setHandleInvalid:[315,1,1,""],setInputCol:[315,1,1,""],setInputCols:[315,1,1,""],setOutputCol:[315,1,1,""],setOutputCols:[315,1,1,""],transform:[315,1,1,""],write:[315,1,1,""]},"pyspark.ml.feature.PCA":{clear:[316,1,1,""],copy:[316,1,1,""],explainParam:[316,1,1,""],explainParams:[316,1,1,""],extractParamMap:[316,1,1,""],fit:[316,1,1,""],fitMultiple:[316,1,1,""],getInputCol:[316,1,1,""],getK:[316,1,1,""],getOrDefault:[316,1,1,""],getOutputCol:[316,1,1,""],getParam:[316,1,1,""],hasDefault:[316,1,1,""],hasParam:[316,1,1,""],inputCol:[316,2,1,""],isDefined:[316,1,1,""],isSet:[316,1,1,""],k:[316,2,1,""],load:[316,1,1,""],outputCol:[316,2,1,""],params:[316,2,1,""],read:[316,1,1,""],save:[316,1,1,""],set:[316,1,1,""],setInputCol:[316,1,1,""],setK:[316,1,1,""],setOutputCol:[316,1,1,""],setParams:[316,1,1,""],write:[316,1,1,""]},"pyspark.ml.feature.PCAModel":{clear:[317,1,1,""],copy:[317,1,1,""],explainParam:[317,1,1,""],explainParams:[317,1,1,""],explainedVariance:[317,2,1,""],extractParamMap:[317,1,1,""],getInputCol:[317,1,1,""],getK:[317,1,1,""],getOrDefault:[317,1,1,""],getOutputCol:[317,1,1,""],getParam:[317,1,1,""],hasDefault:[317,1,1,""],hasParam:[317,1,1,""],inputCol:[317,2,1,""],isDefined:[317,1,1,""],isSet:[317,1,1,""],k:[317,2,1,""],load:[317,1,1,""],outputCol:[317,2,1,""],params:[317,2,1,""],pc:[317,2,1,""],read:[317,1,1,""],save:[317,1,1,""],set:[317,1,1,""],setInputCol:[317,1,1,""],setOutputCol:[317,1,1,""],transform:[317,1,1,""],write:[317,1,1,""]},"pyspark.ml.feature.PolynomialExpansion":{clear:[318,1,1,""],copy:[318,1,1,""],degree:[318,2,1,""],explainParam:[318,1,1,""],explainParams:[318,1,1,""],extractParamMap:[318,1,1,""],getDegree:[318,1,1,""],getInputCol:[318,1,1,""],getOrDefault:[318,1,1,""],getOutputCol:[318,1,1,""],getParam:[318,1,1,""],hasDefault:[318,1,1,""],hasParam:[318,1,1,""],inputCol:[318,2,1,""],isDefined:[318,1,1,""],isSet:[318,1,1,""],load:[318,1,1,""],outputCol:[318,2,1,""],params:[318,2,1,""],read:[318,1,1,""],save:[318,1,1,""],set:[318,1,1,""],setDegree:[318,1,1,""],setInputCol:[318,1,1,""],setOutputCol:[318,1,1,""],setParams:[318,1,1,""],transform:[318,1,1,""],write:[318,1,1,""]},"pyspark.ml.feature.QuantileDiscretizer":{clear:[319,1,1,""],copy:[319,1,1,""],explainParam:[319,1,1,""],explainParams:[319,1,1,""],extractParamMap:[319,1,1,""],fit:[319,1,1,""],fitMultiple:[319,1,1,""],getHandleInvalid:[319,1,1,""],getInputCol:[319,1,1,""],getInputCols:[319,1,1,""],getNumBuckets:[319,1,1,""],getNumBucketsArray:[319,1,1,""],getOrDefault:[319,1,1,""],getOutputCol:[319,1,1,""],getOutputCols:[319,1,1,""],getParam:[319,1,1,""],getRelativeError:[319,1,1,""],handleInvalid:[319,2,1,""],hasDefault:[319,1,1,""],hasParam:[319,1,1,""],inputCol:[319,2,1,""],inputCols:[319,2,1,""],isDefined:[319,1,1,""],isSet:[319,1,1,""],load:[319,1,1,""],numBuckets:[319,2,1,""],numBucketsArray:[319,2,1,""],outputCol:[319,2,1,""],outputCols:[319,2,1,""],params:[319,2,1,""],read:[319,1,1,""],relativeError:[319,2,1,""],save:[319,1,1,""],set:[319,1,1,""],setHandleInvalid:[319,1,1,""],setInputCol:[319,1,1,""],setInputCols:[319,1,1,""],setNumBuckets:[319,1,1,""],setNumBucketsArray:[319,1,1,""],setOutputCol:[319,1,1,""],setOutputCols:[319,1,1,""],setParams:[319,1,1,""],setRelativeError:[319,1,1,""],write:[319,1,1,""]},"pyspark.ml.feature.RFormula":{clear:[320,1,1,""],copy:[320,1,1,""],explainParam:[320,1,1,""],explainParams:[320,1,1,""],extractParamMap:[320,1,1,""],featuresCol:[320,2,1,""],fit:[320,1,1,""],fitMultiple:[320,1,1,""],forceIndexLabel:[320,2,1,""],formula:[320,2,1,""],getFeaturesCol:[320,1,1,""],getForceIndexLabel:[320,1,1,""],getFormula:[320,1,1,""],getHandleInvalid:[320,1,1,""],getLabelCol:[320,1,1,""],getOrDefault:[320,1,1,""],getParam:[320,1,1,""],getStringIndexerOrderType:[320,1,1,""],handleInvalid:[320,2,1,""],hasDefault:[320,1,1,""],hasParam:[320,1,1,""],isDefined:[320,1,1,""],isSet:[320,1,1,""],labelCol:[320,2,1,""],load:[320,1,1,""],params:[320,2,1,""],read:[320,1,1,""],save:[320,1,1,""],set:[320,1,1,""],setFeaturesCol:[320,1,1,""],setForceIndexLabel:[320,1,1,""],setFormula:[320,1,1,""],setHandleInvalid:[320,1,1,""],setLabelCol:[320,1,1,""],setParams:[320,1,1,""],setStringIndexerOrderType:[320,1,1,""],stringIndexerOrderType:[320,2,1,""],write:[320,1,1,""]},"pyspark.ml.feature.RFormulaModel":{clear:[321,1,1,""],copy:[321,1,1,""],explainParam:[321,1,1,""],explainParams:[321,1,1,""],extractParamMap:[321,1,1,""],featuresCol:[321,2,1,""],forceIndexLabel:[321,2,1,""],formula:[321,2,1,""],getFeaturesCol:[321,1,1,""],getForceIndexLabel:[321,1,1,""],getFormula:[321,1,1,""],getHandleInvalid:[321,1,1,""],getLabelCol:[321,1,1,""],getOrDefault:[321,1,1,""],getParam:[321,1,1,""],getStringIndexerOrderType:[321,1,1,""],handleInvalid:[321,2,1,""],hasDefault:[321,1,1,""],hasParam:[321,1,1,""],isDefined:[321,1,1,""],isSet:[321,1,1,""],labelCol:[321,2,1,""],load:[321,1,1,""],params:[321,2,1,""],read:[321,1,1,""],save:[321,1,1,""],set:[321,1,1,""],stringIndexerOrderType:[321,2,1,""],transform:[321,1,1,""],write:[321,1,1,""]},"pyspark.ml.feature.RegexTokenizer":{clear:[322,1,1,""],copy:[322,1,1,""],explainParam:[322,1,1,""],explainParams:[322,1,1,""],extractParamMap:[322,1,1,""],gaps:[322,2,1,""],getGaps:[322,1,1,""],getInputCol:[322,1,1,""],getMinTokenLength:[322,1,1,""],getOrDefault:[322,1,1,""],getOutputCol:[322,1,1,""],getParam:[322,1,1,""],getPattern:[322,1,1,""],getToLowercase:[322,1,1,""],hasDefault:[322,1,1,""],hasParam:[322,1,1,""],inputCol:[322,2,1,""],isDefined:[322,1,1,""],isSet:[322,1,1,""],load:[322,1,1,""],minTokenLength:[322,2,1,""],outputCol:[322,2,1,""],params:[322,2,1,""],pattern:[322,2,1,""],read:[322,1,1,""],save:[322,1,1,""],set:[322,1,1,""],setGaps:[322,1,1,""],setInputCol:[322,1,1,""],setMinTokenLength:[322,1,1,""],setOutputCol:[322,1,1,""],setParams:[322,1,1,""],setPattern:[322,1,1,""],setToLowercase:[322,1,1,""],toLowercase:[322,2,1,""],transform:[322,1,1,""],write:[322,1,1,""]},"pyspark.ml.feature.RobustScaler":{clear:[323,1,1,""],copy:[323,1,1,""],explainParam:[323,1,1,""],explainParams:[323,1,1,""],extractParamMap:[323,1,1,""],fit:[323,1,1,""],fitMultiple:[323,1,1,""],getInputCol:[323,1,1,""],getLower:[323,1,1,""],getOrDefault:[323,1,1,""],getOutputCol:[323,1,1,""],getParam:[323,1,1,""],getRelativeError:[323,1,1,""],getUpper:[323,1,1,""],getWithCentering:[323,1,1,""],getWithScaling:[323,1,1,""],hasDefault:[323,1,1,""],hasParam:[323,1,1,""],inputCol:[323,2,1,""],isDefined:[323,1,1,""],isSet:[323,1,1,""],load:[323,1,1,""],lower:[323,2,1,""],outputCol:[323,2,1,""],params:[323,2,1,""],read:[323,1,1,""],relativeError:[323,2,1,""],save:[323,1,1,""],set:[323,1,1,""],setInputCol:[323,1,1,""],setLower:[323,1,1,""],setOutputCol:[323,1,1,""],setParams:[323,1,1,""],setRelativeError:[323,1,1,""],setUpper:[323,1,1,""],setWithCentering:[323,1,1,""],setWithScaling:[323,1,1,""],upper:[323,2,1,""],withCentering:[323,2,1,""],withScaling:[323,2,1,""],write:[323,1,1,""]},"pyspark.ml.feature.RobustScalerModel":{clear:[324,1,1,""],copy:[324,1,1,""],explainParam:[324,1,1,""],explainParams:[324,1,1,""],extractParamMap:[324,1,1,""],getInputCol:[324,1,1,""],getLower:[324,1,1,""],getOrDefault:[324,1,1,""],getOutputCol:[324,1,1,""],getParam:[324,1,1,""],getRelativeError:[324,1,1,""],getUpper:[324,1,1,""],getWithCentering:[324,1,1,""],getWithScaling:[324,1,1,""],hasDefault:[324,1,1,""],hasParam:[324,1,1,""],inputCol:[324,2,1,""],isDefined:[324,1,1,""],isSet:[324,1,1,""],load:[324,1,1,""],lower:[324,2,1,""],median:[324,2,1,""],outputCol:[324,2,1,""],params:[324,2,1,""],range:[324,2,1,""],read:[324,1,1,""],relativeError:[324,2,1,""],save:[324,1,1,""],set:[324,1,1,""],setInputCol:[324,1,1,""],setOutputCol:[324,1,1,""],transform:[324,1,1,""],upper:[324,2,1,""],withCentering:[324,2,1,""],withScaling:[324,2,1,""],write:[324,1,1,""]},"pyspark.ml.feature.SQLTransformer":{clear:[325,1,1,""],copy:[325,1,1,""],explainParam:[325,1,1,""],explainParams:[325,1,1,""],extractParamMap:[325,1,1,""],getOrDefault:[325,1,1,""],getParam:[325,1,1,""],getStatement:[325,1,1,""],hasDefault:[325,1,1,""],hasParam:[325,1,1,""],isDefined:[325,1,1,""],isSet:[325,1,1,""],load:[325,1,1,""],params:[325,2,1,""],read:[325,1,1,""],save:[325,1,1,""],set:[325,1,1,""],setParams:[325,1,1,""],setStatement:[325,1,1,""],statement:[325,2,1,""],transform:[325,1,1,""],write:[325,1,1,""]},"pyspark.ml.feature.StandardScaler":{clear:[326,1,1,""],copy:[326,1,1,""],explainParam:[326,1,1,""],explainParams:[326,1,1,""],extractParamMap:[326,1,1,""],fit:[326,1,1,""],fitMultiple:[326,1,1,""],getInputCol:[326,1,1,""],getOrDefault:[326,1,1,""],getOutputCol:[326,1,1,""],getParam:[326,1,1,""],getWithMean:[326,1,1,""],getWithStd:[326,1,1,""],hasDefault:[326,1,1,""],hasParam:[326,1,1,""],inputCol:[326,2,1,""],isDefined:[326,1,1,""],isSet:[326,1,1,""],load:[326,1,1,""],outputCol:[326,2,1,""],params:[326,2,1,""],read:[326,1,1,""],save:[326,1,1,""],set:[326,1,1,""],setInputCol:[326,1,1,""],setOutputCol:[326,1,1,""],setParams:[326,1,1,""],setWithMean:[326,1,1,""],setWithStd:[326,1,1,""],withMean:[326,2,1,""],withStd:[326,2,1,""],write:[326,1,1,""]},"pyspark.ml.feature.StandardScalerModel":{clear:[327,1,1,""],copy:[327,1,1,""],explainParam:[327,1,1,""],explainParams:[327,1,1,""],extractParamMap:[327,1,1,""],getInputCol:[327,1,1,""],getOrDefault:[327,1,1,""],getOutputCol:[327,1,1,""],getParam:[327,1,1,""],getWithMean:[327,1,1,""],getWithStd:[327,1,1,""],hasDefault:[327,1,1,""],hasParam:[327,1,1,""],inputCol:[327,2,1,""],isDefined:[327,1,1,""],isSet:[327,1,1,""],load:[327,1,1,""],mean:[327,2,1,""],outputCol:[327,2,1,""],params:[327,2,1,""],read:[327,1,1,""],save:[327,1,1,""],set:[327,1,1,""],setInputCol:[327,1,1,""],setOutputCol:[327,1,1,""],std:[327,2,1,""],transform:[327,1,1,""],withMean:[327,2,1,""],withStd:[327,2,1,""],write:[327,1,1,""]},"pyspark.ml.feature.StopWordsRemover":{caseSensitive:[328,2,1,""],clear:[328,1,1,""],copy:[328,1,1,""],explainParam:[328,1,1,""],explainParams:[328,1,1,""],extractParamMap:[328,1,1,""],getCaseSensitive:[328,1,1,""],getInputCol:[328,1,1,""],getInputCols:[328,1,1,""],getLocale:[328,1,1,""],getOrDefault:[328,1,1,""],getOutputCol:[328,1,1,""],getOutputCols:[328,1,1,""],getParam:[328,1,1,""],getStopWords:[328,1,1,""],hasDefault:[328,1,1,""],hasParam:[328,1,1,""],inputCol:[328,2,1,""],inputCols:[328,2,1,""],isDefined:[328,1,1,""],isSet:[328,1,1,""],load:[328,1,1,""],loadDefaultStopWords:[328,1,1,""],locale:[328,2,1,""],outputCol:[328,2,1,""],outputCols:[328,2,1,""],params:[328,2,1,""],read:[328,1,1,""],save:[328,1,1,""],set:[328,1,1,""],setCaseSensitive:[328,1,1,""],setInputCol:[328,1,1,""],setInputCols:[328,1,1,""],setLocale:[328,1,1,""],setOutputCol:[328,1,1,""],setOutputCols:[328,1,1,""],setParams:[328,1,1,""],setStopWords:[328,1,1,""],stopWords:[328,2,1,""],transform:[328,1,1,""],write:[328,1,1,""]},"pyspark.ml.feature.StringIndexer":{clear:[329,1,1,""],copy:[329,1,1,""],explainParam:[329,1,1,""],explainParams:[329,1,1,""],extractParamMap:[329,1,1,""],fit:[329,1,1,""],fitMultiple:[329,1,1,""],getHandleInvalid:[329,1,1,""],getInputCol:[329,1,1,""],getInputCols:[329,1,1,""],getOrDefault:[329,1,1,""],getOutputCol:[329,1,1,""],getOutputCols:[329,1,1,""],getParam:[329,1,1,""],getStringOrderType:[329,1,1,""],handleInvalid:[329,2,1,""],hasDefault:[329,1,1,""],hasParam:[329,1,1,""],inputCol:[329,2,1,""],inputCols:[329,2,1,""],isDefined:[329,1,1,""],isSet:[329,1,1,""],load:[329,1,1,""],outputCol:[329,2,1,""],outputCols:[329,2,1,""],params:[329,2,1,""],read:[329,1,1,""],save:[329,1,1,""],set:[329,1,1,""],setHandleInvalid:[329,1,1,""],setInputCol:[329,1,1,""],setInputCols:[329,1,1,""],setOutputCol:[329,1,1,""],setOutputCols:[329,1,1,""],setParams:[329,1,1,""],setStringOrderType:[329,1,1,""],stringOrderType:[329,2,1,""],write:[329,1,1,""]},"pyspark.ml.feature.StringIndexerModel":{clear:[330,1,1,""],copy:[330,1,1,""],explainParam:[330,1,1,""],explainParams:[330,1,1,""],extractParamMap:[330,1,1,""],from_arrays_of_labels:[330,1,1,""],from_labels:[330,1,1,""],getHandleInvalid:[330,1,1,""],getInputCol:[330,1,1,""],getInputCols:[330,1,1,""],getOrDefault:[330,1,1,""],getOutputCol:[330,1,1,""],getOutputCols:[330,1,1,""],getParam:[330,1,1,""],getStringOrderType:[330,1,1,""],handleInvalid:[330,2,1,""],hasDefault:[330,1,1,""],hasParam:[330,1,1,""],inputCol:[330,2,1,""],inputCols:[330,2,1,""],isDefined:[330,1,1,""],isSet:[330,1,1,""],labels:[330,2,1,""],labelsArray:[330,2,1,""],load:[330,1,1,""],outputCol:[330,2,1,""],outputCols:[330,2,1,""],params:[330,2,1,""],read:[330,1,1,""],save:[330,1,1,""],set:[330,1,1,""],setHandleInvalid:[330,1,1,""],setInputCol:[330,1,1,""],setInputCols:[330,1,1,""],setOutputCol:[330,1,1,""],setOutputCols:[330,1,1,""],stringOrderType:[330,2,1,""],transform:[330,1,1,""],write:[330,1,1,""]},"pyspark.ml.feature.Tokenizer":{clear:[331,1,1,""],copy:[331,1,1,""],explainParam:[331,1,1,""],explainParams:[331,1,1,""],extractParamMap:[331,1,1,""],getInputCol:[331,1,1,""],getOrDefault:[331,1,1,""],getOutputCol:[331,1,1,""],getParam:[331,1,1,""],hasDefault:[331,1,1,""],hasParam:[331,1,1,""],inputCol:[331,2,1,""],isDefined:[331,1,1,""],isSet:[331,1,1,""],load:[331,1,1,""],outputCol:[331,2,1,""],params:[331,2,1,""],read:[331,1,1,""],save:[331,1,1,""],set:[331,1,1,""],setInputCol:[331,1,1,""],setOutputCol:[331,1,1,""],setParams:[331,1,1,""],transform:[331,1,1,""],write:[331,1,1,""]},"pyspark.ml.feature.UnivariateFeatureSelector":{clear:[332,1,1,""],copy:[332,1,1,""],explainParam:[332,1,1,""],explainParams:[332,1,1,""],extractParamMap:[332,1,1,""],featureType:[332,2,1,""],featuresCol:[332,2,1,""],fit:[332,1,1,""],fitMultiple:[332,1,1,""],getFeatureType:[332,1,1,""],getFeaturesCol:[332,1,1,""],getLabelCol:[332,1,1,""],getLabelType:[332,1,1,""],getOrDefault:[332,1,1,""],getOutputCol:[332,1,1,""],getParam:[332,1,1,""],getSelectionMode:[332,1,1,""],getSelectionThreshold:[332,1,1,""],hasDefault:[332,1,1,""],hasParam:[332,1,1,""],isDefined:[332,1,1,""],isSet:[332,1,1,""],labelCol:[332,2,1,""],labelType:[332,2,1,""],load:[332,1,1,""],outputCol:[332,2,1,""],params:[332,2,1,""],read:[332,1,1,""],save:[332,1,1,""],selectionMode:[332,2,1,""],selectionThreshold:[332,2,1,""],set:[332,1,1,""],setFeatureType:[332,1,1,""],setFeaturesCol:[332,1,1,""],setLabelCol:[332,1,1,""],setLabelType:[332,1,1,""],setOutputCol:[332,1,1,""],setParams:[332,1,1,""],setSelectionMode:[332,1,1,""],setSelectionThreshold:[332,1,1,""],write:[332,1,1,""]},"pyspark.ml.feature.UnivariateFeatureSelectorModel":{clear:[333,1,1,""],copy:[333,1,1,""],explainParam:[333,1,1,""],explainParams:[333,1,1,""],extractParamMap:[333,1,1,""],featureType:[333,2,1,""],featuresCol:[333,2,1,""],getFeatureType:[333,1,1,""],getFeaturesCol:[333,1,1,""],getLabelCol:[333,1,1,""],getLabelType:[333,1,1,""],getOrDefault:[333,1,1,""],getOutputCol:[333,1,1,""],getParam:[333,1,1,""],getSelectionMode:[333,1,1,""],getSelectionThreshold:[333,1,1,""],hasDefault:[333,1,1,""],hasParam:[333,1,1,""],isDefined:[333,1,1,""],isSet:[333,1,1,""],labelCol:[333,2,1,""],labelType:[333,2,1,""],load:[333,1,1,""],outputCol:[333,2,1,""],params:[333,2,1,""],read:[333,1,1,""],save:[333,1,1,""],selectedFeatures:[333,2,1,""],selectionMode:[333,2,1,""],selectionThreshold:[333,2,1,""],set:[333,1,1,""],setFeaturesCol:[333,1,1,""],setOutputCol:[333,1,1,""],transform:[333,1,1,""],write:[333,1,1,""]},"pyspark.ml.feature.VarianceThresholdSelector":{clear:[334,1,1,""],copy:[334,1,1,""],explainParam:[334,1,1,""],explainParams:[334,1,1,""],extractParamMap:[334,1,1,""],featuresCol:[334,2,1,""],fit:[334,1,1,""],fitMultiple:[334,1,1,""],getFeaturesCol:[334,1,1,""],getOrDefault:[334,1,1,""],getOutputCol:[334,1,1,""],getParam:[334,1,1,""],getVarianceThreshold:[334,1,1,""],hasDefault:[334,1,1,""],hasParam:[334,1,1,""],isDefined:[334,1,1,""],isSet:[334,1,1,""],load:[334,1,1,""],outputCol:[334,2,1,""],params:[334,2,1,""],read:[334,1,1,""],save:[334,1,1,""],set:[334,1,1,""],setFeaturesCol:[334,1,1,""],setOutputCol:[334,1,1,""],setParams:[334,1,1,""],setVarianceThreshold:[334,1,1,""],varianceThreshold:[334,2,1,""],write:[334,1,1,""]},"pyspark.ml.feature.VarianceThresholdSelectorModel":{clear:[335,1,1,""],copy:[335,1,1,""],explainParam:[335,1,1,""],explainParams:[335,1,1,""],extractParamMap:[335,1,1,""],featuresCol:[335,2,1,""],getFeaturesCol:[335,1,1,""],getOrDefault:[335,1,1,""],getOutputCol:[335,1,1,""],getParam:[335,1,1,""],getVarianceThreshold:[335,1,1,""],hasDefault:[335,1,1,""],hasParam:[335,1,1,""],isDefined:[335,1,1,""],isSet:[335,1,1,""],load:[335,1,1,""],outputCol:[335,2,1,""],params:[335,2,1,""],read:[335,1,1,""],save:[335,1,1,""],selectedFeatures:[335,2,1,""],set:[335,1,1,""],setFeaturesCol:[335,1,1,""],setOutputCol:[335,1,1,""],transform:[335,1,1,""],varianceThreshold:[335,2,1,""],write:[335,1,1,""]},"pyspark.ml.feature.VectorAssembler":{clear:[336,1,1,""],copy:[336,1,1,""],explainParam:[336,1,1,""],explainParams:[336,1,1,""],extractParamMap:[336,1,1,""],getHandleInvalid:[336,1,1,""],getInputCols:[336,1,1,""],getOrDefault:[336,1,1,""],getOutputCol:[336,1,1,""],getParam:[336,1,1,""],handleInvalid:[336,2,1,""],hasDefault:[336,1,1,""],hasParam:[336,1,1,""],inputCols:[336,2,1,""],isDefined:[336,1,1,""],isSet:[336,1,1,""],load:[336,1,1,""],outputCol:[336,2,1,""],params:[336,2,1,""],read:[336,1,1,""],save:[336,1,1,""],set:[336,1,1,""],setHandleInvalid:[336,1,1,""],setInputCols:[336,1,1,""],setOutputCol:[336,1,1,""],setParams:[336,1,1,""],transform:[336,1,1,""],write:[336,1,1,""]},"pyspark.ml.feature.VectorIndexer":{clear:[337,1,1,""],copy:[337,1,1,""],explainParam:[337,1,1,""],explainParams:[337,1,1,""],extractParamMap:[337,1,1,""],fit:[337,1,1,""],fitMultiple:[337,1,1,""],getHandleInvalid:[337,1,1,""],getInputCol:[337,1,1,""],getMaxCategories:[337,1,1,""],getOrDefault:[337,1,1,""],getOutputCol:[337,1,1,""],getParam:[337,1,1,""],handleInvalid:[337,2,1,""],hasDefault:[337,1,1,""],hasParam:[337,1,1,""],inputCol:[337,2,1,""],isDefined:[337,1,1,""],isSet:[337,1,1,""],load:[337,1,1,""],maxCategories:[337,2,1,""],outputCol:[337,2,1,""],params:[337,2,1,""],read:[337,1,1,""],save:[337,1,1,""],set:[337,1,1,""],setHandleInvalid:[337,1,1,""],setInputCol:[337,1,1,""],setMaxCategories:[337,1,1,""],setOutputCol:[337,1,1,""],setParams:[337,1,1,""],write:[337,1,1,""]},"pyspark.ml.feature.VectorIndexerModel":{categoryMaps:[338,2,1,""],clear:[338,1,1,""],copy:[338,1,1,""],explainParam:[338,1,1,""],explainParams:[338,1,1,""],extractParamMap:[338,1,1,""],getHandleInvalid:[338,1,1,""],getInputCol:[338,1,1,""],getMaxCategories:[338,1,1,""],getOrDefault:[338,1,1,""],getOutputCol:[338,1,1,""],getParam:[338,1,1,""],handleInvalid:[338,2,1,""],hasDefault:[338,1,1,""],hasParam:[338,1,1,""],inputCol:[338,2,1,""],isDefined:[338,1,1,""],isSet:[338,1,1,""],load:[338,1,1,""],maxCategories:[338,2,1,""],numFeatures:[338,2,1,""],outputCol:[338,2,1,""],params:[338,2,1,""],read:[338,1,1,""],save:[338,1,1,""],set:[338,1,1,""],setInputCol:[338,1,1,""],setOutputCol:[338,1,1,""],transform:[338,1,1,""],write:[338,1,1,""]},"pyspark.ml.feature.VectorSizeHint":{clear:[339,1,1,""],copy:[339,1,1,""],explainParam:[339,1,1,""],explainParams:[339,1,1,""],extractParamMap:[339,1,1,""],getHandleInvalid:[339,1,1,""],getInputCol:[339,1,1,""],getOrDefault:[339,1,1,""],getParam:[339,1,1,""],getSize:[339,1,1,""],handleInvalid:[339,2,1,""],hasDefault:[339,1,1,""],hasParam:[339,1,1,""],inputCol:[339,2,1,""],isDefined:[339,1,1,""],isSet:[339,1,1,""],load:[339,1,1,""],params:[339,2,1,""],read:[339,1,1,""],save:[339,1,1,""],set:[339,1,1,""],setHandleInvalid:[339,1,1,""],setInputCol:[339,1,1,""],setParams:[339,1,1,""],setSize:[339,1,1,""],size:[339,2,1,""],transform:[339,1,1,""],write:[339,1,1,""]},"pyspark.ml.feature.VectorSlicer":{clear:[340,1,1,""],copy:[340,1,1,""],explainParam:[340,1,1,""],explainParams:[340,1,1,""],extractParamMap:[340,1,1,""],getIndices:[340,1,1,""],getInputCol:[340,1,1,""],getNames:[340,1,1,""],getOrDefault:[340,1,1,""],getOutputCol:[340,1,1,""],getParam:[340,1,1,""],hasDefault:[340,1,1,""],hasParam:[340,1,1,""],indices:[340,2,1,""],inputCol:[340,2,1,""],isDefined:[340,1,1,""],isSet:[340,1,1,""],load:[340,1,1,""],names:[340,2,1,""],outputCol:[340,2,1,""],params:[340,2,1,""],read:[340,1,1,""],save:[340,1,1,""],set:[340,1,1,""],setIndices:[340,1,1,""],setInputCol:[340,1,1,""],setNames:[340,1,1,""],setOutputCol:[340,1,1,""],setParams:[340,1,1,""],transform:[340,1,1,""],write:[340,1,1,""]},"pyspark.ml.feature.Word2Vec":{clear:[341,1,1,""],copy:[341,1,1,""],explainParam:[341,1,1,""],explainParams:[341,1,1,""],extractParamMap:[341,1,1,""],fit:[341,1,1,""],fitMultiple:[341,1,1,""],getInputCol:[341,1,1,""],getMaxIter:[341,1,1,""],getMaxSentenceLength:[341,1,1,""],getMinCount:[341,1,1,""],getNumPartitions:[341,1,1,""],getOrDefault:[341,1,1,""],getOutputCol:[341,1,1,""],getParam:[341,1,1,""],getSeed:[341,1,1,""],getStepSize:[341,1,1,""],getVectorSize:[341,1,1,""],getWindowSize:[341,1,1,""],hasDefault:[341,1,1,""],hasParam:[341,1,1,""],inputCol:[341,2,1,""],isDefined:[341,1,1,""],isSet:[341,1,1,""],load:[341,1,1,""],maxIter:[341,2,1,""],maxSentenceLength:[341,2,1,""],minCount:[341,2,1,""],numPartitions:[341,2,1,""],outputCol:[341,2,1,""],params:[341,2,1,""],read:[341,1,1,""],save:[341,1,1,""],seed:[341,2,1,""],set:[341,1,1,""],setInputCol:[341,1,1,""],setMaxIter:[341,1,1,""],setMaxSentenceLength:[341,1,1,""],setMinCount:[341,1,1,""],setNumPartitions:[341,1,1,""],setOutputCol:[341,1,1,""],setParams:[341,1,1,""],setSeed:[341,1,1,""],setStepSize:[341,1,1,""],setVectorSize:[341,1,1,""],setWindowSize:[341,1,1,""],stepSize:[341,2,1,""],vectorSize:[341,2,1,""],windowSize:[341,2,1,""],write:[341,1,1,""]},"pyspark.ml.feature.Word2VecModel":{clear:[342,1,1,""],copy:[342,1,1,""],explainParam:[342,1,1,""],explainParams:[342,1,1,""],extractParamMap:[342,1,1,""],findSynonyms:[342,1,1,""],findSynonymsArray:[342,1,1,""],getInputCol:[342,1,1,""],getMaxIter:[342,1,1,""],getMaxSentenceLength:[342,1,1,""],getMinCount:[342,1,1,""],getNumPartitions:[342,1,1,""],getOrDefault:[342,1,1,""],getOutputCol:[342,1,1,""],getParam:[342,1,1,""],getSeed:[342,1,1,""],getStepSize:[342,1,1,""],getVectorSize:[342,1,1,""],getVectors:[342,1,1,""],getWindowSize:[342,1,1,""],hasDefault:[342,1,1,""],hasParam:[342,1,1,""],inputCol:[342,2,1,""],isDefined:[342,1,1,""],isSet:[342,1,1,""],load:[342,1,1,""],maxIter:[342,2,1,""],maxSentenceLength:[342,2,1,""],minCount:[342,2,1,""],numPartitions:[342,2,1,""],outputCol:[342,2,1,""],params:[342,2,1,""],read:[342,1,1,""],save:[342,1,1,""],seed:[342,2,1,""],set:[342,1,1,""],setInputCol:[342,1,1,""],setOutputCol:[342,1,1,""],stepSize:[342,2,1,""],transform:[342,1,1,""],vectorSize:[342,2,1,""],windowSize:[342,2,1,""],write:[342,1,1,""]},"pyspark.ml.fpm":{FPGrowth:[343,0,1,""],FPGrowthModel:[344,0,1,""],PrefixSpan:[345,0,1,""]},"pyspark.ml.fpm.FPGrowth":{clear:[343,1,1,""],copy:[343,1,1,""],explainParam:[343,1,1,""],explainParams:[343,1,1,""],extractParamMap:[343,1,1,""],fit:[343,1,1,""],fitMultiple:[343,1,1,""],getItemsCol:[343,1,1,""],getMinConfidence:[343,1,1,""],getMinSupport:[343,1,1,""],getNumPartitions:[343,1,1,""],getOrDefault:[343,1,1,""],getParam:[343,1,1,""],getPredictionCol:[343,1,1,""],hasDefault:[343,1,1,""],hasParam:[343,1,1,""],isDefined:[343,1,1,""],isSet:[343,1,1,""],itemsCol:[343,2,1,""],load:[343,1,1,""],minConfidence:[343,2,1,""],minSupport:[343,2,1,""],numPartitions:[343,2,1,""],params:[343,2,1,""],predictionCol:[343,2,1,""],read:[343,1,1,""],save:[343,1,1,""],set:[343,1,1,""],setItemsCol:[343,1,1,""],setMinConfidence:[343,1,1,""],setMinSupport:[343,1,1,""],setNumPartitions:[343,1,1,""],setParams:[343,1,1,""],setPredictionCol:[343,1,1,""],write:[343,1,1,""]},"pyspark.ml.fpm.FPGrowthModel":{associationRules:[344,2,1,""],clear:[344,1,1,""],copy:[344,1,1,""],explainParam:[344,1,1,""],explainParams:[344,1,1,""],extractParamMap:[344,1,1,""],freqItemsets:[344,2,1,""],getItemsCol:[344,1,1,""],getMinConfidence:[344,1,1,""],getMinSupport:[344,1,1,""],getNumPartitions:[344,1,1,""],getOrDefault:[344,1,1,""],getParam:[344,1,1,""],getPredictionCol:[344,1,1,""],hasDefault:[344,1,1,""],hasParam:[344,1,1,""],isDefined:[344,1,1,""],isSet:[344,1,1,""],itemsCol:[344,2,1,""],load:[344,1,1,""],minConfidence:[344,2,1,""],minSupport:[344,2,1,""],numPartitions:[344,2,1,""],params:[344,2,1,""],predictionCol:[344,2,1,""],read:[344,1,1,""],save:[344,1,1,""],set:[344,1,1,""],setItemsCol:[344,1,1,""],setMinConfidence:[344,1,1,""],setPredictionCol:[344,1,1,""],transform:[344,1,1,""],write:[344,1,1,""]},"pyspark.ml.fpm.PrefixSpan":{clear:[345,1,1,""],copy:[345,1,1,""],explainParam:[345,1,1,""],explainParams:[345,1,1,""],extractParamMap:[345,1,1,""],findFrequentSequentialPatterns:[345,1,1,""],getMaxLocalProjDBSize:[345,1,1,""],getMaxPatternLength:[345,1,1,""],getMinSupport:[345,1,1,""],getOrDefault:[345,1,1,""],getParam:[345,1,1,""],getSequenceCol:[345,1,1,""],hasDefault:[345,1,1,""],hasParam:[345,1,1,""],isDefined:[345,1,1,""],isSet:[345,1,1,""],maxLocalProjDBSize:[345,2,1,""],maxPatternLength:[345,2,1,""],minSupport:[345,2,1,""],params:[345,2,1,""],sequenceCol:[345,2,1,""],set:[345,1,1,""],setMaxLocalProjDBSize:[345,1,1,""],setMaxPatternLength:[345,1,1,""],setMinSupport:[345,1,1,""],setParams:[345,1,1,""],setSequenceCol:[345,1,1,""]},"pyspark.ml.functions":{array_to_vector:[346,3,1,""],vector_to_array:[347,3,1,""]},"pyspark.ml.image":{ImageSchema:[348,2,1,""],_ImageSchema:[349,0,1,""]},"pyspark.ml.image._ImageSchema":{columnSchema:[349,2,1,""],imageFields:[349,2,1,""],imageSchema:[349,2,1,""],ocvTypes:[349,2,1,""],toImage:[349,1,1,""],toNDArray:[349,1,1,""],undefinedImageType:[349,2,1,""]},"pyspark.ml.linalg":{DenseMatrix:[350,0,1,""],DenseVector:[351,0,1,""],Matrices:[352,0,1,""],Matrix:[353,0,1,""],SparseMatrix:[354,0,1,""],SparseVector:[355,0,1,""],Vector:[356,0,1,""],Vectors:[357,0,1,""]},"pyspark.ml.linalg.DenseMatrix":{toArray:[350,1,1,""],toSparse:[350,1,1,""]},"pyspark.ml.linalg.DenseVector":{dot:[351,1,1,""],norm:[351,1,1,""],numNonzeros:[351,1,1,""],squared_distance:[351,1,1,""],toArray:[351,1,1,""],values:[351,2,1,""]},"pyspark.ml.linalg.Matrices":{dense:[352,1,1,""],sparse:[352,1,1,""]},"pyspark.ml.linalg.Matrix":{toArray:[353,1,1,""]},"pyspark.ml.linalg.SparseMatrix":{toArray:[354,1,1,""],toDense:[354,1,1,""]},"pyspark.ml.linalg.SparseVector":{dot:[355,1,1,""],norm:[355,1,1,""],numNonzeros:[355,1,1,""],squared_distance:[355,1,1,""],toArray:[355,1,1,""]},"pyspark.ml.linalg.Vector":{toArray:[356,1,1,""]},"pyspark.ml.linalg.Vectors":{dense:[357,1,1,""],norm:[357,1,1,""],sparse:[357,1,1,""],squared_distance:[357,1,1,""],zeros:[357,1,1,""]},"pyspark.ml.param":{Param:[358,0,1,""],Params:[359,0,1,""],TypeConverters:[360,0,1,""]},"pyspark.ml.param.Params":{clear:[359,1,1,""],copy:[359,1,1,""],explainParam:[359,1,1,""],explainParams:[359,1,1,""],extractParamMap:[359,1,1,""],getOrDefault:[359,1,1,""],getParam:[359,1,1,""],hasDefault:[359,1,1,""],hasParam:[359,1,1,""],isDefined:[359,1,1,""],isSet:[359,1,1,""],params:[359,2,1,""],set:[359,1,1,""]},"pyspark.ml.param.TypeConverters":{identity:[360,1,1,""],toBoolean:[360,1,1,""],toFloat:[360,1,1,""],toInt:[360,1,1,""],toList:[360,1,1,""],toListFloat:[360,1,1,""],toListInt:[360,1,1,""],toListListFloat:[360,1,1,""],toListString:[360,1,1,""],toMatrix:[360,1,1,""],toString:[360,1,1,""],toVector:[360,1,1,""]},"pyspark.ml.recommendation":{ALS:[361,0,1,""],ALSModel:[362,0,1,""]},"pyspark.ml.recommendation.ALS":{alpha:[361,2,1,""],blockSize:[361,2,1,""],checkpointInterval:[361,2,1,""],clear:[361,1,1,""],coldStartStrategy:[361,2,1,""],copy:[361,1,1,""],explainParam:[361,1,1,""],explainParams:[361,1,1,""],extractParamMap:[361,1,1,""],finalStorageLevel:[361,2,1,""],fit:[361,1,1,""],fitMultiple:[361,1,1,""],getAlpha:[361,1,1,""],getBlockSize:[361,1,1,""],getCheckpointInterval:[361,1,1,""],getColdStartStrategy:[361,1,1,""],getFinalStorageLevel:[361,1,1,""],getImplicitPrefs:[361,1,1,""],getIntermediateStorageLevel:[361,1,1,""],getItemCol:[361,1,1,""],getMaxIter:[361,1,1,""],getNonnegative:[361,1,1,""],getNumItemBlocks:[361,1,1,""],getNumUserBlocks:[361,1,1,""],getOrDefault:[361,1,1,""],getParam:[361,1,1,""],getPredictionCol:[361,1,1,""],getRank:[361,1,1,""],getRatingCol:[361,1,1,""],getRegParam:[361,1,1,""],getSeed:[361,1,1,""],getUserCol:[361,1,1,""],hasDefault:[361,1,1,""],hasParam:[361,1,1,""],implicitPrefs:[361,2,1,""],intermediateStorageLevel:[361,2,1,""],isDefined:[361,1,1,""],isSet:[361,1,1,""],itemCol:[361,2,1,""],load:[361,1,1,""],maxIter:[361,2,1,""],nonnegative:[361,2,1,""],numItemBlocks:[361,2,1,""],numUserBlocks:[361,2,1,""],params:[361,2,1,""],predictionCol:[361,2,1,""],rank:[361,2,1,""],ratingCol:[361,2,1,""],read:[361,1,1,""],regParam:[361,2,1,""],save:[361,1,1,""],seed:[361,2,1,""],set:[361,1,1,""],setAlpha:[361,1,1,""],setBlockSize:[361,1,1,""],setCheckpointInterval:[361,1,1,""],setColdStartStrategy:[361,1,1,""],setFinalStorageLevel:[361,1,1,""],setImplicitPrefs:[361,1,1,""],setIntermediateStorageLevel:[361,1,1,""],setItemCol:[361,1,1,""],setMaxIter:[361,1,1,""],setNonnegative:[361,1,1,""],setNumBlocks:[361,1,1,""],setNumItemBlocks:[361,1,1,""],setNumUserBlocks:[361,1,1,""],setParams:[361,1,1,""],setPredictionCol:[361,1,1,""],setRank:[361,1,1,""],setRatingCol:[361,1,1,""],setRegParam:[361,1,1,""],setSeed:[361,1,1,""],setUserCol:[361,1,1,""],userCol:[361,2,1,""],write:[361,1,1,""]},"pyspark.ml.recommendation.ALSModel":{blockSize:[362,2,1,""],clear:[362,1,1,""],coldStartStrategy:[362,2,1,""],copy:[362,1,1,""],explainParam:[362,1,1,""],explainParams:[362,1,1,""],extractParamMap:[362,1,1,""],getBlockSize:[362,1,1,""],getColdStartStrategy:[362,1,1,""],getItemCol:[362,1,1,""],getOrDefault:[362,1,1,""],getParam:[362,1,1,""],getPredictionCol:[362,1,1,""],getUserCol:[362,1,1,""],hasDefault:[362,1,1,""],hasParam:[362,1,1,""],isDefined:[362,1,1,""],isSet:[362,1,1,""],itemCol:[362,2,1,""],itemFactors:[362,2,1,""],load:[362,1,1,""],params:[362,2,1,""],predictionCol:[362,2,1,""],rank:[362,2,1,""],read:[362,1,1,""],recommendForAllItems:[362,1,1,""],recommendForAllUsers:[362,1,1,""],recommendForItemSubset:[362,1,1,""],recommendForUserSubset:[362,1,1,""],save:[362,1,1,""],set:[362,1,1,""],setBlockSize:[362,1,1,""],setColdStartStrategy:[362,1,1,""],setItemCol:[362,1,1,""],setPredictionCol:[362,1,1,""],setUserCol:[362,1,1,""],transform:[362,1,1,""],userCol:[362,2,1,""],userFactors:[362,2,1,""],write:[362,1,1,""]},"pyspark.ml.regression":{AFTSurvivalRegression:[363,0,1,""],AFTSurvivalRegressionModel:[364,0,1,""],DecisionTreeRegressionModel:[365,0,1,""],DecisionTreeRegressor:[366,0,1,""],FMRegressionModel:[367,0,1,""],FMRegressor:[368,0,1,""],GBTRegressionModel:[369,0,1,""],GBTRegressor:[370,0,1,""],GeneralizedLinearRegression:[371,0,1,""],GeneralizedLinearRegressionModel:[372,0,1,""],GeneralizedLinearRegressionSummary:[373,0,1,""],GeneralizedLinearRegressionTrainingSummary:[374,0,1,""],IsotonicRegression:[375,0,1,""],IsotonicRegressionModel:[376,0,1,""],LinearRegression:[377,0,1,""],LinearRegressionModel:[378,0,1,""],LinearRegressionSummary:[379,0,1,""],LinearRegressionTrainingSummary:[380,0,1,""],RandomForestRegressionModel:[381,0,1,""],RandomForestRegressor:[382,0,1,""]},"pyspark.ml.regression.AFTSurvivalRegression":{aggregationDepth:[363,2,1,""],censorCol:[363,2,1,""],clear:[363,1,1,""],copy:[363,1,1,""],explainParam:[363,1,1,""],explainParams:[363,1,1,""],extractParamMap:[363,1,1,""],featuresCol:[363,2,1,""],fit:[363,1,1,""],fitIntercept:[363,2,1,""],fitMultiple:[363,1,1,""],getAggregationDepth:[363,1,1,""],getCensorCol:[363,1,1,""],getFeaturesCol:[363,1,1,""],getFitIntercept:[363,1,1,""],getLabelCol:[363,1,1,""],getMaxBlockSizeInMB:[363,1,1,""],getMaxIter:[363,1,1,""],getOrDefault:[363,1,1,""],getParam:[363,1,1,""],getPredictionCol:[363,1,1,""],getQuantileProbabilities:[363,1,1,""],getQuantilesCol:[363,1,1,""],getTol:[363,1,1,""],hasDefault:[363,1,1,""],hasParam:[363,1,1,""],isDefined:[363,1,1,""],isSet:[363,1,1,""],labelCol:[363,2,1,""],load:[363,1,1,""],maxBlockSizeInMB:[363,2,1,""],maxIter:[363,2,1,""],params:[363,2,1,""],predictionCol:[363,2,1,""],quantileProbabilities:[363,2,1,""],quantilesCol:[363,2,1,""],read:[363,1,1,""],save:[363,1,1,""],set:[363,1,1,""],setAggregationDepth:[363,1,1,""],setCensorCol:[363,1,1,""],setFeaturesCol:[363,1,1,""],setFitIntercept:[363,1,1,""],setLabelCol:[363,1,1,""],setMaxBlockSizeInMB:[363,1,1,""],setMaxIter:[363,1,1,""],setParams:[363,1,1,""],setPredictionCol:[363,1,1,""],setQuantileProbabilities:[363,1,1,""],setQuantilesCol:[363,1,1,""],setTol:[363,1,1,""],tol:[363,2,1,""],write:[363,1,1,""]},"pyspark.ml.regression.AFTSurvivalRegressionModel":{aggregationDepth:[364,2,1,""],censorCol:[364,2,1,""],clear:[364,1,1,""],coefficients:[364,2,1,""],copy:[364,1,1,""],explainParam:[364,1,1,""],explainParams:[364,1,1,""],extractParamMap:[364,1,1,""],featuresCol:[364,2,1,""],fitIntercept:[364,2,1,""],getAggregationDepth:[364,1,1,""],getCensorCol:[364,1,1,""],getFeaturesCol:[364,1,1,""],getFitIntercept:[364,1,1,""],getLabelCol:[364,1,1,""],getMaxBlockSizeInMB:[364,1,1,""],getMaxIter:[364,1,1,""],getOrDefault:[364,1,1,""],getParam:[364,1,1,""],getPredictionCol:[364,1,1,""],getQuantileProbabilities:[364,1,1,""],getQuantilesCol:[364,1,1,""],getTol:[364,1,1,""],hasDefault:[364,1,1,""],hasParam:[364,1,1,""],intercept:[364,2,1,""],isDefined:[364,1,1,""],isSet:[364,1,1,""],labelCol:[364,2,1,""],load:[364,1,1,""],maxBlockSizeInMB:[364,2,1,""],maxIter:[364,2,1,""],numFeatures:[364,2,1,""],params:[364,2,1,""],predict:[364,1,1,""],predictQuantiles:[364,1,1,""],predictionCol:[364,2,1,""],quantileProbabilities:[364,2,1,""],quantilesCol:[364,2,1,""],read:[364,1,1,""],save:[364,1,1,""],scale:[364,2,1,""],set:[364,1,1,""],setFeaturesCol:[364,1,1,""],setPredictionCol:[364,1,1,""],setQuantileProbabilities:[364,1,1,""],setQuantilesCol:[364,1,1,""],tol:[364,2,1,""],transform:[364,1,1,""],write:[364,1,1,""]},"pyspark.ml.regression.DecisionTreeRegressionModel":{cacheNodeIds:[365,2,1,""],checkpointInterval:[365,2,1,""],clear:[365,1,1,""],copy:[365,1,1,""],depth:[365,2,1,""],explainParam:[365,1,1,""],explainParams:[365,1,1,""],extractParamMap:[365,1,1,""],featureImportances:[365,2,1,""],featuresCol:[365,2,1,""],getCacheNodeIds:[365,1,1,""],getCheckpointInterval:[365,1,1,""],getFeaturesCol:[365,1,1,""],getImpurity:[365,1,1,""],getLabelCol:[365,1,1,""],getLeafCol:[365,1,1,""],getMaxBins:[365,1,1,""],getMaxDepth:[365,1,1,""],getMaxMemoryInMB:[365,1,1,""],getMinInfoGain:[365,1,1,""],getMinInstancesPerNode:[365,1,1,""],getMinWeightFractionPerNode:[365,1,1,""],getOrDefault:[365,1,1,""],getParam:[365,1,1,""],getPredictionCol:[365,1,1,""],getSeed:[365,1,1,""],getVarianceCol:[365,1,1,""],getWeightCol:[365,1,1,""],hasDefault:[365,1,1,""],hasParam:[365,1,1,""],impurity:[365,2,1,""],isDefined:[365,1,1,""],isSet:[365,1,1,""],labelCol:[365,2,1,""],leafCol:[365,2,1,""],load:[365,1,1,""],maxBins:[365,2,1,""],maxDepth:[365,2,1,""],maxMemoryInMB:[365,2,1,""],minInfoGain:[365,2,1,""],minInstancesPerNode:[365,2,1,""],minWeightFractionPerNode:[365,2,1,""],numFeatures:[365,2,1,""],numNodes:[365,2,1,""],params:[365,2,1,""],predict:[365,1,1,""],predictLeaf:[365,1,1,""],predictionCol:[365,2,1,""],read:[365,1,1,""],save:[365,1,1,""],seed:[365,2,1,""],set:[365,1,1,""],setFeaturesCol:[365,1,1,""],setLeafCol:[365,1,1,""],setPredictionCol:[365,1,1,""],setVarianceCol:[365,1,1,""],supportedImpurities:[365,2,1,""],toDebugString:[365,2,1,""],transform:[365,1,1,""],varianceCol:[365,2,1,""],weightCol:[365,2,1,""],write:[365,1,1,""]},"pyspark.ml.regression.DecisionTreeRegressor":{cacheNodeIds:[366,2,1,""],checkpointInterval:[366,2,1,""],clear:[366,1,1,""],copy:[366,1,1,""],explainParam:[366,1,1,""],explainParams:[366,1,1,""],extractParamMap:[366,1,1,""],featuresCol:[366,2,1,""],fit:[366,1,1,""],fitMultiple:[366,1,1,""],getCacheNodeIds:[366,1,1,""],getCheckpointInterval:[366,1,1,""],getFeaturesCol:[366,1,1,""],getImpurity:[366,1,1,""],getLabelCol:[366,1,1,""],getLeafCol:[366,1,1,""],getMaxBins:[366,1,1,""],getMaxDepth:[366,1,1,""],getMaxMemoryInMB:[366,1,1,""],getMinInfoGain:[366,1,1,""],getMinInstancesPerNode:[366,1,1,""],getMinWeightFractionPerNode:[366,1,1,""],getOrDefault:[366,1,1,""],getParam:[366,1,1,""],getPredictionCol:[366,1,1,""],getSeed:[366,1,1,""],getVarianceCol:[366,1,1,""],getWeightCol:[366,1,1,""],hasDefault:[366,1,1,""],hasParam:[366,1,1,""],impurity:[366,2,1,""],isDefined:[366,1,1,""],isSet:[366,1,1,""],labelCol:[366,2,1,""],leafCol:[366,2,1,""],load:[366,1,1,""],maxBins:[366,2,1,""],maxDepth:[366,2,1,""],maxMemoryInMB:[366,2,1,""],minInfoGain:[366,2,1,""],minInstancesPerNode:[366,2,1,""],minWeightFractionPerNode:[366,2,1,""],params:[366,2,1,""],predictionCol:[366,2,1,""],read:[366,1,1,""],save:[366,1,1,""],seed:[366,2,1,""],set:[366,1,1,""],setCacheNodeIds:[366,1,1,""],setCheckpointInterval:[366,1,1,""],setFeaturesCol:[366,1,1,""],setImpurity:[366,1,1,""],setLabelCol:[366,1,1,""],setLeafCol:[366,1,1,""],setMaxBins:[366,1,1,""],setMaxDepth:[366,1,1,""],setMaxMemoryInMB:[366,1,1,""],setMinInfoGain:[366,1,1,""],setMinInstancesPerNode:[366,1,1,""],setMinWeightFractionPerNode:[366,1,1,""],setParams:[366,1,1,""],setPredictionCol:[366,1,1,""],setSeed:[366,1,1,""],setVarianceCol:[366,1,1,""],setWeightCol:[366,1,1,""],supportedImpurities:[366,2,1,""],varianceCol:[366,2,1,""],weightCol:[366,2,1,""],write:[366,1,1,""]},"pyspark.ml.regression.FMRegressionModel":{clear:[367,1,1,""],copy:[367,1,1,""],explainParam:[367,1,1,""],explainParams:[367,1,1,""],extractParamMap:[367,1,1,""],factorSize:[367,2,1,""],factors:[367,2,1,""],featuresCol:[367,2,1,""],fitIntercept:[367,2,1,""],fitLinear:[367,2,1,""],getFactorSize:[367,1,1,""],getFeaturesCol:[367,1,1,""],getFitIntercept:[367,1,1,""],getFitLinear:[367,1,1,""],getInitStd:[367,1,1,""],getLabelCol:[367,1,1,""],getMaxIter:[367,1,1,""],getMiniBatchFraction:[367,1,1,""],getOrDefault:[367,1,1,""],getParam:[367,1,1,""],getPredictionCol:[367,1,1,""],getRegParam:[367,1,1,""],getSeed:[367,1,1,""],getSolver:[367,1,1,""],getStepSize:[367,1,1,""],getTol:[367,1,1,""],getWeightCol:[367,1,1,""],hasDefault:[367,1,1,""],hasParam:[367,1,1,""],initStd:[367,2,1,""],intercept:[367,2,1,""],isDefined:[367,1,1,""],isSet:[367,1,1,""],labelCol:[367,2,1,""],linear:[367,2,1,""],load:[367,1,1,""],maxIter:[367,2,1,""],miniBatchFraction:[367,2,1,""],numFeatures:[367,2,1,""],params:[367,2,1,""],predict:[367,1,1,""],predictionCol:[367,2,1,""],read:[367,1,1,""],regParam:[367,2,1,""],save:[367,1,1,""],seed:[367,2,1,""],set:[367,1,1,""],setFeaturesCol:[367,1,1,""],setPredictionCol:[367,1,1,""],solver:[367,2,1,""],stepSize:[367,2,1,""],tol:[367,2,1,""],transform:[367,1,1,""],weightCol:[367,2,1,""],write:[367,1,1,""]},"pyspark.ml.regression.FMRegressor":{clear:[368,1,1,""],copy:[368,1,1,""],explainParam:[368,1,1,""],explainParams:[368,1,1,""],extractParamMap:[368,1,1,""],factorSize:[368,2,1,""],featuresCol:[368,2,1,""],fit:[368,1,1,""],fitIntercept:[368,2,1,""],fitLinear:[368,2,1,""],fitMultiple:[368,1,1,""],getFactorSize:[368,1,1,""],getFeaturesCol:[368,1,1,""],getFitIntercept:[368,1,1,""],getFitLinear:[368,1,1,""],getInitStd:[368,1,1,""],getLabelCol:[368,1,1,""],getMaxIter:[368,1,1,""],getMiniBatchFraction:[368,1,1,""],getOrDefault:[368,1,1,""],getParam:[368,1,1,""],getPredictionCol:[368,1,1,""],getRegParam:[368,1,1,""],getSeed:[368,1,1,""],getSolver:[368,1,1,""],getStepSize:[368,1,1,""],getTol:[368,1,1,""],getWeightCol:[368,1,1,""],hasDefault:[368,1,1,""],hasParam:[368,1,1,""],initStd:[368,2,1,""],isDefined:[368,1,1,""],isSet:[368,1,1,""],labelCol:[368,2,1,""],load:[368,1,1,""],maxIter:[368,2,1,""],miniBatchFraction:[368,2,1,""],params:[368,2,1,""],predictionCol:[368,2,1,""],read:[368,1,1,""],regParam:[368,2,1,""],save:[368,1,1,""],seed:[368,2,1,""],set:[368,1,1,""],setFactorSize:[368,1,1,""],setFeaturesCol:[368,1,1,""],setFitIntercept:[368,1,1,""],setFitLinear:[368,1,1,""],setInitStd:[368,1,1,""],setLabelCol:[368,1,1,""],setMaxIter:[368,1,1,""],setMiniBatchFraction:[368,1,1,""],setParams:[368,1,1,""],setPredictionCol:[368,1,1,""],setRegParam:[368,1,1,""],setSeed:[368,1,1,""],setSolver:[368,1,1,""],setStepSize:[368,1,1,""],setTol:[368,1,1,""],solver:[368,2,1,""],stepSize:[368,2,1,""],tol:[368,2,1,""],weightCol:[368,2,1,""],write:[368,1,1,""]},"pyspark.ml.regression.GBTRegressionModel":{cacheNodeIds:[369,2,1,""],checkpointInterval:[369,2,1,""],clear:[369,1,1,""],copy:[369,1,1,""],evaluateEachIteration:[369,1,1,""],explainParam:[369,1,1,""],explainParams:[369,1,1,""],extractParamMap:[369,1,1,""],featureImportances:[369,2,1,""],featureSubsetStrategy:[369,2,1,""],featuresCol:[369,2,1,""],getCacheNodeIds:[369,1,1,""],getCheckpointInterval:[369,1,1,""],getFeatureSubsetStrategy:[369,1,1,""],getFeaturesCol:[369,1,1,""],getImpurity:[369,1,1,""],getLabelCol:[369,1,1,""],getLeafCol:[369,1,1,""],getLossType:[369,1,1,""],getMaxBins:[369,1,1,""],getMaxDepth:[369,1,1,""],getMaxIter:[369,1,1,""],getMaxMemoryInMB:[369,1,1,""],getMinInfoGain:[369,1,1,""],getMinInstancesPerNode:[369,1,1,""],getMinWeightFractionPerNode:[369,1,1,""],getNumTrees:[369,2,1,""],getOrDefault:[369,1,1,""],getParam:[369,1,1,""],getPredictionCol:[369,1,1,""],getSeed:[369,1,1,""],getStepSize:[369,1,1,""],getSubsamplingRate:[369,1,1,""],getValidationIndicatorCol:[369,1,1,""],getValidationTol:[369,1,1,""],getWeightCol:[369,1,1,""],hasDefault:[369,1,1,""],hasParam:[369,1,1,""],impurity:[369,2,1,""],isDefined:[369,1,1,""],isSet:[369,1,1,""],labelCol:[369,2,1,""],leafCol:[369,2,1,""],load:[369,1,1,""],lossType:[369,2,1,""],maxBins:[369,2,1,""],maxDepth:[369,2,1,""],maxIter:[369,2,1,""],maxMemoryInMB:[369,2,1,""],minInfoGain:[369,2,1,""],minInstancesPerNode:[369,2,1,""],minWeightFractionPerNode:[369,2,1,""],numFeatures:[369,2,1,""],params:[369,2,1,""],predict:[369,1,1,""],predictLeaf:[369,1,1,""],predictionCol:[369,2,1,""],read:[369,1,1,""],save:[369,1,1,""],seed:[369,2,1,""],set:[369,1,1,""],setFeaturesCol:[369,1,1,""],setLeafCol:[369,1,1,""],setPredictionCol:[369,1,1,""],stepSize:[369,2,1,""],subsamplingRate:[369,2,1,""],supportedFeatureSubsetStrategies:[369,2,1,""],supportedImpurities:[369,2,1,""],supportedLossTypes:[369,2,1,""],toDebugString:[369,2,1,""],totalNumNodes:[369,2,1,""],transform:[369,1,1,""],treeWeights:[369,2,1,""],trees:[369,2,1,""],validationIndicatorCol:[369,2,1,""],validationTol:[369,2,1,""],weightCol:[369,2,1,""],write:[369,1,1,""]},"pyspark.ml.regression.GBTRegressor":{cacheNodeIds:[370,2,1,""],checkpointInterval:[370,2,1,""],clear:[370,1,1,""],copy:[370,1,1,""],explainParam:[370,1,1,""],explainParams:[370,1,1,""],extractParamMap:[370,1,1,""],featureSubsetStrategy:[370,2,1,""],featuresCol:[370,2,1,""],fit:[370,1,1,""],fitMultiple:[370,1,1,""],getCacheNodeIds:[370,1,1,""],getCheckpointInterval:[370,1,1,""],getFeatureSubsetStrategy:[370,1,1,""],getFeaturesCol:[370,1,1,""],getImpurity:[370,1,1,""],getLabelCol:[370,1,1,""],getLeafCol:[370,1,1,""],getLossType:[370,1,1,""],getMaxBins:[370,1,1,""],getMaxDepth:[370,1,1,""],getMaxIter:[370,1,1,""],getMaxMemoryInMB:[370,1,1,""],getMinInfoGain:[370,1,1,""],getMinInstancesPerNode:[370,1,1,""],getMinWeightFractionPerNode:[370,1,1,""],getOrDefault:[370,1,1,""],getParam:[370,1,1,""],getPredictionCol:[370,1,1,""],getSeed:[370,1,1,""],getStepSize:[370,1,1,""],getSubsamplingRate:[370,1,1,""],getValidationIndicatorCol:[370,1,1,""],getValidationTol:[370,1,1,""],getWeightCol:[370,1,1,""],hasDefault:[370,1,1,""],hasParam:[370,1,1,""],impurity:[370,2,1,""],isDefined:[370,1,1,""],isSet:[370,1,1,""],labelCol:[370,2,1,""],leafCol:[370,2,1,""],load:[370,1,1,""],lossType:[370,2,1,""],maxBins:[370,2,1,""],maxDepth:[370,2,1,""],maxIter:[370,2,1,""],maxMemoryInMB:[370,2,1,""],minInfoGain:[370,2,1,""],minInstancesPerNode:[370,2,1,""],minWeightFractionPerNode:[370,2,1,""],params:[370,2,1,""],predictionCol:[370,2,1,""],read:[370,1,1,""],save:[370,1,1,""],seed:[370,2,1,""],set:[370,1,1,""],setCacheNodeIds:[370,1,1,""],setCheckpointInterval:[370,1,1,""],setFeatureSubsetStrategy:[370,1,1,""],setFeaturesCol:[370,1,1,""],setImpurity:[370,1,1,""],setLabelCol:[370,1,1,""],setLeafCol:[370,1,1,""],setLossType:[370,1,1,""],setMaxBins:[370,1,1,""],setMaxDepth:[370,1,1,""],setMaxIter:[370,1,1,""],setMaxMemoryInMB:[370,1,1,""],setMinInfoGain:[370,1,1,""],setMinInstancesPerNode:[370,1,1,""],setMinWeightFractionPerNode:[370,1,1,""],setParams:[370,1,1,""],setPredictionCol:[370,1,1,""],setSeed:[370,1,1,""],setStepSize:[370,1,1,""],setSubsamplingRate:[370,1,1,""],setValidationIndicatorCol:[370,1,1,""],setWeightCol:[370,1,1,""],stepSize:[370,2,1,""],subsamplingRate:[370,2,1,""],supportedFeatureSubsetStrategies:[370,2,1,""],supportedImpurities:[370,2,1,""],supportedLossTypes:[370,2,1,""],validationIndicatorCol:[370,2,1,""],validationTol:[370,2,1,""],weightCol:[370,2,1,""],write:[370,1,1,""]},"pyspark.ml.regression.GeneralizedLinearRegression":{aggregationDepth:[371,2,1,""],clear:[371,1,1,""],copy:[371,1,1,""],explainParam:[371,1,1,""],explainParams:[371,1,1,""],extractParamMap:[371,1,1,""],family:[371,2,1,""],featuresCol:[371,2,1,""],fit:[371,1,1,""],fitIntercept:[371,2,1,""],fitMultiple:[371,1,1,""],getAggregationDepth:[371,1,1,""],getFamily:[371,1,1,""],getFeaturesCol:[371,1,1,""],getFitIntercept:[371,1,1,""],getLabelCol:[371,1,1,""],getLink:[371,1,1,""],getLinkPower:[371,1,1,""],getLinkPredictionCol:[371,1,1,""],getMaxIter:[371,1,1,""],getOffsetCol:[371,1,1,""],getOrDefault:[371,1,1,""],getParam:[371,1,1,""],getPredictionCol:[371,1,1,""],getRegParam:[371,1,1,""],getSolver:[371,1,1,""],getTol:[371,1,1,""],getVariancePower:[371,1,1,""],getWeightCol:[371,1,1,""],hasDefault:[371,1,1,""],hasParam:[371,1,1,""],isDefined:[371,1,1,""],isSet:[371,1,1,""],labelCol:[371,2,1,""],link:[371,2,1,""],linkPower:[371,2,1,""],linkPredictionCol:[371,2,1,""],load:[371,1,1,""],maxIter:[371,2,1,""],offsetCol:[371,2,1,""],params:[371,2,1,""],predictionCol:[371,2,1,""],read:[371,1,1,""],regParam:[371,2,1,""],save:[371,1,1,""],set:[371,1,1,""],setAggregationDepth:[371,1,1,""],setFamily:[371,1,1,""],setFeaturesCol:[371,1,1,""],setFitIntercept:[371,1,1,""],setLabelCol:[371,1,1,""],setLink:[371,1,1,""],setLinkPower:[371,1,1,""],setLinkPredictionCol:[371,1,1,""],setMaxIter:[371,1,1,""],setOffsetCol:[371,1,1,""],setParams:[371,1,1,""],setPredictionCol:[371,1,1,""],setRegParam:[371,1,1,""],setSolver:[371,1,1,""],setTol:[371,1,1,""],setVariancePower:[371,1,1,""],setWeightCol:[371,1,1,""],solver:[371,2,1,""],tol:[371,2,1,""],variancePower:[371,2,1,""],weightCol:[371,2,1,""],write:[371,1,1,""]},"pyspark.ml.regression.GeneralizedLinearRegressionModel":{aggregationDepth:[372,2,1,""],clear:[372,1,1,""],coefficients:[372,2,1,""],copy:[372,1,1,""],evaluate:[372,1,1,""],explainParam:[372,1,1,""],explainParams:[372,1,1,""],extractParamMap:[372,1,1,""],family:[372,2,1,""],featuresCol:[372,2,1,""],fitIntercept:[372,2,1,""],getAggregationDepth:[372,1,1,""],getFamily:[372,1,1,""],getFeaturesCol:[372,1,1,""],getFitIntercept:[372,1,1,""],getLabelCol:[372,1,1,""],getLink:[372,1,1,""],getLinkPower:[372,1,1,""],getLinkPredictionCol:[372,1,1,""],getMaxIter:[372,1,1,""],getOffsetCol:[372,1,1,""],getOrDefault:[372,1,1,""],getParam:[372,1,1,""],getPredictionCol:[372,1,1,""],getRegParam:[372,1,1,""],getSolver:[372,1,1,""],getTol:[372,1,1,""],getVariancePower:[372,1,1,""],getWeightCol:[372,1,1,""],hasDefault:[372,1,1,""],hasParam:[372,1,1,""],hasSummary:[372,2,1,""],intercept:[372,2,1,""],isDefined:[372,1,1,""],isSet:[372,1,1,""],labelCol:[372,2,1,""],link:[372,2,1,""],linkPower:[372,2,1,""],linkPredictionCol:[372,2,1,""],load:[372,1,1,""],maxIter:[372,2,1,""],numFeatures:[372,2,1,""],offsetCol:[372,2,1,""],params:[372,2,1,""],predict:[372,1,1,""],predictionCol:[372,2,1,""],read:[372,1,1,""],regParam:[372,2,1,""],save:[372,1,1,""],set:[372,1,1,""],setFeaturesCol:[372,1,1,""],setLinkPredictionCol:[372,1,1,""],setPredictionCol:[372,1,1,""],solver:[372,2,1,""],summary:[372,2,1,""],tol:[372,2,1,""],transform:[372,1,1,""],variancePower:[372,2,1,""],weightCol:[372,2,1,""],write:[372,1,1,""]},"pyspark.ml.regression.GeneralizedLinearRegressionSummary":{aic:[373,2,1,""],degreesOfFreedom:[373,2,1,""],deviance:[373,2,1,""],dispersion:[373,2,1,""],nullDeviance:[373,2,1,""],numInstances:[373,2,1,""],predictionCol:[373,2,1,""],predictions:[373,2,1,""],rank:[373,2,1,""],residualDegreeOfFreedom:[373,2,1,""],residualDegreeOfFreedomNull:[373,2,1,""],residuals:[373,1,1,""]},"pyspark.ml.regression.GeneralizedLinearRegressionTrainingSummary":{aic:[374,2,1,""],coefficientStandardErrors:[374,2,1,""],degreesOfFreedom:[374,2,1,""],deviance:[374,2,1,""],dispersion:[374,2,1,""],nullDeviance:[374,2,1,""],numInstances:[374,2,1,""],numIterations:[374,2,1,""],pValues:[374,2,1,""],predictionCol:[374,2,1,""],predictions:[374,2,1,""],rank:[374,2,1,""],residualDegreeOfFreedom:[374,2,1,""],residualDegreeOfFreedomNull:[374,2,1,""],residuals:[374,1,1,""],solver:[374,2,1,""],tValues:[374,2,1,""]},"pyspark.ml.regression.IsotonicRegression":{clear:[375,1,1,""],copy:[375,1,1,""],explainParam:[375,1,1,""],explainParams:[375,1,1,""],extractParamMap:[375,1,1,""],featureIndex:[375,2,1,""],featuresCol:[375,2,1,""],fit:[375,1,1,""],fitMultiple:[375,1,1,""],getFeatureIndex:[375,1,1,""],getFeaturesCol:[375,1,1,""],getIsotonic:[375,1,1,""],getLabelCol:[375,1,1,""],getOrDefault:[375,1,1,""],getParam:[375,1,1,""],getPredictionCol:[375,1,1,""],getWeightCol:[375,1,1,""],hasDefault:[375,1,1,""],hasParam:[375,1,1,""],isDefined:[375,1,1,""],isSet:[375,1,1,""],isotonic:[375,2,1,""],labelCol:[375,2,1,""],load:[375,1,1,""],params:[375,2,1,""],predictionCol:[375,2,1,""],read:[375,1,1,""],save:[375,1,1,""],set:[375,1,1,""],setFeatureIndex:[375,1,1,""],setFeaturesCol:[375,1,1,""],setIsotonic:[375,1,1,""],setLabelCol:[375,1,1,""],setParams:[375,1,1,""],setPredictionCol:[375,1,1,""],setWeightCol:[375,1,1,""],weightCol:[375,2,1,""],write:[375,1,1,""]},"pyspark.ml.regression.IsotonicRegressionModel":{boundaries:[376,2,1,""],clear:[376,1,1,""],copy:[376,1,1,""],explainParam:[376,1,1,""],explainParams:[376,1,1,""],extractParamMap:[376,1,1,""],featureIndex:[376,2,1,""],featuresCol:[376,2,1,""],getFeatureIndex:[376,1,1,""],getFeaturesCol:[376,1,1,""],getIsotonic:[376,1,1,""],getLabelCol:[376,1,1,""],getOrDefault:[376,1,1,""],getParam:[376,1,1,""],getPredictionCol:[376,1,1,""],getWeightCol:[376,1,1,""],hasDefault:[376,1,1,""],hasParam:[376,1,1,""],isDefined:[376,1,1,""],isSet:[376,1,1,""],isotonic:[376,2,1,""],labelCol:[376,2,1,""],load:[376,1,1,""],numFeatures:[376,2,1,""],params:[376,2,1,""],predict:[376,1,1,""],predictionCol:[376,2,1,""],predictions:[376,2,1,""],read:[376,1,1,""],save:[376,1,1,""],set:[376,1,1,""],setFeatureIndex:[376,1,1,""],setFeaturesCol:[376,1,1,""],setPredictionCol:[376,1,1,""],transform:[376,1,1,""],weightCol:[376,2,1,""],write:[376,1,1,""]},"pyspark.ml.regression.LinearRegression":{aggregationDepth:[377,2,1,""],clear:[377,1,1,""],copy:[377,1,1,""],elasticNetParam:[377,2,1,""],epsilon:[377,2,1,""],explainParam:[377,1,1,""],explainParams:[377,1,1,""],extractParamMap:[377,1,1,""],featuresCol:[377,2,1,""],fit:[377,1,1,""],fitIntercept:[377,2,1,""],fitMultiple:[377,1,1,""],getAggregationDepth:[377,1,1,""],getElasticNetParam:[377,1,1,""],getEpsilon:[377,1,1,""],getFeaturesCol:[377,1,1,""],getFitIntercept:[377,1,1,""],getLabelCol:[377,1,1,""],getLoss:[377,1,1,""],getMaxBlockSizeInMB:[377,1,1,""],getMaxIter:[377,1,1,""],getOrDefault:[377,1,1,""],getParam:[377,1,1,""],getPredictionCol:[377,1,1,""],getRegParam:[377,1,1,""],getSolver:[377,1,1,""],getStandardization:[377,1,1,""],getTol:[377,1,1,""],getWeightCol:[377,1,1,""],hasDefault:[377,1,1,""],hasParam:[377,1,1,""],isDefined:[377,1,1,""],isSet:[377,1,1,""],labelCol:[377,2,1,""],load:[377,1,1,""],loss:[377,2,1,""],maxBlockSizeInMB:[377,2,1,""],maxIter:[377,2,1,""],params:[377,2,1,""],predictionCol:[377,2,1,""],read:[377,1,1,""],regParam:[377,2,1,""],save:[377,1,1,""],set:[377,1,1,""],setAggregationDepth:[377,1,1,""],setElasticNetParam:[377,1,1,""],setEpsilon:[377,1,1,""],setFeaturesCol:[377,1,1,""],setFitIntercept:[377,1,1,""],setLabelCol:[377,1,1,""],setLoss:[377,1,1,""],setMaxBlockSizeInMB:[377,1,1,""],setMaxIter:[377,1,1,""],setParams:[377,1,1,""],setPredictionCol:[377,1,1,""],setRegParam:[377,1,1,""],setSolver:[377,1,1,""],setStandardization:[377,1,1,""],setTol:[377,1,1,""],setWeightCol:[377,1,1,""],solver:[377,2,1,""],standardization:[377,2,1,""],tol:[377,2,1,""],weightCol:[377,2,1,""],write:[377,1,1,""]},"pyspark.ml.regression.LinearRegressionModel":{aggregationDepth:[378,2,1,""],clear:[378,1,1,""],coefficients:[378,2,1,""],copy:[378,1,1,""],elasticNetParam:[378,2,1,""],epsilon:[378,2,1,""],evaluate:[378,1,1,""],explainParam:[378,1,1,""],explainParams:[378,1,1,""],extractParamMap:[378,1,1,""],featuresCol:[378,2,1,""],fitIntercept:[378,2,1,""],getAggregationDepth:[378,1,1,""],getElasticNetParam:[378,1,1,""],getEpsilon:[378,1,1,""],getFeaturesCol:[378,1,1,""],getFitIntercept:[378,1,1,""],getLabelCol:[378,1,1,""],getLoss:[378,1,1,""],getMaxBlockSizeInMB:[378,1,1,""],getMaxIter:[378,1,1,""],getOrDefault:[378,1,1,""],getParam:[378,1,1,""],getPredictionCol:[378,1,1,""],getRegParam:[378,1,1,""],getSolver:[378,1,1,""],getStandardization:[378,1,1,""],getTol:[378,1,1,""],getWeightCol:[378,1,1,""],hasDefault:[378,1,1,""],hasParam:[378,1,1,""],hasSummary:[378,2,1,""],intercept:[378,2,1,""],isDefined:[378,1,1,""],isSet:[378,1,1,""],labelCol:[378,2,1,""],load:[378,1,1,""],loss:[378,2,1,""],maxBlockSizeInMB:[378,2,1,""],maxIter:[378,2,1,""],numFeatures:[378,2,1,""],params:[378,2,1,""],predict:[378,1,1,""],predictionCol:[378,2,1,""],read:[378,1,1,""],regParam:[378,2,1,""],save:[378,1,1,""],scale:[378,2,1,""],set:[378,1,1,""],setFeaturesCol:[378,1,1,""],setPredictionCol:[378,1,1,""],solver:[378,2,1,""],standardization:[378,2,1,""],summary:[378,2,1,""],tol:[378,2,1,""],transform:[378,1,1,""],weightCol:[378,2,1,""],write:[378,1,1,""]},"pyspark.ml.regression.LinearRegressionSummary":{coefficientStandardErrors:[379,2,1,""],degreesOfFreedom:[379,2,1,""],devianceResiduals:[379,2,1,""],explainedVariance:[379,2,1,""],featuresCol:[379,2,1,""],labelCol:[379,2,1,""],meanAbsoluteError:[379,2,1,""],meanSquaredError:[379,2,1,""],numInstances:[379,2,1,""],pValues:[379,2,1,""],predictionCol:[379,2,1,""],predictions:[379,2,1,""],r2:[379,2,1,""],r2adj:[379,2,1,""],residuals:[379,2,1,""],rootMeanSquaredError:[379,2,1,""],tValues:[379,2,1,""]},"pyspark.ml.regression.LinearRegressionTrainingSummary":{coefficientStandardErrors:[380,2,1,""],degreesOfFreedom:[380,2,1,""],devianceResiduals:[380,2,1,""],explainedVariance:[380,2,1,""],featuresCol:[380,2,1,""],labelCol:[380,2,1,""],meanAbsoluteError:[380,2,1,""],meanSquaredError:[380,2,1,""],numInstances:[380,2,1,""],objectiveHistory:[380,2,1,""],pValues:[380,2,1,""],predictionCol:[380,2,1,""],predictions:[380,2,1,""],r2:[380,2,1,""],r2adj:[380,2,1,""],residuals:[380,2,1,""],rootMeanSquaredError:[380,2,1,""],tValues:[380,2,1,""],totalIterations:[380,2,1,""]},"pyspark.ml.regression.RandomForestRegressionModel":{bootstrap:[381,2,1,""],cacheNodeIds:[381,2,1,""],checkpointInterval:[381,2,1,""],clear:[381,1,1,""],copy:[381,1,1,""],explainParam:[381,1,1,""],explainParams:[381,1,1,""],extractParamMap:[381,1,1,""],featureImportances:[381,2,1,""],featureSubsetStrategy:[381,2,1,""],featuresCol:[381,2,1,""],getBootstrap:[381,1,1,""],getCacheNodeIds:[381,1,1,""],getCheckpointInterval:[381,1,1,""],getFeatureSubsetStrategy:[381,1,1,""],getFeaturesCol:[381,1,1,""],getImpurity:[381,1,1,""],getLabelCol:[381,1,1,""],getLeafCol:[381,1,1,""],getMaxBins:[381,1,1,""],getMaxDepth:[381,1,1,""],getMaxMemoryInMB:[381,1,1,""],getMinInfoGain:[381,1,1,""],getMinInstancesPerNode:[381,1,1,""],getMinWeightFractionPerNode:[381,1,1,""],getNumTrees:[381,2,1,""],getOrDefault:[381,1,1,""],getParam:[381,1,1,""],getPredictionCol:[381,1,1,""],getSeed:[381,1,1,""],getSubsamplingRate:[381,1,1,""],getWeightCol:[381,1,1,""],hasDefault:[381,1,1,""],hasParam:[381,1,1,""],impurity:[381,2,1,""],isDefined:[381,1,1,""],isSet:[381,1,1,""],labelCol:[381,2,1,""],leafCol:[381,2,1,""],load:[381,1,1,""],maxBins:[381,2,1,""],maxDepth:[381,2,1,""],maxMemoryInMB:[381,2,1,""],minInfoGain:[381,2,1,""],minInstancesPerNode:[381,2,1,""],minWeightFractionPerNode:[381,2,1,""],numFeatures:[381,2,1,""],numTrees:[381,2,1,""],params:[381,2,1,""],predict:[381,1,1,""],predictLeaf:[381,1,1,""],predictionCol:[381,2,1,""],read:[381,1,1,""],save:[381,1,1,""],seed:[381,2,1,""],set:[381,1,1,""],setFeaturesCol:[381,1,1,""],setLeafCol:[381,1,1,""],setPredictionCol:[381,1,1,""],subsamplingRate:[381,2,1,""],supportedFeatureSubsetStrategies:[381,2,1,""],supportedImpurities:[381,2,1,""],toDebugString:[381,2,1,""],totalNumNodes:[381,2,1,""],transform:[381,1,1,""],treeWeights:[381,2,1,""],trees:[381,2,1,""],weightCol:[381,2,1,""],write:[381,1,1,""]},"pyspark.ml.regression.RandomForestRegressor":{bootstrap:[382,2,1,""],cacheNodeIds:[382,2,1,""],checkpointInterval:[382,2,1,""],clear:[382,1,1,""],copy:[382,1,1,""],explainParam:[382,1,1,""],explainParams:[382,1,1,""],extractParamMap:[382,1,1,""],featureSubsetStrategy:[382,2,1,""],featuresCol:[382,2,1,""],fit:[382,1,1,""],fitMultiple:[382,1,1,""],getBootstrap:[382,1,1,""],getCacheNodeIds:[382,1,1,""],getCheckpointInterval:[382,1,1,""],getFeatureSubsetStrategy:[382,1,1,""],getFeaturesCol:[382,1,1,""],getImpurity:[382,1,1,""],getLabelCol:[382,1,1,""],getLeafCol:[382,1,1,""],getMaxBins:[382,1,1,""],getMaxDepth:[382,1,1,""],getMaxMemoryInMB:[382,1,1,""],getMinInfoGain:[382,1,1,""],getMinInstancesPerNode:[382,1,1,""],getMinWeightFractionPerNode:[382,1,1,""],getNumTrees:[382,1,1,""],getOrDefault:[382,1,1,""],getParam:[382,1,1,""],getPredictionCol:[382,1,1,""],getSeed:[382,1,1,""],getSubsamplingRate:[382,1,1,""],getWeightCol:[382,1,1,""],hasDefault:[382,1,1,""],hasParam:[382,1,1,""],impurity:[382,2,1,""],isDefined:[382,1,1,""],isSet:[382,1,1,""],labelCol:[382,2,1,""],leafCol:[382,2,1,""],load:[382,1,1,""],maxBins:[382,2,1,""],maxDepth:[382,2,1,""],maxMemoryInMB:[382,2,1,""],minInfoGain:[382,2,1,""],minInstancesPerNode:[382,2,1,""],minWeightFractionPerNode:[382,2,1,""],numTrees:[382,2,1,""],params:[382,2,1,""],predictionCol:[382,2,1,""],read:[382,1,1,""],save:[382,1,1,""],seed:[382,2,1,""],set:[382,1,1,""],setBootstrap:[382,1,1,""],setCacheNodeIds:[382,1,1,""],setCheckpointInterval:[382,1,1,""],setFeatureSubsetStrategy:[382,1,1,""],setFeaturesCol:[382,1,1,""],setImpurity:[382,1,1,""],setLabelCol:[382,1,1,""],setLeafCol:[382,1,1,""],setMaxBins:[382,1,1,""],setMaxDepth:[382,1,1,""],setMaxMemoryInMB:[382,1,1,""],setMinInfoGain:[382,1,1,""],setMinInstancesPerNode:[382,1,1,""],setMinWeightFractionPerNode:[382,1,1,""],setNumTrees:[382,1,1,""],setParams:[382,1,1,""],setPredictionCol:[382,1,1,""],setSeed:[382,1,1,""],setSubsamplingRate:[382,1,1,""],setWeightCol:[382,1,1,""],subsamplingRate:[382,2,1,""],supportedFeatureSubsetStrategies:[382,2,1,""],supportedImpurities:[382,2,1,""],weightCol:[382,2,1,""],write:[382,1,1,""]},"pyspark.ml.stat":{ChiSquareTest:[383,0,1,""],Correlation:[384,0,1,""],KolmogorovSmirnovTest:[385,0,1,""],MultivariateGaussian:[386,0,1,""],Summarizer:[387,0,1,""],SummaryBuilder:[388,0,1,""]},"pyspark.ml.stat.ChiSquareTest":{test:[383,1,1,""]},"pyspark.ml.stat.Correlation":{corr:[384,1,1,""]},"pyspark.ml.stat.KolmogorovSmirnovTest":{test:[385,1,1,""]},"pyspark.ml.stat.Summarizer":{count:[387,1,1,""],max:[387,1,1,""],mean:[387,1,1,""],metrics:[387,1,1,""],min:[387,1,1,""],normL1:[387,1,1,""],normL2:[387,1,1,""],numNonZeros:[387,1,1,""],std:[387,1,1,""],sum:[387,1,1,""],variance:[387,1,1,""]},"pyspark.ml.stat.SummaryBuilder":{summary:[388,1,1,""]},"pyspark.ml.tuning":{CrossValidator:[389,0,1,""],CrossValidatorModel:[390,0,1,""],ParamGridBuilder:[391,0,1,""],TrainValidationSplit:[392,0,1,""],TrainValidationSplitModel:[393,0,1,""]},"pyspark.ml.tuning.CrossValidator":{clear:[389,1,1,""],collectSubModels:[389,2,1,""],copy:[389,1,1,""],estimator:[389,2,1,""],estimatorParamMaps:[389,2,1,""],evaluator:[389,2,1,""],explainParam:[389,1,1,""],explainParams:[389,1,1,""],extractParamMap:[389,1,1,""],fit:[389,1,1,""],fitMultiple:[389,1,1,""],foldCol:[389,2,1,""],getCollectSubModels:[389,1,1,""],getEstimator:[389,1,1,""],getEstimatorParamMaps:[389,1,1,""],getEvaluator:[389,1,1,""],getFoldCol:[389,1,1,""],getNumFolds:[389,1,1,""],getOrDefault:[389,1,1,""],getParallelism:[389,1,1,""],getParam:[389,1,1,""],getSeed:[389,1,1,""],hasDefault:[389,1,1,""],hasParam:[389,1,1,""],isDefined:[389,1,1,""],isSet:[389,1,1,""],load:[389,1,1,""],numFolds:[389,2,1,""],parallelism:[389,2,1,""],params:[389,2,1,""],read:[389,1,1,""],save:[389,1,1,""],seed:[389,2,1,""],set:[389,1,1,""],setCollectSubModels:[389,1,1,""],setEstimator:[389,1,1,""],setEstimatorParamMaps:[389,1,1,""],setEvaluator:[389,1,1,""],setFoldCol:[389,1,1,""],setNumFolds:[389,1,1,""],setParallelism:[389,1,1,""],setParams:[389,1,1,""],setSeed:[389,1,1,""],write:[389,1,1,""]},"pyspark.ml.tuning.CrossValidatorModel":{clear:[390,1,1,""],copy:[390,1,1,""],estimator:[390,2,1,""],estimatorParamMaps:[390,2,1,""],evaluator:[390,2,1,""],explainParam:[390,1,1,""],explainParams:[390,1,1,""],extractParamMap:[390,1,1,""],foldCol:[390,2,1,""],getEstimator:[390,1,1,""],getEstimatorParamMaps:[390,1,1,""],getEvaluator:[390,1,1,""],getFoldCol:[390,1,1,""],getNumFolds:[390,1,1,""],getOrDefault:[390,1,1,""],getParam:[390,1,1,""],getSeed:[390,1,1,""],hasDefault:[390,1,1,""],hasParam:[390,1,1,""],isDefined:[390,1,1,""],isSet:[390,1,1,""],load:[390,1,1,""],numFolds:[390,2,1,""],params:[390,2,1,""],read:[390,1,1,""],save:[390,1,1,""],seed:[390,2,1,""],set:[390,1,1,""],transform:[390,1,1,""],write:[390,1,1,""]},"pyspark.ml.tuning.ParamGridBuilder":{addGrid:[391,1,1,""],baseOn:[391,1,1,""],build:[391,1,1,""]},"pyspark.ml.tuning.TrainValidationSplit":{clear:[392,1,1,""],collectSubModels:[392,2,1,""],copy:[392,1,1,""],estimator:[392,2,1,""],estimatorParamMaps:[392,2,1,""],evaluator:[392,2,1,""],explainParam:[392,1,1,""],explainParams:[392,1,1,""],extractParamMap:[392,1,1,""],fit:[392,1,1,""],fitMultiple:[392,1,1,""],getCollectSubModels:[392,1,1,""],getEstimator:[392,1,1,""],getEstimatorParamMaps:[392,1,1,""],getEvaluator:[392,1,1,""],getOrDefault:[392,1,1,""],getParallelism:[392,1,1,""],getParam:[392,1,1,""],getSeed:[392,1,1,""],getTrainRatio:[392,1,1,""],hasDefault:[392,1,1,""],hasParam:[392,1,1,""],isDefined:[392,1,1,""],isSet:[392,1,1,""],load:[392,1,1,""],parallelism:[392,2,1,""],params:[392,2,1,""],read:[392,1,1,""],save:[392,1,1,""],seed:[392,2,1,""],set:[392,1,1,""],setCollectSubModels:[392,1,1,""],setEstimator:[392,1,1,""],setEstimatorParamMaps:[392,1,1,""],setEvaluator:[392,1,1,""],setParallelism:[392,1,1,""],setParams:[392,1,1,""],setSeed:[392,1,1,""],setTrainRatio:[392,1,1,""],trainRatio:[392,2,1,""],write:[392,1,1,""]},"pyspark.ml.tuning.TrainValidationSplitModel":{clear:[393,1,1,""],copy:[393,1,1,""],estimator:[393,2,1,""],estimatorParamMaps:[393,2,1,""],evaluator:[393,2,1,""],explainParam:[393,1,1,""],explainParams:[393,1,1,""],extractParamMap:[393,1,1,""],getEstimator:[393,1,1,""],getEstimatorParamMaps:[393,1,1,""],getEvaluator:[393,1,1,""],getOrDefault:[393,1,1,""],getParam:[393,1,1,""],getSeed:[393,1,1,""],getTrainRatio:[393,1,1,""],hasDefault:[393,1,1,""],hasParam:[393,1,1,""],isDefined:[393,1,1,""],isSet:[393,1,1,""],load:[393,1,1,""],params:[393,2,1,""],read:[393,1,1,""],save:[393,1,1,""],seed:[393,2,1,""],set:[393,1,1,""],trainRatio:[393,2,1,""],transform:[393,1,1,""],write:[393,1,1,""]},"pyspark.ml.util":{BaseReadWrite:[394,0,1,""],DefaultParamsReadable:[395,0,1,""],DefaultParamsReader:[396,0,1,""],DefaultParamsWritable:[397,0,1,""],DefaultParamsWriter:[398,0,1,""],GeneralMLWriter:[399,0,1,""],HasTrainingSummary:[400,0,1,""],Identifiable:[401,0,1,""],MLReadable:[402,0,1,""],MLReader:[403,0,1,""],MLWritable:[404,0,1,""],MLWriter:[405,0,1,""]},"pyspark.ml.util.BaseReadWrite":{sc:[394,2,1,""],session:[394,1,1,""],sparkSession:[394,2,1,""]},"pyspark.ml.util.DefaultParamsReadable":{load:[395,1,1,""],read:[395,1,1,""]},"pyspark.ml.util.DefaultParamsReader":{getAndSetParams:[396,1,1,""],isPythonParamsInstance:[396,1,1,""],load:[396,1,1,""],loadMetadata:[396,1,1,""],loadParamsInstance:[396,1,1,""],sc:[396,2,1,""],session:[396,1,1,""],sparkSession:[396,2,1,""]},"pyspark.ml.util.DefaultParamsWritable":{save:[397,1,1,""],write:[397,1,1,""]},"pyspark.ml.util.DefaultParamsWriter":{extractJsonParams:[398,1,1,""],option:[398,1,1,""],overwrite:[398,1,1,""],save:[398,1,1,""],saveImpl:[398,1,1,""],saveMetadata:[398,1,1,""],sc:[398,2,1,""],session:[398,1,1,""],sparkSession:[398,2,1,""]},"pyspark.ml.util.GeneralMLWriter":{format:[399,1,1,""],option:[399,1,1,""],overwrite:[399,1,1,""],save:[399,1,1,""],saveImpl:[399,1,1,""],sc:[399,2,1,""],session:[399,1,1,""],sparkSession:[399,2,1,""]},"pyspark.ml.util.HasTrainingSummary":{hasSummary:[400,2,1,""],summary:[400,2,1,""]},"pyspark.ml.util.MLReadable":{load:[402,1,1,""],read:[402,1,1,""]},"pyspark.ml.util.MLReader":{load:[403,1,1,""],sc:[403,2,1,""],session:[403,1,1,""],sparkSession:[403,2,1,""]},"pyspark.ml.util.MLWritable":{save:[404,1,1,""],write:[404,1,1,""]},"pyspark.ml.util.MLWriter":{option:[405,1,1,""],overwrite:[405,1,1,""],save:[405,1,1,""],saveImpl:[405,1,1,""],sc:[405,2,1,""],session:[405,1,1,""],sparkSession:[405,2,1,""]},"pyspark.mllib.classification":{LogisticRegressionModel:[406,0,1,""],LogisticRegressionWithLBFGS:[407,0,1,""],LogisticRegressionWithSGD:[408,0,1,""],NaiveBayes:[409,0,1,""],NaiveBayesModel:[410,0,1,""],SVMModel:[411,0,1,""],SVMWithSGD:[412,0,1,""],StreamingLogisticRegressionWithSGD:[413,0,1,""]},"pyspark.mllib.classification.LogisticRegressionModel":{clearThreshold:[406,1,1,""],intercept:[406,2,1,""],load:[406,1,1,""],numClasses:[406,2,1,""],numFeatures:[406,2,1,""],predict:[406,1,1,""],save:[406,1,1,""],setThreshold:[406,1,1,""],threshold:[406,2,1,""],weights:[406,2,1,""]},"pyspark.mllib.classification.LogisticRegressionWithLBFGS":{train:[407,1,1,""]},"pyspark.mllib.classification.LogisticRegressionWithSGD":{train:[408,1,1,""]},"pyspark.mllib.classification.NaiveBayes":{train:[409,1,1,""]},"pyspark.mllib.classification.NaiveBayesModel":{load:[410,1,1,""],predict:[410,1,1,""],save:[410,1,1,""]},"pyspark.mllib.classification.SVMModel":{clearThreshold:[411,1,1,""],intercept:[411,2,1,""],load:[411,1,1,""],predict:[411,1,1,""],save:[411,1,1,""],setThreshold:[411,1,1,""],threshold:[411,2,1,""],weights:[411,2,1,""]},"pyspark.mllib.classification.SVMWithSGD":{train:[412,1,1,""]},"pyspark.mllib.classification.StreamingLogisticRegressionWithSGD":{latestModel:[413,1,1,""],predictOn:[413,1,1,""],predictOnValues:[413,1,1,""],setInitialWeights:[413,1,1,""],trainOn:[413,1,1,""]},"pyspark.mllib.clustering":{BisectingKMeans:[414,0,1,""],BisectingKMeansModel:[415,0,1,""],GaussianMixture:[416,0,1,""],GaussianMixtureModel:[417,0,1,""],KMeans:[418,0,1,""],KMeansModel:[419,0,1,""],LDA:[420,0,1,""],LDAModel:[421,0,1,""],PowerIterationClustering:[422,0,1,""],PowerIterationClusteringModel:[423,0,1,""],StreamingKMeans:[424,0,1,""],StreamingKMeansModel:[425,0,1,""]},"pyspark.mllib.clustering.BisectingKMeans":{train:[414,1,1,""]},"pyspark.mllib.clustering.BisectingKMeansModel":{call:[415,1,1,""],clusterCenters:[415,2,1,""],computeCost:[415,1,1,""],k:[415,2,1,""],predict:[415,1,1,""]},"pyspark.mllib.clustering.GaussianMixture":{train:[416,1,1,""]},"pyspark.mllib.clustering.GaussianMixtureModel":{call:[417,1,1,""],gaussians:[417,2,1,""],k:[417,2,1,""],load:[417,1,1,""],predict:[417,1,1,""],predictSoft:[417,1,1,""],save:[417,1,1,""],weights:[417,2,1,""]},"pyspark.mllib.clustering.KMeans":{train:[418,1,1,""]},"pyspark.mllib.clustering.KMeansModel":{clusterCenters:[419,2,1,""],computeCost:[419,1,1,""],k:[419,2,1,""],load:[419,1,1,""],predict:[419,1,1,""],save:[419,1,1,""]},"pyspark.mllib.clustering.LDA":{train:[420,1,1,""]},"pyspark.mllib.clustering.LDAModel":{call:[421,1,1,""],describeTopics:[421,1,1,""],load:[421,1,1,""],save:[421,1,1,""],topicsMatrix:[421,1,1,""],vocabSize:[421,1,1,""]},"pyspark.mllib.clustering.PowerIterationClustering":{train:[422,1,1,""]},"pyspark.mllib.clustering.PowerIterationClusteringModel":{assignments:[423,1,1,""],call:[423,1,1,""],k:[423,2,1,""],load:[423,1,1,""],save:[423,1,1,""]},"pyspark.mllib.clustering.StreamingKMeans":{latestModel:[424,1,1,""],predictOn:[424,1,1,""],predictOnValues:[424,1,1,""],setDecayFactor:[424,1,1,""],setHalfLife:[424,1,1,""],setInitialCenters:[424,1,1,""],setK:[424,1,1,""],setRandomCenters:[424,1,1,""],trainOn:[424,1,1,""]},"pyspark.mllib.clustering.StreamingKMeansModel":{clusterCenters:[425,2,1,""],clusterWeights:[425,2,1,""],computeCost:[425,1,1,""],k:[425,2,1,""],load:[425,1,1,""],predict:[425,1,1,""],save:[425,1,1,""],update:[425,1,1,""]},"pyspark.mllib.evaluation":{BinaryClassificationMetrics:[426,0,1,""],MulticlassMetrics:[427,0,1,""],RankingMetrics:[428,0,1,""],RegressionMetrics:[429,0,1,""]},"pyspark.mllib.evaluation.BinaryClassificationMetrics":{areaUnderPR:[426,2,1,""],areaUnderROC:[426,2,1,""],call:[426,1,1,""],unpersist:[426,1,1,""]},"pyspark.mllib.evaluation.MulticlassMetrics":{accuracy:[427,2,1,""],call:[427,1,1,""],confusionMatrix:[427,1,1,""],fMeasure:[427,1,1,""],falsePositiveRate:[427,1,1,""],logLoss:[427,1,1,""],precision:[427,1,1,""],recall:[427,1,1,""],truePositiveRate:[427,1,1,""],weightedFMeasure:[427,1,1,""],weightedFalsePositiveRate:[427,2,1,""],weightedPrecision:[427,2,1,""],weightedRecall:[427,2,1,""],weightedTruePositiveRate:[427,2,1,""]},"pyspark.mllib.evaluation.RankingMetrics":{call:[428,1,1,""],meanAveragePrecision:[428,2,1,""],meanAveragePrecisionAt:[428,1,1,""],ndcgAt:[428,1,1,""],precisionAt:[428,1,1,""],recallAt:[428,1,1,""]},"pyspark.mllib.evaluation.RegressionMetrics":{call:[429,1,1,""],explainedVariance:[429,2,1,""],meanAbsoluteError:[429,2,1,""],meanSquaredError:[429,2,1,""],r2:[429,2,1,""],rootMeanSquaredError:[429,2,1,""]},"pyspark.mllib.feature":{ChiSqSelector:[430,0,1,""],ChiSqSelectorModel:[431,0,1,""],ElementwiseProduct:[432,0,1,""],HashingTF:[433,0,1,""],IDF:[434,0,1,""],IDFModel:[435,0,1,""],Normalizer:[436,0,1,""],StandardScaler:[437,0,1,""],StandardScalerModel:[438,0,1,""],Word2Vec:[439,0,1,""],Word2VecModel:[440,0,1,""]},"pyspark.mllib.feature.ChiSqSelector":{fit:[430,1,1,""],setFdr:[430,1,1,""],setFpr:[430,1,1,""],setFwe:[430,1,1,""],setNumTopFeatures:[430,1,1,""],setPercentile:[430,1,1,""],setSelectorType:[430,1,1,""]},"pyspark.mllib.feature.ChiSqSelectorModel":{call:[431,1,1,""],transform:[431,1,1,""]},"pyspark.mllib.feature.ElementwiseProduct":{transform:[432,1,1,""]},"pyspark.mllib.feature.HashingTF":{indexOf:[433,1,1,""],setBinary:[433,1,1,""],transform:[433,1,1,""]},"pyspark.mllib.feature.IDF":{fit:[434,1,1,""]},"pyspark.mllib.feature.IDFModel":{call:[435,1,1,""],docFreq:[435,1,1,""],idf:[435,1,1,""],numDocs:[435,1,1,""],transform:[435,1,1,""]},"pyspark.mllib.feature.Normalizer":{transform:[436,1,1,""]},"pyspark.mllib.feature.StandardScaler":{fit:[437,1,1,""]},"pyspark.mllib.feature.StandardScalerModel":{call:[438,1,1,""],mean:[438,2,1,""],setWithMean:[438,1,1,""],setWithStd:[438,1,1,""],std:[438,2,1,""],transform:[438,1,1,""],withMean:[438,2,1,""],withStd:[438,2,1,""]},"pyspark.mllib.feature.Word2Vec":{fit:[439,1,1,""],setLearningRate:[439,1,1,""],setMinCount:[439,1,1,""],setNumIterations:[439,1,1,""],setNumPartitions:[439,1,1,""],setSeed:[439,1,1,""],setVectorSize:[439,1,1,""],setWindowSize:[439,1,1,""]},"pyspark.mllib.feature.Word2VecModel":{call:[440,1,1,""],findSynonyms:[440,1,1,""],getVectors:[440,1,1,""],load:[440,1,1,""],save:[440,1,1,""],transform:[440,1,1,""]},"pyspark.mllib.fpm":{FPGrowth:[441,0,1,""],FPGrowthModel:[442,0,1,""],PrefixSpan:[443,0,1,""],PrefixSpanModel:[444,0,1,""]},"pyspark.mllib.fpm.FPGrowth":{train:[441,1,1,""]},"pyspark.mllib.fpm.FPGrowthModel":{call:[442,1,1,""],freqItemsets:[442,1,1,""],load:[442,1,1,""],save:[442,1,1,""]},"pyspark.mllib.fpm.PrefixSpan":{train:[443,1,1,""]},"pyspark.mllib.fpm.PrefixSpanModel":{call:[444,1,1,""],freqSequences:[444,1,1,""]},"pyspark.mllib.linalg":{DenseMatrix:[445,0,1,""],DenseVector:[446,0,1,""],Matrices:[447,0,1,""],Matrix:[448,0,1,""],QRDecomposition:[449,0,1,""],SparseMatrix:[450,0,1,""],SparseVector:[451,0,1,""],Vector:[452,0,1,""],Vectors:[453,0,1,""]},"pyspark.mllib.linalg.DenseMatrix":{asML:[445,1,1,""],toArray:[445,1,1,""],toSparse:[445,1,1,""]},"pyspark.mllib.linalg.DenseVector":{asML:[446,1,1,""],dot:[446,1,1,""],norm:[446,1,1,""],numNonzeros:[446,1,1,""],parse:[446,1,1,""],squared_distance:[446,1,1,""],toArray:[446,1,1,""],values:[446,2,1,""]},"pyspark.mllib.linalg.Matrices":{dense:[447,1,1,""],fromML:[447,1,1,""],sparse:[447,1,1,""]},"pyspark.mllib.linalg.Matrix":{asML:[448,1,1,""],toArray:[448,1,1,""]},"pyspark.mllib.linalg.QRDecomposition":{Q:[449,2,1,""],R:[449,2,1,""]},"pyspark.mllib.linalg.SparseMatrix":{asML:[450,1,1,""],toArray:[450,1,1,""],toDense:[450,1,1,""]},"pyspark.mllib.linalg.SparseVector":{asML:[451,1,1,""],dot:[451,1,1,""],norm:[451,1,1,""],numNonzeros:[451,1,1,""],parse:[451,1,1,""],squared_distance:[451,1,1,""],toArray:[451,1,1,""]},"pyspark.mllib.linalg.Vector":{asML:[452,1,1,""],toArray:[452,1,1,""]},"pyspark.mllib.linalg.Vectors":{dense:[453,1,1,""],fromML:[453,1,1,""],norm:[453,1,1,""],parse:[453,1,1,""],sparse:[453,1,1,""],squared_distance:[453,1,1,""],stringify:[453,1,1,""],zeros:[453,1,1,""]},"pyspark.mllib.linalg.distributed":{BlockMatrix:[454,0,1,""],CoordinateMatrix:[455,0,1,""],DistributedMatrix:[456,0,1,""],IndexedRow:[457,0,1,""],IndexedRowMatrix:[458,0,1,""],MatrixEntry:[459,0,1,""],RowMatrix:[460,0,1,""],SingularValueDecomposition:[461,0,1,""]},"pyspark.mllib.linalg.distributed.BlockMatrix":{add:[454,1,1,""],blocks:[454,2,1,""],cache:[454,1,1,""],colsPerBlock:[454,2,1,""],multiply:[454,1,1,""],numColBlocks:[454,2,1,""],numCols:[454,1,1,""],numRowBlocks:[454,2,1,""],numRows:[454,1,1,""],persist:[454,1,1,""],rowsPerBlock:[454,2,1,""],subtract:[454,1,1,""],toCoordinateMatrix:[454,1,1,""],toIndexedRowMatrix:[454,1,1,""],toLocalMatrix:[454,1,1,""],transpose:[454,1,1,""],validate:[454,1,1,""]},"pyspark.mllib.linalg.distributed.CoordinateMatrix":{entries:[455,2,1,""],numCols:[455,1,1,""],numRows:[455,1,1,""],toBlockMatrix:[455,1,1,""],toIndexedRowMatrix:[455,1,1,""],toRowMatrix:[455,1,1,""],transpose:[455,1,1,""]},"pyspark.mllib.linalg.distributed.DistributedMatrix":{numCols:[456,1,1,""],numRows:[456,1,1,""]},"pyspark.mllib.linalg.distributed.IndexedRowMatrix":{columnSimilarities:[458,1,1,""],computeGramianMatrix:[458,1,1,""],computeSVD:[458,1,1,""],multiply:[458,1,1,""],numCols:[458,1,1,""],numRows:[458,1,1,""],rows:[458,2,1,""],toBlockMatrix:[458,1,1,""],toCoordinateMatrix:[458,1,1,""],toRowMatrix:[458,1,1,""]},"pyspark.mllib.linalg.distributed.RowMatrix":{columnSimilarities:[460,1,1,""],computeColumnSummaryStatistics:[460,1,1,""],computeCovariance:[460,1,1,""],computeGramianMatrix:[460,1,1,""],computePrincipalComponents:[460,1,1,""],computeSVD:[460,1,1,""],multiply:[460,1,1,""],numCols:[460,1,1,""],numRows:[460,1,1,""],rows:[460,2,1,""],tallSkinnyQR:[460,1,1,""]},"pyspark.mllib.linalg.distributed.SingularValueDecomposition":{U:[461,2,1,""],V:[461,2,1,""],call:[461,1,1,""],s:[461,2,1,""]},"pyspark.mllib.random":{RandomRDDs:[462,0,1,""]},"pyspark.mllib.random.RandomRDDs":{exponentialRDD:[462,1,1,""],exponentialVectorRDD:[462,1,1,""],gammaRDD:[462,1,1,""],gammaVectorRDD:[462,1,1,""],logNormalRDD:[462,1,1,""],logNormalVectorRDD:[462,1,1,""],normalRDD:[462,1,1,""],normalVectorRDD:[462,1,1,""],poissonRDD:[462,1,1,""],poissonVectorRDD:[462,1,1,""],uniformRDD:[462,1,1,""],uniformVectorRDD:[462,1,1,""]},"pyspark.mllib.recommendation":{ALS:[463,0,1,""],MatrixFactorizationModel:[464,0,1,""],Rating:[465,0,1,""]},"pyspark.mllib.recommendation.ALS":{train:[463,1,1,""],trainImplicit:[463,1,1,""]},"pyspark.mllib.recommendation.MatrixFactorizationModel":{call:[464,1,1,""],load:[464,1,1,""],predict:[464,1,1,""],predictAll:[464,1,1,""],productFeatures:[464,1,1,""],rank:[464,2,1,""],recommendProducts:[464,1,1,""],recommendProductsForUsers:[464,1,1,""],recommendUsers:[464,1,1,""],recommendUsersForProducts:[464,1,1,""],save:[464,1,1,""],userFeatures:[464,1,1,""]},"pyspark.mllib.recommendation.Rating":{count:[465,1,1,""],index:[465,1,1,""],product:[465,2,1,""],rating:[465,2,1,""],user:[465,2,1,""]},"pyspark.mllib.regression":{IsotonicRegression:[466,0,1,""],IsotonicRegressionModel:[467,0,1,""],LabeledPoint:[468,0,1,""],LassoModel:[469,0,1,""],LassoWithSGD:[470,0,1,""],LinearModel:[471,0,1,""],LinearRegressionModel:[472,0,1,""],LinearRegressionWithSGD:[473,0,1,""],RidgeRegressionModel:[474,0,1,""],RidgeRegressionWithSGD:[475,0,1,""],StreamingLinearAlgorithm:[476,0,1,""],StreamingLinearRegressionWithSGD:[477,0,1,""]},"pyspark.mllib.regression.IsotonicRegression":{train:[466,1,1,""]},"pyspark.mllib.regression.IsotonicRegressionModel":{load:[467,1,1,""],predict:[467,1,1,""],save:[467,1,1,""]},"pyspark.mllib.regression.LassoModel":{intercept:[469,2,1,""],load:[469,1,1,""],predict:[469,1,1,""],save:[469,1,1,""],weights:[469,2,1,""]},"pyspark.mllib.regression.LassoWithSGD":{train:[470,1,1,""]},"pyspark.mllib.regression.LinearModel":{intercept:[471,2,1,""],weights:[471,2,1,""]},"pyspark.mllib.regression.LinearRegressionModel":{intercept:[472,2,1,""],load:[472,1,1,""],predict:[472,1,1,""],save:[472,1,1,""],weights:[472,2,1,""]},"pyspark.mllib.regression.LinearRegressionWithSGD":{train:[473,1,1,""]},"pyspark.mllib.regression.RidgeRegressionModel":{intercept:[474,2,1,""],load:[474,1,1,""],predict:[474,1,1,""],save:[474,1,1,""],weights:[474,2,1,""]},"pyspark.mllib.regression.RidgeRegressionWithSGD":{train:[475,1,1,""]},"pyspark.mllib.regression.StreamingLinearAlgorithm":{latestModel:[476,1,1,""],predictOn:[476,1,1,""],predictOnValues:[476,1,1,""]},"pyspark.mllib.regression.StreamingLinearRegressionWithSGD":{latestModel:[477,1,1,""],predictOn:[477,1,1,""],predictOnValues:[477,1,1,""],setInitialWeights:[477,1,1,""],trainOn:[477,1,1,""]},"pyspark.mllib.stat":{ChiSqTestResult:[478,0,1,""],KernelDensity:[479,0,1,""],KolmogorovSmirnovTestResult:[480,0,1,""],MultivariateGaussian:[481,0,1,""],MultivariateStatisticalSummary:[482,0,1,""],Statistics:[483,0,1,""]},"pyspark.mllib.stat.ChiSqTestResult":{call:[478,1,1,""],degreesOfFreedom:[478,2,1,""],method:[478,2,1,""],nullHypothesis:[478,2,1,""],pValue:[478,2,1,""],statistic:[478,2,1,""]},"pyspark.mllib.stat.KernelDensity":{estimate:[479,1,1,""],setBandwidth:[479,1,1,""],setSample:[479,1,1,""]},"pyspark.mllib.stat.KolmogorovSmirnovTestResult":{call:[480,1,1,""],degreesOfFreedom:[480,2,1,""],nullHypothesis:[480,2,1,""],pValue:[480,2,1,""],statistic:[480,2,1,""]},"pyspark.mllib.stat.MultivariateGaussian":{count:[481,1,1,""],index:[481,1,1,""],mu:[481,2,1,""],sigma:[481,2,1,""]},"pyspark.mllib.stat.MultivariateStatisticalSummary":{call:[482,1,1,""],count:[482,1,1,""],max:[482,1,1,""],mean:[482,1,1,""],min:[482,1,1,""],normL1:[482,1,1,""],normL2:[482,1,1,""],numNonzeros:[482,1,1,""],variance:[482,1,1,""]},"pyspark.mllib.stat.Statistics":{chiSqTest:[483,1,1,""],colStats:[483,1,1,""],corr:[483,1,1,""],kolmogorovSmirnovTest:[483,1,1,""]},"pyspark.mllib.tree":{DecisionTree:[484,0,1,""],DecisionTreeModel:[485,0,1,""],GradientBoostedTrees:[486,0,1,""],GradientBoostedTreesModel:[487,0,1,""],RandomForest:[488,0,1,""],RandomForestModel:[489,0,1,""]},"pyspark.mllib.tree.DecisionTree":{trainClassifier:[484,1,1,""],trainRegressor:[484,1,1,""]},"pyspark.mllib.tree.DecisionTreeModel":{call:[485,1,1,""],depth:[485,1,1,""],load:[485,1,1,""],numNodes:[485,1,1,""],predict:[485,1,1,""],save:[485,1,1,""],toDebugString:[485,1,1,""]},"pyspark.mllib.tree.GradientBoostedTrees":{trainClassifier:[486,1,1,""],trainRegressor:[486,1,1,""]},"pyspark.mllib.tree.GradientBoostedTreesModel":{call:[487,1,1,""],load:[487,1,1,""],numTrees:[487,1,1,""],predict:[487,1,1,""],save:[487,1,1,""],toDebugString:[487,1,1,""],totalNumNodes:[487,1,1,""]},"pyspark.mllib.tree.RandomForest":{supportedFeatureSubsetStrategies:[488,2,1,""],trainClassifier:[488,1,1,""],trainRegressor:[488,1,1,""]},"pyspark.mllib.tree.RandomForestModel":{call:[489,1,1,""],load:[489,1,1,""],numTrees:[489,1,1,""],predict:[489,1,1,""],save:[489,1,1,""],toDebugString:[489,1,1,""],totalNumNodes:[489,1,1,""]},"pyspark.mllib.util":{JavaLoader:[490,0,1,""],JavaSaveable:[491,0,1,""],LinearDataGenerator:[492,0,1,""],Loader:[493,0,1,""],MLUtils:[494,0,1,""],Saveable:[495,0,1,""]},"pyspark.mllib.util.JavaLoader":{load:[490,1,1,""]},"pyspark.mllib.util.JavaSaveable":{save:[491,1,1,""]},"pyspark.mllib.util.LinearDataGenerator":{generateLinearInput:[492,1,1,""],generateLinearRDD:[492,1,1,""]},"pyspark.mllib.util.Loader":{load:[493,1,1,""]},"pyspark.mllib.util.MLUtils":{appendBias:[494,1,1,""],convertMatrixColumnsFromML:[494,1,1,""],convertMatrixColumnsToML:[494,1,1,""],convertVectorColumnsFromML:[494,1,1,""],convertVectorColumnsToML:[494,1,1,""],loadLabeledPoints:[494,1,1,""],loadLibSVMFile:[494,1,1,""],loadVectors:[494,1,1,""],saveAsLibSVMFile:[494,1,1,""]},"pyspark.mllib.util.Saveable":{save:[495,1,1,""]},"pyspark.resource":{ExecutorResourceRequest:[496,0,1,""],ExecutorResourceRequests:[497,0,1,""],ResourceInformation:[498,0,1,""],ResourceProfile:[499,0,1,""],ResourceProfileBuilder:[500,0,1,""],TaskResourceRequest:[501,0,1,""],TaskResourceRequests:[502,0,1,""]},"pyspark.sql":{Column:[503,0,1,""],DataFrame:[535,0,1,""],DataFrameNaFunctions:[625,0,1,""],DataFrameStatFunctions:[640,0,1,""],GroupedData:[663,0,1,""],PandasCogroupedOps:[675,0,1,""],Row:[677,0,1,""],SparkSession:[679,0,1,""],Window:[700,0,1,""]},"pyspark.sql.Column":{alias:[504,1,1,""],asc:[505,1,1,""],asc_nulls_first:[506,1,1,""],asc_nulls_last:[507,1,1,""],astype:[508,1,1,""],between:[509,1,1,""],bitwiseAND:[510,1,1,""],bitwiseOR:[511,1,1,""],bitwiseXOR:[512,1,1,""],cast:[513,1,1,""],contains:[514,1,1,""],desc:[515,1,1,""],desc_nulls_first:[516,1,1,""],desc_nulls_last:[517,1,1,""],dropFields:[518,1,1,""],endswith:[519,1,1,""],eqNullSafe:[520,1,1,""],getField:[521,1,1,""],getItem:[522,1,1,""],isNotNull:[523,1,1,""],isNull:[524,1,1,""],isin:[525,1,1,""],like:[526,1,1,""],name:[527,1,1,""],otherwise:[528,1,1,""],over:[529,1,1,""],rlike:[530,1,1,""],startswith:[531,1,1,""],substr:[532,1,1,""],when:[533,1,1,""],withField:[534,1,1,""]},"pyspark.sql.DataFrame":{agg:[536,1,1,""],alias:[537,1,1,""],approxQuantile:[538,1,1,""],cache:[539,1,1,""],checkpoint:[540,1,1,""],coalesce:[541,1,1,""],colRegex:[542,1,1,""],collect:[543,1,1,""],columns:[544,1,1,""],corr:[545,1,1,""],count:[546,1,1,""],cov:[547,1,1,""],createGlobalTempView:[548,1,1,""],createOrReplaceGlobalTempView:[549,1,1,""],createOrReplaceTempView:[550,1,1,""],createTempView:[551,1,1,""],crossJoin:[552,1,1,""],crosstab:[553,1,1,""],cube:[554,1,1,""],describe:[555,1,1,""],distinct:[556,1,1,""],drop:[557,1,1,""],dropDuplicates:[558,1,1,""],drop_duplicates:[559,1,1,""],dropna:[560,1,1,""],dtypes:[561,1,1,""],exceptAll:[562,1,1,""],explain:[563,1,1,""],fillna:[564,1,1,""],filter:[565,1,1,""],first:[566,1,1,""],foreach:[567,1,1,""],foreachPartition:[568,1,1,""],freqItems:[569,1,1,""],groupBy:[570,1,1,""],head:[571,1,1,""],hint:[572,1,1,""],inputFiles:[573,1,1,""],intersect:[574,1,1,""],intersectAll:[575,1,1,""],isLocal:[576,1,1,""],isStreaming:[577,1,1,""],join:[578,1,1,""],limit:[579,1,1,""],localCheckpoint:[580,1,1,""],mapInPandas:[581,1,1,""],na:[582,1,1,""],orderBy:[583,1,1,""],persist:[584,1,1,""],printSchema:[585,1,1,""],randomSplit:[586,1,1,""],rdd:[587,1,1,""],registerTempTable:[588,1,1,""],repartition:[589,1,1,""],repartitionByRange:[590,1,1,""],replace:[591,1,1,""],rollup:[592,1,1,""],sameSemantics:[593,1,1,""],sample:[594,1,1,""],sampleBy:[595,1,1,""],schema:[596,1,1,""],select:[597,1,1,""],selectExpr:[598,1,1,""],semanticHash:[599,1,1,""],show:[600,1,1,""],sort:[601,1,1,""],sortWithinPartitions:[602,1,1,""],stat:[603,1,1,""],storageLevel:[604,1,1,""],subtract:[605,1,1,""],summary:[606,1,1,""],tail:[607,1,1,""],take:[608,1,1,""],toDF:[609,1,1,""],toJSON:[610,1,1,""],toLocalIterator:[611,1,1,""],toPandas:[612,1,1,""],transform:[613,1,1,""],union:[614,1,1,""],unionAll:[615,1,1,""],unionByName:[616,1,1,""],unpersist:[617,1,1,""],where:[618,1,1,""],withColumn:[619,1,1,""],withColumnRenamed:[620,1,1,""],withWatermark:[621,1,1,""],write:[622,1,1,""],writeStream:[623,1,1,""],writeTo:[624,1,1,""]},"pyspark.sql.DataFrameNaFunctions":{drop:[626,1,1,""],fill:[627,1,1,""],replace:[628,1,1,""]},"pyspark.sql.DataFrameReader":{csv:[629,1,1,""],format:[630,1,1,""],jdbc:[631,1,1,""],json:[632,1,1,""],load:[633,1,1,""],option:[634,1,1,""],options:[635,1,1,""],orc:[636,1,1,""],parquet:[637,1,1,""],schema:[638,1,1,""],table:[639,1,1,""]},"pyspark.sql.DataFrameStatFunctions":{approxQuantile:[641,1,1,""],corr:[642,1,1,""],cov:[643,1,1,""],crosstab:[644,1,1,""],freqItems:[645,1,1,""],sampleBy:[646,1,1,""]},"pyspark.sql.DataFrameWriter":{bucketBy:[647,1,1,""],csv:[648,1,1,""],format:[649,1,1,""],insertInto:[650,1,1,""],jdbc:[651,1,1,""],json:[652,1,1,""],mode:[653,1,1,""],option:[654,1,1,""],options:[655,1,1,""],orc:[656,1,1,""],parquet:[657,1,1,""],partitionBy:[658,1,1,""],save:[659,1,1,""],saveAsTable:[660,1,1,""],sortBy:[661,1,1,""],text:[662,1,1,""]},"pyspark.sql.GroupedData":{agg:[664,1,1,""],apply:[665,1,1,""],applyInPandas:[666,1,1,""],avg:[667,1,1,""],cogroup:[668,1,1,""],count:[669,1,1,""],max:[670,1,1,""],mean:[671,1,1,""],min:[672,1,1,""],pivot:[673,1,1,""],sum:[674,1,1,""]},"pyspark.sql.PandasCogroupedOps":{applyInPandas:[676,1,1,""]},"pyspark.sql.Row":{asDict:[678,1,1,""]},"pyspark.sql.SparkSession":{builder:[679,2,1,""],catalog:[685,1,1,""],conf:[686,1,1,""],createDataFrame:[687,1,1,""],getActiveSession:[688,1,1,""],newSession:[689,1,1,""],range:[690,1,1,""],read:[691,1,1,""],readStream:[692,1,1,""],sparkContext:[693,1,1,""],sql:[694,1,1,""],stop:[695,1,1,""],streams:[696,1,1,""],table:[697,1,1,""],udf:[698,1,1,""],version:[699,1,1,""]},"pyspark.sql.SparkSession.builder":{appName:[680,1,1,""],config:[681,1,1,""],enableHiveSupport:[682,1,1,""],getOrCreate:[683,1,1,""],master:[684,1,1,""]},"pyspark.sql.Window":{currentRow:[701,2,1,""],orderBy:[702,1,1,""],partitionBy:[703,1,1,""],rangeBetween:[704,1,1,""],rowsBetween:[705,1,1,""],unboundedFollowing:[706,2,1,""],unboundedPreceding:[707,2,1,""]},"pyspark.sql.WindowSpec":{orderBy:[708,1,1,""],partitionBy:[709,1,1,""],rangeBetween:[710,1,1,""],rowsBetween:[711,1,1,""]},"pyspark.sql.avro.functions":{from_avro:[712,3,1,""],to_avro:[713,3,1,""]},"pyspark.sql.conf":{RuntimeConfig:[714,0,1,""]},"pyspark.sql.functions":{abs:[715,3,1,""],acos:[716,3,1,""],acosh:[717,3,1,""],add_months:[718,3,1,""],aggregate:[719,3,1,""],approxCountDistinct:[720,3,1,""],approx_count_distinct:[721,3,1,""],array:[722,3,1,""],array_contains:[723,3,1,""],array_distinct:[724,3,1,""],array_except:[725,3,1,""],array_intersect:[726,3,1,""],array_join:[727,3,1,""],array_max:[728,3,1,""],array_min:[729,3,1,""],array_position:[730,3,1,""],array_remove:[731,3,1,""],array_repeat:[732,3,1,""],array_sort:[733,3,1,""],array_union:[734,3,1,""],arrays_overlap:[735,3,1,""],arrays_zip:[736,3,1,""],asc:[737,3,1,""],asc_nulls_first:[738,3,1,""],asc_nulls_last:[739,3,1,""],ascii:[740,3,1,""],asin:[741,3,1,""],asinh:[742,3,1,""],assert_true:[743,3,1,""],atan2:[745,3,1,""],atan:[744,3,1,""],atanh:[746,3,1,""],avg:[747,3,1,""],base64:[748,3,1,""],bin:[749,3,1,""],bitwiseNOT:[750,3,1,""],broadcast:[751,3,1,""],bround:[752,3,1,""],bucket:[753,3,1,""],cbrt:[754,3,1,""],ceil:[755,3,1,""],coalesce:[756,3,1,""],col:[757,3,1,""],collect_list:[758,3,1,""],collect_set:[759,3,1,""],column:[760,3,1,""],concat:[761,3,1,""],concat_ws:[762,3,1,""],conv:[763,3,1,""],corr:[764,3,1,""],cos:[765,3,1,""],cosh:[766,3,1,""],count:[767,3,1,""],countDistinct:[768,3,1,""],covar_pop:[769,3,1,""],covar_samp:[770,3,1,""],crc32:[771,3,1,""],create_map:[772,3,1,""],cume_dist:[773,3,1,""],current_date:[774,3,1,""],current_timestamp:[775,3,1,""],date_add:[776,3,1,""],date_format:[777,3,1,""],date_sub:[778,3,1,""],date_trunc:[779,3,1,""],datediff:[780,3,1,""],dayofmonth:[781,3,1,""],dayofweek:[782,3,1,""],dayofyear:[783,3,1,""],days:[784,3,1,""],decode:[785,3,1,""],degrees:[786,3,1,""],dense_rank:[787,3,1,""],desc:[788,3,1,""],desc_nulls_first:[789,3,1,""],desc_nulls_last:[790,3,1,""],element_at:[791,3,1,""],encode:[792,3,1,""],exists:[793,3,1,""],exp:[794,3,1,""],explode:[795,3,1,""],explode_outer:[796,3,1,""],expm1:[797,3,1,""],expr:[798,3,1,""],factorial:[799,3,1,""],filter:[800,3,1,""],first:[801,3,1,""],flatten:[802,3,1,""],floor:[803,3,1,""],forall:[804,3,1,""],format_number:[805,3,1,""],format_string:[806,3,1,""],from_csv:[807,3,1,""],from_json:[808,3,1,""],from_unixtime:[809,3,1,""],from_utc_timestamp:[810,3,1,""],get_json_object:[811,3,1,""],greatest:[812,3,1,""],grouping:[813,3,1,""],grouping_id:[814,3,1,""],hash:[815,3,1,""],hex:[816,3,1,""],hour:[817,3,1,""],hours:[818,3,1,""],hypot:[819,3,1,""],initcap:[820,3,1,""],input_file_name:[821,3,1,""],instr:[822,3,1,""],isnan:[823,3,1,""],isnull:[824,3,1,""],json_tuple:[825,3,1,""],kurtosis:[826,3,1,""],lag:[827,3,1,""],last:[828,3,1,""],last_day:[829,3,1,""],lead:[830,3,1,""],least:[831,3,1,""],length:[832,3,1,""],levenshtein:[833,3,1,""],lit:[834,3,1,""],locate:[835,3,1,""],log10:[837,3,1,""],log1p:[838,3,1,""],log2:[839,3,1,""],log:[836,3,1,""],lower:[840,3,1,""],lpad:[841,3,1,""],ltrim:[842,3,1,""],map_concat:[843,3,1,""],map_entries:[844,3,1,""],map_filter:[845,3,1,""],map_from_arrays:[846,3,1,""],map_from_entries:[847,3,1,""],map_keys:[848,3,1,""],map_values:[849,3,1,""],map_zip_with:[850,3,1,""],max:[851,3,1,""],md5:[852,3,1,""],mean:[853,3,1,""],min:[854,3,1,""],minute:[855,3,1,""],monotonically_increasing_id:[856,3,1,""],month:[857,3,1,""],months:[858,3,1,""],months_between:[859,3,1,""],nanvl:[860,3,1,""],next_day:[861,3,1,""],nth_value:[862,3,1,""],ntile:[863,3,1,""],overlay:[864,3,1,""],pandas_udf:[865,3,1,""],percent_rank:[866,3,1,""],percentile_approx:[867,3,1,""],posexplode:[868,3,1,""],posexplode_outer:[869,3,1,""],pow:[870,3,1,""],quarter:[871,3,1,""],radians:[872,3,1,""],raise_error:[873,3,1,""],rand:[874,3,1,""],randn:[875,3,1,""],rank:[876,3,1,""],regexp_extract:[877,3,1,""],regexp_replace:[878,3,1,""],repeat:[879,3,1,""],reverse:[880,3,1,""],rint:[881,3,1,""],round:[882,3,1,""],row_number:[883,3,1,""],rpad:[884,3,1,""],rtrim:[885,3,1,""],schema_of_csv:[886,3,1,""],schema_of_json:[887,3,1,""],second:[888,3,1,""],sequence:[889,3,1,""],sha1:[890,3,1,""],sha2:[891,3,1,""],shiftLeft:[892,3,1,""],shiftRight:[893,3,1,""],shiftRightUnsigned:[894,3,1,""],shuffle:[895,3,1,""],signum:[896,3,1,""],sin:[897,3,1,""],sinh:[898,3,1,""],size:[899,3,1,""],skewness:[900,3,1,""],slice:[901,3,1,""],sort_array:[902,3,1,""],soundex:[903,3,1,""],spark_partition_id:[904,3,1,""],split:[905,3,1,""],sqrt:[906,3,1,""],stddev:[907,3,1,""],stddev_pop:[908,3,1,""],stddev_samp:[909,3,1,""],struct:[910,3,1,""],substring:[911,3,1,""],substring_index:[912,3,1,""],sum:[913,3,1,""],sumDistinct:[914,3,1,""],tan:[915,3,1,""],tanh:[916,3,1,""],timestamp_seconds:[917,3,1,""],toDegrees:[918,3,1,""],toRadians:[919,3,1,""],to_csv:[920,3,1,""],to_date:[921,3,1,""],to_json:[922,3,1,""],to_timestamp:[923,3,1,""],to_utc_timestamp:[924,3,1,""],transform:[925,3,1,""],transform_keys:[926,3,1,""],transform_values:[927,3,1,""],translate:[928,3,1,""],trim:[929,3,1,""],trunc:[930,3,1,""],udf:[931,3,1,""],unbase64:[932,3,1,""],unhex:[933,3,1,""],unix_timestamp:[934,3,1,""],upper:[935,3,1,""],var_pop:[936,3,1,""],var_samp:[937,3,1,""],variance:[938,3,1,""],weekofyear:[939,3,1,""],when:[940,3,1,""],window:[941,3,1,""],xxhash64:[942,3,1,""],year:[943,3,1,""],years:[944,3,1,""],zip_with:[945,3,1,""]},"pyspark.sql.streaming":{DataStreamReader:[946,0,1,""],DataStreamWriter:[957,0,1,""],ForeachBatchFunction:[968,0,1,""],StreamingQuery:[969,0,1,""],StreamingQueryException:[982,4,1,""],StreamingQueryManager:[983,0,1,""]},"pyspark.sql.streaming.DataStreamReader":{csv:[947,1,1,""],format:[948,1,1,""],json:[949,1,1,""],load:[950,1,1,""],option:[951,1,1,""],options:[952,1,1,""],orc:[953,1,1,""],parquet:[954,1,1,""],schema:[955,1,1,""],text:[956,1,1,""]},"pyspark.sql.streaming.DataStreamWriter":{foreach:[958,1,1,""],foreachBatch:[959,1,1,""],format:[960,1,1,""],option:[961,1,1,""],options:[962,1,1,""],outputMode:[963,1,1,""],partitionBy:[964,1,1,""],queryName:[965,1,1,""],start:[966,1,1,""],trigger:[967,1,1,""]},"pyspark.sql.streaming.StreamingQuery":{awaitTermination:[970,1,1,""],exception:[971,1,1,""],explain:[972,1,1,""],id:[973,1,1,""],isActive:[974,1,1,""],lastProgress:[975,1,1,""],name:[976,1,1,""],processAllAvailable:[977,1,1,""],recentProgress:[978,1,1,""],runId:[979,1,1,""],status:[980,1,1,""],stop:[981,1,1,""]},"pyspark.sql.streaming.StreamingQueryManager":{active:[984,1,1,""],awaitAnyTermination:[985,1,1,""],get:[986,1,1,""],resetTerminated:[987,1,1,""]},"pyspark.sql.types":{ArrayType:[988,0,1,""],BinaryType:[989,0,1,""],BooleanType:[990,0,1,""],ByteType:[991,0,1,""],DataType:[992,0,1,""],DateType:[993,0,1,""],DecimalType:[994,0,1,""],DoubleType:[995,0,1,""],FloatType:[996,0,1,""],IntegerType:[997,0,1,""],LongType:[998,0,1,""],MapType:[999,0,1,""],NullType:[1000,0,1,""],ShortType:[1001,0,1,""],StringType:[1002,0,1,""],StructField:[1003,0,1,""],StructType:[1004,0,1,""],TimestampType:[1005,0,1,""]},"pyspark.sql.types.ArrayType":{fromInternal:[988,1,1,""],fromJson:[988,1,1,""],json:[988,1,1,""],jsonValue:[988,1,1,""],needConversion:[988,1,1,""],simpleString:[988,1,1,""],toInternal:[988,1,1,""],typeName:[988,1,1,""]},"pyspark.sql.types.BinaryType":{fromInternal:[989,1,1,""],json:[989,1,1,""],jsonValue:[989,1,1,""],needConversion:[989,1,1,""],simpleString:[989,1,1,""],toInternal:[989,1,1,""],typeName:[989,1,1,""]},"pyspark.sql.types.BooleanType":{fromInternal:[990,1,1,""],json:[990,1,1,""],jsonValue:[990,1,1,""],needConversion:[990,1,1,""],simpleString:[990,1,1,""],toInternal:[990,1,1,""],typeName:[990,1,1,""]},"pyspark.sql.types.ByteType":{fromInternal:[991,1,1,""],json:[991,1,1,""],jsonValue:[991,1,1,""],needConversion:[991,1,1,""],simpleString:[991,1,1,""],toInternal:[991,1,1,""],typeName:[991,1,1,""]},"pyspark.sql.types.DataType":{fromInternal:[992,1,1,""],json:[992,1,1,""],jsonValue:[992,1,1,""],needConversion:[992,1,1,""],simpleString:[992,1,1,""],toInternal:[992,1,1,""],typeName:[992,1,1,""]},"pyspark.sql.types.DateType":{EPOCH_ORDINAL:[993,2,1,""],fromInternal:[993,1,1,""],json:[993,1,1,""],jsonValue:[993,1,1,""],needConversion:[993,1,1,""],simpleString:[993,1,1,""],toInternal:[993,1,1,""],typeName:[993,1,1,""]},"pyspark.sql.types.DecimalType":{fromInternal:[994,1,1,""],json:[994,1,1,""],jsonValue:[994,1,1,""],needConversion:[994,1,1,""],simpleString:[994,1,1,""],toInternal:[994,1,1,""],typeName:[994,1,1,""]},"pyspark.sql.types.DoubleType":{fromInternal:[995,1,1,""],json:[995,1,1,""],jsonValue:[995,1,1,""],needConversion:[995,1,1,""],simpleString:[995,1,1,""],toInternal:[995,1,1,""],typeName:[995,1,1,""]},"pyspark.sql.types.FloatType":{fromInternal:[996,1,1,""],json:[996,1,1,""],jsonValue:[996,1,1,""],needConversion:[996,1,1,""],simpleString:[996,1,1,""],toInternal:[996,1,1,""],typeName:[996,1,1,""]},"pyspark.sql.types.IntegerType":{fromInternal:[997,1,1,""],json:[997,1,1,""],jsonValue:[997,1,1,""],needConversion:[997,1,1,""],simpleString:[997,1,1,""],toInternal:[997,1,1,""],typeName:[997,1,1,""]},"pyspark.sql.types.LongType":{fromInternal:[998,1,1,""],json:[998,1,1,""],jsonValue:[998,1,1,""],needConversion:[998,1,1,""],simpleString:[998,1,1,""],toInternal:[998,1,1,""],typeName:[998,1,1,""]},"pyspark.sql.types.MapType":{fromInternal:[999,1,1,""],fromJson:[999,1,1,""],json:[999,1,1,""],jsonValue:[999,1,1,""],needConversion:[999,1,1,""],simpleString:[999,1,1,""],toInternal:[999,1,1,""],typeName:[999,1,1,""]},"pyspark.sql.types.NullType":{fromInternal:[1000,1,1,""],json:[1000,1,1,""],jsonValue:[1000,1,1,""],needConversion:[1000,1,1,""],simpleString:[1000,1,1,""],toInternal:[1000,1,1,""],typeName:[1000,1,1,""]},"pyspark.sql.types.ShortType":{fromInternal:[1001,1,1,""],json:[1001,1,1,""],jsonValue:[1001,1,1,""],needConversion:[1001,1,1,""],simpleString:[1001,1,1,""],toInternal:[1001,1,1,""],typeName:[1001,1,1,""]},"pyspark.sql.types.StringType":{fromInternal:[1002,1,1,""],json:[1002,1,1,""],jsonValue:[1002,1,1,""],needConversion:[1002,1,1,""],simpleString:[1002,1,1,""],toInternal:[1002,1,1,""],typeName:[1002,1,1,""]},"pyspark.sql.types.StructField":{fromInternal:[1003,1,1,""],fromJson:[1003,1,1,""],json:[1003,1,1,""],jsonValue:[1003,1,1,""],needConversion:[1003,1,1,""],simpleString:[1003,1,1,""],toInternal:[1003,1,1,""],typeName:[1003,1,1,""]},"pyspark.sql.types.StructType":{add:[1004,1,1,""],fieldNames:[1004,1,1,""],fromInternal:[1004,1,1,""],fromJson:[1004,1,1,""],json:[1004,1,1,""],jsonValue:[1004,1,1,""],needConversion:[1004,1,1,""],simpleString:[1004,1,1,""],toInternal:[1004,1,1,""],typeName:[1004,1,1,""]},"pyspark.sql.types.TimestampType":{fromInternal:[1005,1,1,""],json:[1005,1,1,""],jsonValue:[1005,1,1,""],needConversion:[1005,1,1,""],simpleString:[1005,1,1,""],toInternal:[1005,1,1,""],typeName:[1005,1,1,""]},"pyspark.streaming":{DStream:[1006,0,1,""],StreamingContext:[1046,0,1,""]},"pyspark.streaming.DStream":{cache:[1007,1,1,""],checkpoint:[1008,1,1,""],cogroup:[1009,1,1,""],combineByKey:[1010,1,1,""],context:[1011,1,1,""],count:[1012,1,1,""],countByValue:[1013,1,1,""],countByValueAndWindow:[1014,1,1,""],countByWindow:[1015,1,1,""],filter:[1016,1,1,""],flatMap:[1017,1,1,""],flatMapValues:[1018,1,1,""],foreachRDD:[1019,1,1,""],fullOuterJoin:[1020,1,1,""],glom:[1021,1,1,""],groupByKey:[1022,1,1,""],groupByKeyAndWindow:[1023,1,1,""],join:[1024,1,1,""],leftOuterJoin:[1025,1,1,""],map:[1026,1,1,""],mapPartitions:[1027,1,1,""],mapPartitionsWithIndex:[1028,1,1,""],mapValues:[1029,1,1,""],partitionBy:[1030,1,1,""],persist:[1031,1,1,""],pprint:[1032,1,1,""],reduce:[1033,1,1,""],reduceByKey:[1034,1,1,""],reduceByKeyAndWindow:[1035,1,1,""],reduceByWindow:[1036,1,1,""],repartition:[1037,1,1,""],rightOuterJoin:[1038,1,1,""],saveAsTextFiles:[1039,1,1,""],slice:[1040,1,1,""],transform:[1041,1,1,""],transformWith:[1042,1,1,""],union:[1043,1,1,""],updateStateByKey:[1044,1,1,""],window:[1045,1,1,""]},"pyspark.streaming.StreamingContext":{addStreamingListener:[1047,1,1,""],awaitTermination:[1048,1,1,""],awaitTerminationOrTimeout:[1049,1,1,""],binaryRecordsStream:[1050,1,1,""],checkpoint:[1051,1,1,""],getActive:[1052,1,1,""],getActiveOrCreate:[1053,1,1,""],getOrCreate:[1054,1,1,""],queueStream:[1055,1,1,""],remember:[1056,1,1,""],socketTextStream:[1057,1,1,""],sparkContext:[1058,1,1,""],start:[1059,1,1,""],stop:[1060,1,1,""],textFileStream:[1061,1,1,""],transform:[1062,1,1,""],union:[1063,1,1,""]},"pyspark.streaming.kinesis.InitialPositionInStream":{LATEST:[1064,2,1,""],TRIM_HORIZON:[1065,2,1,""]},"pyspark.streaming.kinesis.KinesisUtils":{createStream:[1066,1,1,""]},pyspark:{Accumulator:[16,0,1,""],AccumulatorParam:[19,0,1,""],BarrierTaskContext:[22,0,1,""],BarrierTaskInfo:[33,0,1,""],Broadcast:[34,0,1,""],InheritableThread:[41,0,1,""],RDD:[42,0,1,""],RDDBarrier:[147,0,1,""],SparkConf:[150,0,1,""],SparkContext:[162,0,1,""],SparkFiles:[207,0,1,""],StorageLevel:[210,0,1,""],TaskContext:[219,0,1,""]}},objnames:{"0":["py","class","Python class"],"1":["py","method","Python method"],"2":["py","attribute","Python attribute"],"3":["py","function","Python function"],"4":["py","exception","Python exception"]},objtypes:{"0":"py:class","1":"py:method","2":"py:attribute","3":"py:function","4":"py:exception"},terms:{"005766663870645e":244,"00pm":1,"01t13":[629,632,634,635,636,637],"0string12000":7,"0string22000":7,"0string32000":7,"13t06":[810,924],"16be":[632,785,792,949],"16le":[785,792],"17th":443,"1a2s3a":928,"1e4":[553,644],"1e6":[553,644],"1st":323,"25th":323,"2nd":[245,263,369,381],"32le":[632,949],"3bc51062973c458d5a6f2d8d64a023246354ad7e064b1e4e009ec8a0699a3043":891,"3c01bdbb26f358bab27f267924aa2c9a03fcfdb8":890,"3rd":323,"425264676902229e":244,"491554426243495e":244,"56e":494,"75th":323,"902fbdd2b1df0c4f70b4a5d23525e932":852,"abstract":[8,42,227,228,231,233,234,242,243,249,250,253,254,256,257,264,265,278,280,422,1006],"boolean":[12,298,360,407,408,412,438,470,473,475,509,514,519,525,526,530,531,533,564,583,591,601,602,627,628,687,793,800,804,865,931,940,990],"break":0,"byte":[168,169,687,832,864,911,933,989,991,1050,1057],"case":[0,4,7,12,15,45,150,167,235,236,237,238,239,240,242,243,245,246,249,250,252,253,254,256,257,259,260,263,264,265,266,291,310,319,328,329,330,336,365,366,369,370,381,382,387,398,399,405,458,460,467,504,528,533,541,591,621,628,648,651,652,656,657,659,660,662,666,676,677,683,704,807,808,820,840,861,865,867,874,875,912,920,922,935,977,985,1075,1077],"char":600,"class":[0,16,19,22,33,34,41,42,116,118,120,121,147,150,162,181,182,183,184,190,207,210,219,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,535,557,625,640,663,675,677,679,700,714,793,807,946,957,958,968,969,983,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1046,1067,1075],"default":[6,12,14,15,46,102,106,115,116,117,118,119,120,121,137,138,150,152,162,164,173,174,181,182,183,184,187,190,193,204,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,384,388,389,390,392,393,394,395,396,397,398,399,403,405,406,407,408,409,412,413,414,416,418,420,421,422,424,430,433,436,437,438,439,441,443,460,462,463,466,470,473,475,477,479,483,484,486,488,494,539,560,563,569,571,578,583,584,589,590,594,600,601,602,617,626,629,632,633,634,635,636,637,645,648,651,652,654,655,656,657,659,660,662,678,683,686,687,690,700,721,795,796,801,827,828,830,865,867,868,869,905,921,923,931,934,941,947,949,950,951,952,953,954,956,961,962,966,972,994,1004,1007,1055,1066,1075],"enum":[713,865],"export":[6,399,1075,1077],"final":[66,422,454,455,458,621,719,810,912,924,958],"float":[0,15,16,58,111,164,281,282,283,284,285,286,287,290,291,302,309,319,336,339,346,357,360,383,385,406,407,408,409,411,412,413,414,416,418,420,424,425,436,441,443,453,455,458,459,460,462,463,470,471,473,475,477,483,484,486,492,501,520,538,564,569,572,591,594,613,627,628,629,632,641,645,687,721,745,823,860,865,906,949,995,996,1075,1077],"function":[0,1,5,8,12,13,15,23,25,26,43,44,48,54,64,65,66,67,68,69,76,77,91,92,93,94,95,96,99,101,106,107,109,124,132,138,148,149,162,170,181,182,183,184,187,190,221,234,236,238,243,245,246,250,254,257,258,265,289,290,298,299,308,309,332,337,341,343,360,369,370,371,372,377,378,379,380,429,430,467,483,486,518,528,529,533,534,535,536,537,555,562,567,568,569,570,575,578,581,583,595,601,603,606,613,614,615,616,621,625,629,632,640,645,646,660,664,665,666,673,676,682,685,700,704,705,947,949,958,959,968,1006,1017,1018,1019,1026,1029,1030,1035,1036,1041,1042,1044,1046,1053,1054,1062,1066,1067,1076,1077],"import":[1,7,19,34,66,67,105,106,107,119,121,150,162,165,193,239,240,244,245,246,247,251,258,259,261,263,266,267,271,274,277,281,282,289,292,296,297,300,306,308,310,313,314,316,318,323,326,332,334,337,339,340,341,343,345,346,347,363,365,366,368,369,370,371,375,377,381,382,383,384,385,386,387,389,391,392,406,410,411,417,419,421,423,430,436,439,462,464,467,469,472,474,483,484,486,488,494,505,506,507,510,511,512,515,516,517,518,520,521,523,524,528,529,533,534,536,537,558,578,581,583,595,601,613,621,646,664,665,666,676,679,681,687,704,705,712,713,725,726,734,736,795,808,843,844,847,848,849,865,868,917,920,922,931,958,1075,1077],"int":[7,16,54,104,111,137,138,162,165,169,181,182,183,184,187,190,280,290,309,346,349,357,360,362,383,406,407,408,412,413,414,415,416,417,418,419,420,421,422,424,425,433,434,437,440,441,443,453,454,455,457,458,459,460,462,463,468,470,473,475,477,478,480,484,486,488,492,494,532,541,560,561,564,571,572,586,589,590,591,594,595,600,613,626,627,628,629,631,632,633,636,637,638,639,646,647,664,676,687,690,704,705,710,711,805,807,808,815,827,830,835,862,863,865,886,901,905,931,947,949,950,955,994,997,1008,1014,1023,1032,1035,1036,1045,1046,1048,1049,1050,1056,1057,1066,1075],"long":[0,7,89,146,280,345,462,600,665,666,712,865,867,942,998,1056,1075],"new":[0,1,6,7,11,20,22,23,25,28,33,41,44,45,49,53,54,61,62,64,73,91,92,93,94,102,108,117,118,143,147,148,149,162,177,183,184,187,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,503,504,506,507,508,509,513,515,516,517,518,520,521,522,525,527,528,529,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,702,703,704,705,708,709,710,711,712,713,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,969,970,971,972,973,974,975,976,977,978,979,980,981,983,984,985,986,987,1004,1009,1010,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1033,1034,1035,1036,1037,1038,1041,1042,1043,1044,1045,1050,1053,1054,1061,1062,1075],"null":[7,12,179,245,263,298,302,312,328,329,330,336,337,338,339,343,345,369,373,374,381,383,385,449,478,480,483,506,507,516,517,520,523,524,538,554,555,560,564,590,591,592,606,616,626,627,628,629,632,641,648,652,712,713,723,727,730,733,735,738,739,743,756,789,790,796,801,807,808,811,812,813,814,822,824,828,831,846,862,869,902,934,945,947,949,976,988,999,1000,1003,1035],"public":[0,1067],"return":[1,7,12,19,20,23,26,28,40,43,44,45,47,49,50,51,52,54,56,57,58,59,60,61,62,63,64,65,66,72,73,75,76,79,81,82,83,84,85,87,90,91,92,93,94,95,98,100,101,103,104,107,108,111,112,125,127,128,130,133,135,136,139,141,144,148,149,152,161,165,168,170,177,181,182,183,184,187,189,190,199,200,202,203,206,221,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,353,354,355,356,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,402,403,404,405,406,410,411,413,414,415,417,419,421,423,424,425,427,428,429,430,431,433,435,436,437,438,439,440,442,445,446,447,448,450,451,452,453,454,458,460,461,462,464,465,467,476,477,478,480,481,483,484,486,488,492,493,494,504,505,506,507,514,515,516,517,519,526,528,529,530,531,532,533,537,538,540,541,542,543,544,546,552,553,556,557,558,560,561,562,566,571,572,573,574,575,576,577,580,581,582,583,587,589,590,591,593,594,595,596,597,598,599,601,602,603,605,607,608,609,610,611,612,613,614,615,616,619,620,622,623,626,628,629,631,632,633,636,637,639,641,644,646,664,665,666,676,678,683,685,686,687,688,689,690,691,692,693,694,696,697,698,712,716,717,718,719,721,723,725,726,728,729,730,733,734,735,736,737,738,739,741,742,743,744,745,746,747,748,749,756,757,758,759,760,764,765,766,767,768,769,770,771,773,774,775,776,777,778,779,780,786,787,788,789,790,791,793,795,796,800,801,804,805,806,807,808,810,811,812,813,814,815,822,823,824,826,827,828,829,830,831,835,836,839,843,844,845,847,848,849,850,851,852,853,854,856,859,860,861,862,863,865,866,867,868,869,870,872,876,877,879,880,881,883,890,891,897,898,899,900,901,902,903,908,909,911,912,913,914,915,916,924,925,926,927,930,931,932,934,936,937,940,942,945,947,949,950,953,954,956,958,970,971,973,975,976,978,979,980,984,985,986,1004,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1033,1034,1035,1036,1037,1038,1040,1041,1042,1043,1044,1045,1049,1052,1053,1055,1058,1066,1075,1077],"short":[7,634,635,654,655,687,810,865,924,931,951,952,961,962,1001],"static":[210,328,352,357,360,383,384,385,387,396,398,446,447,451,453,462,483,492,494,558,702,703,704,705,1066],"switch":[14,79],"throw":[7,234,251,252,291,314,315,319,320,321,329,330,336,337,338,339,389,390,454,495,548,551,577,629,632,648,651,652,653,656,657,659,660,743,873,920,922,947,949,970,985,986,1049],"true":[1,6,7,13,15,58,83,98,102,104,109,111,112,119,121,123,124,130,133,150,165,186,189,192,193,194,202,206,211,212,213,214,215,216,217,218,235,236,237,238,239,240,242,243,244,245,246,247,249,250,251,253,254,256,257,258,259,261,263,264,265,266,267,270,271,274,277,280,281,282,283,284,285,286,287,288,289,291,292,294,295,296,297,298,299,300,302,305,306,308,310,312,313,314,316,318,319,320,322,323,325,326,328,329,331,332,334,336,337,339,340,341,343,361,363,365,366,368,369,370,371,374,375,376,377,379,380,381,382,383,389,391,392,407,408,410,412,417,419,421,423,427,433,437,439,442,458,460,461,462,463,464,466,467,469,470,472,473,474,475,478,480,483,494,509,520,523,524,525,540,548,549,550,551,563,564,576,577,580,583,584,585,588,593,594,596,600,601,602,604,610,612,616,627,629,632,633,648,652,677,678,679,683,687,697,723,735,743,793,801,804,807,823,824,828,834,859,862,865,867,887,902,947,949,950,953,954,956,958,966,967,972,986,988,999,1003,1004,1049,1055,1057,1060,1066,1075],"try":[3,15,193,406,410,411,417,419,421,423,439,464,467,469,472,474,483,687,1077],"var":287,"while":[6,8,16,89,93,94,149,271,361,562,575,629,632,704,705,710,711,947,949,958,1006],ALS:[362,464],AND:[509,510,700],AWS:1066,Abs:307,Added:[35,140,202,206,383,504,538,563,589,595,616,641,646,687],And:[79,149,393],But:439,For:[0,1,4,6,7,11,15,45,50,66,70,79,88,110,150,164,206,251,252,259,261,270,271,277,278,279,280,291,294,295,298,302,305,308,310,314,357,361,363,371,377,378,379,380,383,384,385,389,392,409,422,434,436,439,453,458,460,483,496,538,558,564,591,624,627,628,629,631,632,633,638,641,651,666,676,681,704,705,710,711,721,827,830,863,865,941,947,949,950,955,958,985,994,1075,1077],Has:15,IDE:1,IDEs:[1,2],IDs:[239,240,245,246,263,266,280,365,366,369,370,381,382,420,810,856,924],IFS:6,Ids:[361,362],Its:[167,329,1075],LQS:880,NOT:[89,270,445,446,447,448,450,451,452,453,523,679],Not:[71,193,239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272,284,496,632,949,1075],OPS:927,One:[6,290,309,498],Res:421,STS:1066,Such:593,THEN:[528,533],TRs:466,That:[291,298,319,787,876,958,973,979],The:[0,1,6,7,15,24,29,30,31,33,41,43,44,45,55,58,66,73,79,81,89,116,118,119,120,135,145,148,149,162,165,166,169,170,181,182,183,184,190,191,193,202,205,206,220,223,224,225,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,387,388,389,390,392,393,398,399,405,406,407,408,409,412,413,414,417,418,419,420,422,425,428,430,433,434,437,439,441,443,454,455,457,458,459,460,463,464,470,473,475,477,478,480,483,484,486,488,493,494,495,496,498,501,538,539,545,547,548,549,550,551,553,564,569,578,581,584,586,588,589,590,591,593,611,616,619,621,627,628,629,632,634,635,636,637,641,642,643,644,645,654,655,659,662,664,666,673,676,677,679,687,699,704,705,710,711,712,719,730,733,758,759,761,787,791,801,810,814,822,828,832,835,856,859,865,867,874,875,876,891,895,905,911,924,928,931,941,947,949,951,952,953,954,956,958,959,961,962,966,978,994,1000,1004,1035,1051,1055,1061,1062,1066,1072,1075,1077],Then:[229,305],There:[0,1,5,7,340,664,673,973,1076,1077],These:[0,1,7,13,162,239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272,284,340,369,381,1075],Use:[22,35,53,162,268,290,292,309,330,349,408,413,439,470,473,475,476,477,483,496,501,555,588,720,865,918,919,946,957,985,1075],Used:[150,492],Useful:1,Uses:[795,796,868,869],Using:[5,121,185,467,569,629,632,636,637,645,865,947,949,953,954,956,1075,1076],With:[41,135,291,611],YES:4,__enter__:1,__getitem__:678,__init__:[0,1],__main__:[1,1077],__name__:[1,1077],__this__:325,__version__:1077,_bootstrap:1,_c0:[629,807,886],_c1:[629,807,886],_c2:807,_exec_req:499,_fitmultipleiter:[227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,361,363,366,368,370,371,375,377,382,389,392],_handle_fromlist:1,_java_resource_profil:499,_jconf:150,_jvm:[150,497,502],_pickl:1,_request:[497,502],_task_req:499,_type:0,a_i:309,a_map:[796,869],aaaac:877,ababab:879,abc:[227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,361,363,366,368,370,371,375,377,382,389,392,440,771,807,815,816,832,852,890,905,933,942],abcd123:761,abcd:[7,761,762,822,835,841,884,911],abl:[1,3,1075],abort:45,about:[3,26,30,219,221,224,270,278,279,361,387,388,394,496,498,555,569,606,645,987,1075],abov:[6,7,9,15,460,705,1075,1077],abs:[98,130,306,371,377,417,436,460,462,469,472,474,483,598],absenc:1066,absolut:[208,287,306,369,370,377,379,380,387,429,460,715],absqrow:460,acc:719,acceler:363,accept:[12,387,391,538,598,632,641,807,808,861,886,887,920,922,949,1004],access:[5,11,16,26,34,89,165,219,221,349,468,631,677,714,946,957,1004],accesskeyid:1066,accord:[109,292,309,323,332,425,430,810,825,902,921,923,924],accordingli:[558,865,1075],account:[234,629,947],accum_param:[16,164],accumul:[19,20,629,719,947,1067],accumulatorparam:[16,164],accuraci:[58,235,236,237,238,241,242,243,248,249,250,251,252,253,254,255,256,257,263,264,265,284,285,427,439,865,867],achiev:[361,538,641,958],acm:343,acquir:[143,193],across:[8,85,102,162,245,263,288,319,337,369,381,390,483,558,584,621,973,976,979,985],act:[8,229,361],action:[2,7,45,193,435,438,485,487,489,1067],activ:[6,26,162,172,221,258,295,330,351,355,407,408,412,446,451,470,473,475,688,696,965,968,973,974,976,983,986,1052,1053,1077],actual:[193,270,278,279,398,399,405,414,420,478,480,621,704,1075],adamw:[241,244,367,368],adapt:[259,361],add:[16,20,54,66,67,105,106,107,129,137,138,162,164,165,166,337,339,398,399,405,454,518,534,541,619,632,634,635,654,655,949,951,952,961,962,1004,1047,1077],add_on:[7,931],added:[67,165,166,207,208,209,290,309,314,337,454,492,616,1075],addfil:[207,208,209],addgrid:[389,391,392],adding:[0,11,328,361,518,619,1004,1035,1036],addinplac:19,addit:[0,7,45,54,67,131,165,166,291,318,319,320,321,329,330,337,338,379,380,483,558,632,647,661,865,949,977,1004,1075,1077],addition:[246,922,958,977],addpyfil:1077,address:[33,496,498],adel:[239,365],adjac:[375,466],adjust:[0,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,361,362,363,364,377,378,379,380,810,924,1075],advanc:418,advantag:1075,advis:[89,298,299],affect:[194,294,295,343,344,1075],affin:[280,422],aft:363,after:[1,3,4,6,23,25,39,102,239,240,245,246,263,266,294,295,302,320,321,329,330,341,342,361,365,366,369,370,381,382,389,392,424,499,507,517,584,629,632,634,635,636,637,704,705,710,711,718,739,758,759,776,787,790,801,828,830,835,876,925,958,985,1006,1008,1014,1023,1035,1036,1045,1046,1055,1077],after_second_quart:800,aftsr2:363,aftsr:363,aftsr_model:363,aftsr_path:363,aftsurvivalregress:364,aftsurvivalregressionmodel:363,again:[35,270,987],against:[0,7,261,262,320,383,396,454,483,599,629,687,947,1066,1075],age2:[504,619,620],age3:504,age:[504,509,513,514,519,525,526,528,529,530,531,533,535,536,537,543,544,549,550,552,554,555,557,558,560,561,563,564,565,566,570,571,572,578,579,581,583,585,589,590,591,592,596,597,598,600,601,602,606,607,608,610,611,612,619,620,626,627,628,630,632,633,664,667,669,670,671,672,674,677,678,687,688,712,721,722,749,758,759,768,772,813,814,836,874,875,910,920,922,931,940,1075],agecol:535,ages:[513,629],agg:[535,570,721,758,759,764,768,769,770,813,814,865,867,941,1075,1077],aggreg:[44,54,66,77,137,239,240,245,246,263,266,365,366,369,370,381,382,388,536,554,570,592,621,663,664,673,721,747,758,759,767,801,813,814,826,828,851,853,854,900,907,908,909,913,914,936,937,938,963,966,1075],aggregate_metr:387,aggregatebykei:77,aggregationdepth:[247,248,251,252,271,272,363,364,371,372,377,378],agnost:[6,810,924],aic:[373,374],aid:16,aka:[241,244,296,367,368,633],akaik:[373,374],alan:309,algo:277,algorithm:[58,239,240,241,244,245,246,247,248,251,252,255,258,261,263,266,267,270,271,272,274,275,277,278,279,280,299,302,303,319,323,324,343,345,361,363,364,365,366,367,368,369,370,371,372,375,377,378,381,382,389,392,407,408,412,414,416,418,422,424,428,439,441,442,443,466,470,473,475,484,486,488,538,540,569,580,641,645,942],ali:[532,600],alia:[78,289,308,341,343,346,347,465,481,508,513,518,527,532,558,559,564,565,570,595,597,618,621,627,632,646,665,667,671,712,713,718,719,721,722,727,728,729,732,733,735,736,743,749,752,761,762,763,764,768,769,770,771,772,776,777,778,779,780,781,782,783,793,795,799,800,802,804,805,806,807,808,809,810,811,812,815,817,820,822,823,824,829,831,832,833,834,835,836,839,841,843,844,845,846,847,848,849,850,852,855,856,857,859,860,861,864,867,871,877,878,879,880,882,884,886,887,888,889,890,891,892,893,894,895,901,902,903,904,905,907,910,911,912,917,920,921,922,923,924,925,926,927,928,930,931,934,938,939,940,941,942,943,945,949],alias:[504,545,547,553,560,564,569,591,626,627,628,634,635,642,643,644,645,654,655,810,924,951,952,961,962],alic:[505,506,507,509,515,516,517,519,523,524,525,526,528,529,530,531,533,537,543,552,554,555,557,558,560,564,565,566,570,571,578,579,583,589,590,591,592,597,600,601,602,606,608,609,610,611,612,619,620,626,627,628,664,677,678,687,688,712,772,813,814,874,875,910,920,922],align:600,all:[1,7,8,15,23,25,28,33,35,43,45,47,48,51,52,57,64,66,68,70,75,79,83,85,88,110,131,132,133,135,136,140,149,150,153,166,168,171,181,183,189,190,193,195,202,206,210,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,351,355,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,383,387,389,390,391,392,393,395,397,409,414,417,418,428,430,446,451,458,460,464,467,483,487,488,489,494,496,504,543,544,555,558,560,561,562,567,570,571,573,575,581,591,597,611,612,614,615,616,617,621,626,628,629,632,633,636,637,648,659,660,664,666,676,686,696,719,731,736,774,775,777,787,801,812,814,828,831,843,844,846,862,865,876,878,901,905,913,931,947,949,950,953,954,956,958,959,963,965,966,969,970,976,977,983,985,1004,1017,1035,1036,1040,1045,1055,1060,1067,1075,1077],all_foo:804,allclos:[246,266,370,382],alloc:[30,43,44,54,66,89,143,224,239,240,245,246,263,266,277,278,365,366,369,370,381,382,420,421,496],allow:[1,7,8,12,14,15,16,43,44,54,66,168,290,309,322,340,345,361,412,414,416,418,420,443,483,499,500,501,616,621,629,632,677,696,704,721,865,947,949,958,999,1046,1056,1075,1077],allowbackslashescapinganycharact:[632,949],allowcom:[632,949],allowloc:189,allowmissingcolumn:616,allownonnumericnumb:[632,949],allownumericleadingzero:[632,949],allowsinglequot:[632,949],allowunquotedcontrolchar:[632,949],allowunquotedfieldnam:[632,887,949],alltyp:679,almost:[418,1077],alon:0,along:89,alpha:[251,252,270,277,278,279,361,377,378,420,463],alphabet:[15,329,330,677],alphabetasc:[320,321,329,330],alphabetdesc:[320,321,329,330],alreadi:[158,234,337,398,399,405,486,494,495,548,551,629,648,651,652,653,656,657,659,660,947],als2:361,als:361,als_model:361,als_path:361,alsmodel:361,also:[0,1,6,7,8,9,12,16,20,41,65,95,106,107,150,168,210,259,268,291,302,308,310,319,320,322,336,338,359,379,380,390,409,428,454,463,466,470,473,475,538,553,589,614,615,634,635,641,644,654,655,664,677,678,687,808,810,865,924,951,952,961,962,973,1072,1075,1077],alter:[685,704],altern:[6,7,355,361,451,463,464,664,666,676,925],although:[204,865,1075],alwai:[210,291,418,460,648,865,1053,1075],amazonaw:1066,ambigu:[634,635,654,655,810,924,951,952,961,962],america:[634,635,654,655,809,810,917,924,934,951,952,961,962],among:965,amount:[270,278,279,377,378,492,496,501,621],an_arrai:[796,869],anaconda:6,analysi:[555,569,606,645],analysisexcept:[548,551,577],analyt:8,analyz:[8,563,972],anexponenti:[270,277,278,279],angl:[765,766,786,872,897,898,915,916],ani:[0,3,7,11,15,48,79,81,115,116,117,118,120,150,168,181,183,190,195,202,206,239,240,245,246,247,248,263,266,280,291,305,306,308,319,337,341,342,343,344,365,366,369,370,381,382,383,385,406,411,422,436,443,454,476,494,558,560,576,626,629,648,650,652,656,657,662,686,687,704,705,710,711,735,753,787,827,830,865,905,928,947,956,958,985,1004,1075],anint:795,annot:0,anoth:[1,7,47,81,139,144,233,290,309,345,443,454,460,510,511,512,552,562,574,575,578,581,591,605,614,615,616,628,666,668,676,677,763,1043,1050,1061,1075],anovatest:332,answer:[15,577],anteced:[343,344],anthoni:466,anti:578,antiton:[466,467],any_neg:793,anymor:15,apach:[0,3,6,7,8,115,116,117,118,120,121,181,182,183,184,190,340,629,632,634,635,636,637,712,713,947,949,953,954,956,976,1047,1076],api:[0,1,7,8,15,22,23,25,26,28,33,41,45,73,115,116,117,118,143,147,148,149,183,184,349,496,497,498,499,500,501,502,540,577,580,581,593,599,621,623,665,666,675,676,679,692,696,714,865,946,947,948,949,950,951,952,955,956,957,958,959,960,961,962,963,964,965,966,967,969,983,1076],app:[1,150,162,167,1077],appear:[277,294,295,300,301,341,342,343,344,345,421,434,439,443,507,516,517,739,789,790],append:[54,235,236,237,238,242,243,249,250,338,423,494,624,648,651,652,653,656,657,659,660,945,963,966,977],appendbia:494,appl:95,applebi:299,appli:[3,5,9,64,66,68,69,86,91,92,93,94,116,118,148,149,234,247,248,288,291,294,295,319,428,430,431,436,437,438,466,496,497,499,500,501,502,535,567,568,629,632,648,652,676,683,719,905,925,926,927,945,947,949,1009,1010,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1034,1035,1038,1041,1042,1044,1062,1075],applic:[1,7,8,150,156,167,193,205,292,371,372,430,548,549,607,647,680,699,712,713,926,927,1066,1077],application_1433865536131_34483:167,applyinpanda:[7,665,865,1075],appnam:[150,162,679],approach:[7,227,228,231,232,233,234,283,359,361,460,466],approx_count_distinct:720,approxim:[57,58,98,130,290,302,303,309,319,323,324,361,463,538,606,641,721,786,867,872],approxnearestneighbor:[289,290,308,309],approxquantil:[302,319],approxsimilarityjoin:[289,290,308,309],arbitrari:[67,181,182,183,184,190,591,606,628,666,676,712,958,1075],architectur:460,archiv:1077,area:[235,236,237,238,242,243,249,250,281,426,634,635,654,655,810,924,951,952,961,962],areaunderpr:[281,426],areaunderroc:[235,236,237,238,242,243,249,250,281,426],arg1:836,arg2:836,arg:[1,41,193,355,357,391,451,453],argmax:266,argument:[0,7,15,35,44,54,140,187,251,271,312,322,331,383,483,504,525,563,589,616,631,651,666,676,677,690,730,777,785,792,800,806,822,836,839,865,870,881,925,931,1041,1042],arithmet:[351,446],ariti:[484,486,488],arn:1066,arnoldi:[458,460],around:[492,905],arr:[722,761],arrai:[15,51,131,132,133,136,168,189,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,266,267,268,272,274,275,288,291,295,304,312,314,315,319,322,328,330,340,342,344,346,347,349,350,351,355,357,361,362,363,364,383,386,406,410,411,415,417,419,421,425,427,440,445,446,451,453,460,464,467,468,469,472,474,479,481,483,484,498,571,632,719,723,724,725,726,728,729,730,731,732,733,734,735,736,761,791,793,795,796,800,802,804,844,846,847,848,849,867,868,869,880,895,899,901,902,905,911,922,925,945,949,978,988,989],arrayoflabel:330,arraytyp:[345,347,808,865,922,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1075],arriv:[577,621,969,977],arrow:[6,13,14,15,581,612,687,865,1076],arrow_pre_0_15_ipc_format:1075,arrowsafetypeconvers:15,art:58,articl:289,asc:[329,330,583,601,902],ascend:[109,123,124,132,235,236,237,238,242,243,249,250,253,254,256,257,264,265,292,293,427,494,505,506,507,583,590,601,602,733,737,738,739,902],ascii:[632,785,792,949],ask:573,asml:[445,446,448,450,451,452],asnondeterminist:931,asof:1075,asof_join:[7,676,1075],assembl:[336,339],assert_almost_equ:421,assert_equ:[417,421],assertionerror:[351,355,446,451],assign:[7,24,102,122,193,220,268,272,275,280,329,330,423,425,584,665,666,683,1075],assignclust:280,associ:[16,66,67,105,106,107,116,118,193,271,343,344,376,391,425,467,499,500,965,984,985,1011,1035,1036,1058,1060],associationrul:[343,344],assum:[124,144,169,280,396,413,422,477,478,480,590,621,959,1066],assumpt:856,asymptot:[270,277,278,279],atom:687,attach:359,attempt:[24,32,190,220,226,361,619],attribut:[16,33,34,41,42,162,210,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,351,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,389,390,392,393,394,396,398,399,400,403,405,406,411,415,417,419,423,425,426,427,428,429,438,446,449,454,455,458,460,461,464,465,468,469,471,472,474,478,480,481,488,496,497,498,499,500,501,502,504,535,593,599,677,679,700,969,983,993,1046,1072],augment:[407,408,412,470,473,475],austin:299,auto:[245,246,251,252,263,266,369,370,377,378,381,382,463,488],autobatchedseri:42,automat:[6,7,16,162,181,182,183,184,190,245,246,263,266,337,369,370,381,382,629,632,638,681,714,947,949,955,1003,1075,1077],avail:[1,6,7,58,168,181,183,190,202,206,379,380,389,392,466,496,563,570,606,612,664,977,1075,1077],averag:[77,235,236,237,238,242,243,245,249,250,253,254,256,257,263,264,265,369,381,390,427,428,667,671,747,853],avg:[7,535,570,664,671],avgmetr:[389,390],avoid:[0,7,43,44,54,66,108,192,193,194,384,541,558,619,629,947,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1075],avro:7,avrodf:712,avroschema:712,awaitanytermin:987,awaittermin:1046,awar:[664,666,676],awsaccesskeyid:1066,awssecretkei:1066,axi:745,b_i:309,back:[7,304,384,446,451,453,456,633,950,1075],back_to_delimit:[629,947],background:969,backslash:[632,949],backtick:11,backward:[555,569,606,645],bad:168,bag:420,bahmani:274,banana:[7,95],bandwidth:479,bar:[7,121,298,520,796,804,845,869,926,945],bar_2:945,barrier:[22,23,26,28,33,147,148,149],barriertaskcontext:45,barriertaskinfo:28,base64:932,base:[58,116,118,145,162,246,258,261,262,267,271,283,304,322,332,337,338,361,363,391,394,400,413,414,416,418,420,466,476,477,488,494,505,506,507,514,515,516,517,519,526,530,531,542,595,629,634,635,646,647,654,655,683,704,705,730,737,738,739,757,760,763,788,789,790,791,800,810,811,822,835,836,837,839,850,911,924,925,951,952,961,962,967,992,1067,1075],baseon:391,baserel:573,basi:1075,basic:[5,7,42,396,555,632,949,1006],basicprofil:162,batch:[119,162,244,270,277,278,279,368,413,424,425,476,477,558,581,629,637,865,958,959,967,1014,1023,1035,1036,1045,1046,1051,1055],batch_df:959,batch_id:959,batchdur:1046,batchid:959,batchsiz:[119,162,181,182,183,184,190],bay:[259,409,410],baz:845,bce:281,bce_path:281,bcp:[629,632,947,949],bdf:251,becaus:[1,3,6,7,9,280,314,376,422,494,496,634,635,654,655,673,704,758,759,801,810,828,856,904,924,951,952,958,961,962,1077],becom:[483,662],been:[3,6,13,24,35,48,171,177,193,220,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,493,621,958,977,1060,1077],beequal:[251,252],befor:[0,48,106,107,135,162,196,245,246,247,248,251,252,322,336,345,361,369,370,377,378,384,407,408,412,413,424,430,437,438,443,458,460,470,473,475,477,506,516,518,538,611,621,629,632,634,635,636,637,641,704,705,710,711,738,778,789,827,912,945,1049,1075],begin:[629,902,947,1040,1066],behav:[66,865,1075,1077],behavior:[12,15,290,298,309,329,337,629,632,634,635,636,637,648,651,652,653,656,657,659,660,712,947,949,953,954,956],behind:621,being:[143,193,315,454,455,458,629,648,865,931,947,958,1066],belong:[31,225,415,419,425,538,641,829],below:[0,1,3,4,6,7,15,292,332,371,430,705,773,865,1075,1077],benefici:1075,benjamini:[292,332,430],bernoulli:[259,260,409],best:[389,392,573,1075],bestmodel:[390,393],beta:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,270,277,278,279,284,420,427],better:[77,270,278,279,867],between:[0,1,6,44,79,241,244,268,270,277,278,279,282,290,309,323,337,340,357,361,367,368,371,372,385,392,393,420,453,458,460,467,483,486,499,500,578,591,616,628,678,700,787,859,865,867,876,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1009,1020,1024,1025,1038,1040,1075],beyond:[905,998],bfg:[255,258,377,378,380,407],bia:[113,114,407,408,412,470,473,475,492,494],bias:[365,366],big:619,bigint:[7,630,632,633,636,679,771,887],billion:856,bin:[0,6,239,240,245,246,263,266,281,319,365,366,369,370,381,382,484,486,488,1077],binari:[105,168,169,235,236,240,246,247,248,251,252,259,261,262,266,281,294,295,298,299,308,314,338,349,406,407,408,411,426,428,433,488,712,713,719,748,749,761,771,785,792,800,832,845,911,925,926,927,932,945,989,1050,1075],binarizer2:288,binarizerpath:288,binaryclassificationevalu:[389,392],binaryfil:7,binaryrandomforestclassif:[237,238],binarysearch:467,binarytyp:816,binomi:[251,252,371,372,373,374],bisect:[267,269,414,415],bisectingkmean:[268,415],bisectingkmeansmodel:267,bit:[270,277,278,279,357,453,856,891,942,972,997,998,1001],bitwis:[510,511,512,750],bkm2:267,bkm:267,bkm_model:267,bkm_path:267,black:7,blei03a:421,blei:[277,421],block:[23,25,35,39,89,140,247,248,251,252,255,258,361,362,363,364,377,378,454,455,458,463,617,977],blockcolindex:454,blockmatrix:[455,458],blockrowindex:454,blocks1:454,blocks2:454,blocks3:454,blocksiz:[255,258,361,362],blog:1075,blor:251,blormodel:251,blue:7,bob:[509,514,525,528,529,532,533,537,543,552,554,555,557,564,565,570,572,578,583,589,590,591,592,597,600,601,602,606,607,608,609,611,612,619,620,627,628,664,772,813,814,874,875,910,922],bohman:309,bool:[35,39,103,111,135,150,267,274,298,383,407,408,412,437,458,460,463,466,470,473,475,540,563,564,580,583,591,594,600,601,602,611,627,628,629,632,636,637,648,652,678,687,862,902,947,949,953,954,956,967,972,988,999,1003,1004,1055,1060],booleantyp:565,boost:[245,246,369,370,486,487],bootstrap:[263,266,381,382,488],both:[1,6,8,14,15,44,54,89,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,563,574,575,578,593,616,631,678,681,704,705,710,711,719,735,859,860,929,1040,1075,1077],bottom:[267,414],bound:[251,252,270,278,279,292,293,310,311,319,332,333,460,538,641,704,705],boundari:[375,376,467,704,705,710,711],box:[7,162],branch:[23,25],breiman:[239,365],broad:0,broadcast:[162,343,572,1067],brotli:657,brought:1075,brp2:289,brp:289,brppath:289,brute:460,bskm:415,bucket:[79,289,290,319,320,321,329,330,337,338,647,661,941],bucketbi:661,bucketed2:291,bucketed_t:647,bucketedrandomprojectionlsh:290,bucketedrandomprojectionlshmodel:289,bucketizer2:291,bucketizerpath:291,bucketlength:[289,290],buckets1:291,buckets2:291,bug:0,build:[0,3,4,6,204,263,266,337,381,382,389,391,392,437,499,500],builder:[1,7,15,387,388,391,500,624,679,688,1072,1077],built:[1,6,8,187,664,712,713,1077],bypass:416,bytearrai:[712,713,933],bytebuff:169,bytetyp:687,bzip2:[648,652,662],c_t:425,cach:[39,89,105,131,239,240,245,246,263,266,270,277,278,279,290,309,361,365,366,369,370,381,382,384,454,580,593,604,679,689],cachedexecutoridletimeout:89,cachenodeid:[239,240,245,246,263,266,365,366,369,370,381,382],calcul:[143,235,236,237,238,239,240,242,243,245,246,249,250,263,266,270,278,279,289,299,310,323,324,351,355,365,366,369,370,381,382,420,435,446,451,454,483,484,488,510,511,512,538,545,547,569,599,641,642,643,645,771,815,852,865,942,1035,1075],calculate_with_st:[865,1075],calibr:[239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272,284],call:[1,7,8,16,23,25,26,39,48,63,105,150,162,187,190,193,221,227,229,232,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,351,355,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,384,389,392,398,399,405,407,415,417,421,423,424,426,427,428,429,431,435,438,440,442,444,446,451,461,464,478,480,482,485,487,489,541,548,551,619,664,687,774,775,865,931,941,958,959,968,970,985,1053,1075,1077],caller:673,came:[787,876],camelcas:0,can:[0,1,3,4,6,7,8,9,14,15,16,20,26,42,43,44,54,79,102,105,108,111,150,162,164,165,166,181,183,187,192,193,194,219,221,239,240,241,245,246,247,248,252,255,259,260,263,266,268,270,274,275,277,278,279,280,281,288,291,308,319,322,323,328,332,336,337,338,340,342,357,361,365,366,369,370,381,382,385,387,389,392,399,403,405,407,409,413,415,418,419,421,422,424,425,433,435,438,439,453,477,486,488,490,493,496,503,535,538,540,541,554,558,570,576,580,581,584,589,590,591,592,593,607,616,619,621,628,629,632,634,635,638,641,648,652,654,655,656,657,662,664,666,668,676,677,679,681,686,687,691,692,704,712,719,753,777,784,793,800,804,806,810,818,845,850,858,865,905,924,925,926,927,931,941,944,945,947,949,951,952,955,958,959,960,961,962,965,967,968,973,976,987,988,994,999,1003,1004,1006,1035,1041,1042,1046,1053,1066,1075,1077],cancel:[171,172,193],canceljobgroup:193,candid:[0,343],cannot:[35,339,361,435,438,458,460,483,485,487,489,499,664,1000],capabl:8,captur:[125,1077],cardin:[58,483],care:[270,277,278,279,437],carri:[33,338,413,476,477],carrot:7,cartesian:[112,552,745],casesensit:[328,629,947],cast:[329,508,591,613,628,679,810,921,923,924,941],cast_all_to_int:613,cat:103,catalog:[548,549,550,551,588,624,753,784,818,858,944],catalyst:712,categor:[239,240,245,246,263,266,292,298,302,304,314,315,319,332,333,337,338,365,366,369,370,381,382,383,430,483,484,486,488,1075],categori:[235,236,237,238,239,240,242,243,245,246,249,250,253,254,256,257,263,264,265,266,304,305,314,315,319,320,321,337,338,365,366,369,370,381,382,427,483,484,486,488,704,705],categoricalcol:298,categoricalfeaturesinfo:[484,486,488],categorymap:[337,338],categorys:[314,315],caus:[7,15,89,168,239,240,245,246,263,266,270,277,278,279,337,361,365,366,369,370,381,382,389,392,454,619,865,958,982],caution:35,cd9fb1e148ccd8442e5aa74904cc73bf6fb54d1d54d333bd596aa9bb4bb4e961:891,cdf:[483,756],cdot:[290,309],ce_path:282,ceil:[538,641,666],cell:600,censor:[363,364],censorcol:[363,364],center:[267,268,269,273,274,275,276,306,323,324,326,327,415,418,419,420,424,425,437,438,492],centroid:[269,276,424,425],certain:[7,143,270,337,483,494,558,664,666,676],chain:[150,613],chang:[2,3,6,12,35,65,67,95,140,245,246,270,271,278,279,290,309,312,322,331,343,369,370,379,380,383,416,499,500,504,538,539,563,584,589,595,616,617,629,632,634,635,636,637,641,646,677,687,808,810,887,905,924,947,949,953,954,956,1018,1029,1055,1075],channel:1075,charact:[0,322,629,632,648,740,785,792,832,852,928,933,947,949],character:[371,372,1006],characterist:[8,235,236,237,238,242,243,249,250,426,865,1075],charset:[648,652,785,792],chartoescapequoteescap:[629,648,947],cheaper:460,check:[0,2,103,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,396,629,683,723,771,791,865,947,985],checkcod:103,checkpoint:[71,82,84,89,177,191,239,240,245,246,263,266,270,277,278,279,361,365,366,369,370,381,382,420,580,967,973,979,1053,1054,1066],checkpointinterv:[239,240,245,246,263,266,270,277,278,279,361,365,366,369,370,381,382,420,1066],checkpointloc:966,checkpointpath:[1053,1054],chi2:332,chi:[292,332,373,374,383,430,431,478,483],child:[239,240,245,246,263,266,365,366,369,370,381,382,484],chisqresult:383,chisqselector:293,chisqselectormodel:292,chisqselectorpath:292,chisqtest:483,chisqtestresult:483,chisquar:430,choic:337,choos:[1,6,162,181,182,183,184,190,245,246,247,248,251,252,263,266,274,275,292,319,332,337,363,364,369,370,377,378,381,382,430,488],chosen:[6,111,309,319],chunk:[341,342],circuit:[865,931],citi:[634,635,654,655,810,924,951,952,961,962],claim:541,classif:[231,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,281,284,285,369,370,381,382,389,391,392,406,407,408,409,410,411,412,413,426,427,484,485,486,488,1067],classifi:[235,236,237,238,242,243,247,248,249,250,253,254,256,257,258,259,261,262,264,265,410,427,484,486,488],classmethod:[26,180,196,207,208,209,221,229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,395,402,406,407,408,409,410,411,412,414,416,417,418,419,420,421,422,423,425,440,441,442,443,463,464,466,467,469,470,472,473,474,475,484,485,486,487,488,489,490,493,688,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1052,1053,1054],classnam:[115,116,117,118,120,121,181,182,183,184,190],classof:414,claus:631,clean:[4,270,958],clear:[193,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,406,411,985],clearthreshold:[406,411],click:[1,3,4],client:[6,1066],clip:284,cloglog:[371,372],clone:[3,150],close:[41,79,119,121,186,282,494,538,629,641,947,958],closest:[290,309,342,425,881],cloudwatch:1066,cls:396,club:713,cluster:[1,6,16,85,143,162,170,191,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,414,415,416,417,418,419,420,421,422,423,424,425,496,631,651,684,973,1046,1067,1075,1077],clustercent:[267,268,274,275,415,419,425],clusterdata_1:417,clusterdata_2:417,clusteringevalu:268,clusters:[267,269,271,273,274,276],clusterweight:425,cmd:1,cmu:[422,466],cnb:259,coalesc:[75,108],code:[1,2,3,23,25,299,341,342,439,563,599,815,942,1075,1077],codebas:0,codec:[116,120,121,648,652,656,657,662],codegen:563,coeffici:[241,244,247,248,251,252,259,261,363,364,367,368,371,372,374,377,378,379,380,384,387,396,429,471,545,642,764],coefficientmatrix:[251,252],coefficientstandarderror:[374,379,380],cogroup:[7,78,86,675,676,1075],cohen:[280,422],col0:[593,599,616,629,632,633,638,947,949,950,955],col1:[542,545,547,553,593,599,616,629,632,633,638,642,643,644,725,726,734,745,764,769,770,819,846,850,856,860,865,870,947,949,950,955,1075],col1_:[553,644],col2:[542,545,547,553,616,642,643,644,725,726,734,745,764,769,770,819,846,850,860,865,870,1075],col3:616,col:[0,289,298,308,314,346,347,387,454,455,456,458,460,494,518,525,532,534,537,538,554,555,557,569,570,583,589,590,592,595,597,601,602,609,613,619,624,641,645,646,647,658,661,667,670,671,672,674,702,703,708,709,715,716,717,719,720,721,722,723,724,727,728,729,730,731,732,733,736,737,738,739,740,741,742,743,744,746,747,748,749,750,752,753,754,755,756,758,759,760,761,762,763,765,766,767,768,771,772,781,782,783,784,785,786,788,789,790,791,792,793,794,795,796,797,799,800,801,802,803,804,805,806,807,808,811,812,813,814,815,816,817,818,820,823,824,825,826,827,828,830,831,832,834,837,838,839,840,841,842,843,844,845,847,848,849,851,852,853,854,855,857,858,862,865,867,868,869,871,872,879,880,881,882,884,885,888,890,891,892,893,894,895,896,897,898,899,900,902,903,906,907,908,909,910,913,914,915,916,917,918,919,920,921,922,923,925,926,927,929,932,933,935,936,937,938,939,942,943,944,964,1075],col_nam:613,coldstartstrategi:[361,362],colin:309,collabor:361,collect:[1,7,16,34,41,42,47,49,50,53,54,61,62,64,65,66,67,70,75,76,77,78,81,85,86,87,88,91,92,95,101,103,104,106,108,109,110,112,119,123,124,127,128,139,141,144,145,146,162,165,185,186,187,193,202,204,206,227,229,232,240,244,246,247,251,258,259,261,266,267,270,271,274,277,278,279,289,291,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,346,347,361,363,366,368,370,371,375,377,382,383,384,389,392,406,410,411,417,421,423,432,434,436,437,440,442,444,454,458,460,462,464,467,469,472,474,484,486,488,494,504,505,506,507,510,511,512,513,514,515,516,517,519,523,524,525,526,530,531,532,535,536,537,548,549,550,551,552,557,565,570,576,577,578,579,583,588,597,598,601,609,619,620,636,637,664,667,669,670,671,672,673,674,679,687,688,690,694,697,712,713,718,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,743,749,752,758,759,761,762,763,764,768,769,770,771,772,776,777,778,779,780,781,782,783,791,795,798,799,802,805,806,807,808,809,810,811,812,815,816,817,820,822,823,824,825,829,831,832,833,835,836,839,841,844,847,848,849,852,855,856,857,859,860,861,868,871,874,875,877,878,879,880,882,884,886,887,888,889,890,891,892,893,894,895,899,901,902,903,904,905,910,911,912,920,921,922,923,924,928,930,933,934,939,940,941,942,943,953,954,959,1056,1075,1077],collectsubmodel:[389,392],colnam:[503,542,619],color:7,colptr:[352,354,447,450],colsperblock:[454,455,458],colstat:[460,483],column:[7,11,231,232,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,357,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,383,384,385,387,388,389,390,427,432,437,438,445,453,454,455,458,459,460,461,468,483,494,535,538,542,545,547,553,554,555,557,558,560,561,562,564,565,569,570,575,578,581,583,589,590,591,592,595,597,600,601,602,606,609,613,614,615,616,619,620,621,626,627,628,629,631,632,641,642,643,644,645,646,647,648,656,657,658,659,660,661,662,664,666,667,670,671,672,673,674,676,687,690,708,709,712,713,716,717,719,721,722,723,724,725,726,727,728,729,731,732,733,734,736,737,738,739,740,741,742,743,744,745,746,748,749,753,756,757,761,762,763,764,765,766,768,769,770,771,772,774,775,779,786,788,789,790,791,793,795,796,798,800,802,804,805,806,807,808,810,811,812,813,814,815,816,821,822,823,824,825,827,830,831,834,835,841,843,844,845,846,847,848,849,850,856,860,861,862,865,867,868,869,872,874,875,877,879,880,884,886,887,895,897,898,899,901,902,904,905,910,915,916,920,921,922,923,924,925,926,927,929,930,932,940,941,942,945,947,949,956,964,966,1067,1075],column_nam:298,columnar:1075,columnnameofcorruptrecord:[629,632,947,949],columnprun:629,columnschema:349,columnsimilar:[458,460],com:[3,439,1066],combfunc:44,combin:[0,7,43,44,54,106,107,332,391,581,647,666,676,753,784,818,858,865,944,1075],combinator:309,combop:[43,137],come:[15,314,385,787,876],command:[0,1,3,6,103,1075,1077],comment:[629,632,947,949],commit:[958,977],common:[7,310,360,384,735,810,924,1075],commonli:[210,270,277,278,279,420],commun:[0,1,6,8,361],commut:[16,66,105,106,107,1035,1036],compact:7,companion:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382],compar:[96,99,385,483,593],comparison:[267,328,414,593],compat:[0,21,251,252,357,453,555,569,606,645,712,761,865,1050,1051,1061],competit:[787,876],compil:230,complement:259,complet:[3,35,39,302,345,425,443,963,966,1060],complex:[0,396],compon:[6,9,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,417,460,745],compos:573,composit:271,composition:439,compress:[116,120,121,648,652,656,657,662],compressioncodecclass:[116,120,121],compris:462,comput:[1,7,8,29,79,89,97,102,113,114,126,142,223,235,236,237,238,242,243,245,249,250,259,268,270,281,282,283,284,285,300,301,302,323,326,343,351,361,369,383,384,387,406,411,415,419,425,426,428,432,434,435,437,439,441,446,449,454,455,456,458,460,463,466,469,471,472,474,483,510,511,512,538,541,553,555,584,606,621,641,644,664,667,670,671,672,673,674,715,716,717,740,741,742,744,745,746,748,750,754,755,765,766,785,786,792,794,797,799,803,816,819,832,833,837,838,872,896,897,898,906,915,916,1046,1056,1075],computecolumnsummarystatist:460,computecost:[267,268,415,419,425],computecovari:460,computegramianmatrix:[458,460],computeprincipalcompon:460,computeq:460,computesvd:[458,460],computeu:[458,460,461],concat_w:945,concaten:[727,761,762,1075],concentr:[270,277,278,279,420],concept:[277,421],concis:[613,673],concret:535,concurr:162,cond:578,conda:[5,1075,1076],condit:[7,239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272,284,408,410,412,458,460,470,473,475,528,533,565,618,865,931,940],conduct:[383,385,483],conf:[1,7,115,116,117,118,150,162,180,181,182,183,184,681,683,809,917,934,1075],confer:[343,443],confid:[57,98,130,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,271,272,281,284,343,344,361,463],config:[0,496,590,634,635,654,655,679,683,686,951,952,961,962,1077],configur:[1,3,7,12,15,115,116,117,118,150,151,152,154,158,161,181,182,183,184,289,314,323,424,463,496,624,629,632,659,681,686,714,865,947,949,966,978,1067,1075,1077],conflict:[0,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,591,628],confus:[427,810,924],confusionmatrix:427,conjunct:[496,497,501,502],connect:[1,6,41,159,162,631,651,682,684,958,1046,1057],consecut:856,consequ:[343,344],consid:[0,108,239,240,245,246,263,266,365,366,369,370,381,382,416,418,488,520,558,560,564,569,591,626,627,628,629,645,856,931,947],consist:[7,15,124,193,229,282,454,458,460,590,1004,1075],consol:[563,600,972],constant:[169,210,361,413,424,463,477],constantin:460,constitu:573,constrain:[251,252],constraint:[361,463,704],construct:[10,15,295,330,439,631,666,676,679,1004,1075],consum:[135,611],contain:[11,50,51,61,62,70,79,81,83,85,88,110,127,135,145,187,206,207,209,210,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,254,255,257,258,259,260,261,262,263,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,383,384,385,387,388,389,390,392,393,396,413,414,430,434,441,443,453,454,460,462,469,472,474,476,477,478,480,483,525,538,556,557,560,562,564,574,575,577,591,605,611,614,615,616,620,621,626,627,628,632,641,648,666,676,678,690,723,725,726,731,732,734,735,736,791,806,807,808,810,846,848,849,886,887,901,905,910,920,922,924,949,963,966,988,999,1004,1013,1014,1016,1045,1053,1075,1076,1077],containsnul:[867,988],content:[1,168,206,388,584,587,612,622,623,629,648,650,651,652,653,656,657,659,660,662,947,966],context:[1,22,34,150,162,199,341,342,493,494,495,696,985,1046,1051,1052,1053,1054,1056,1067],contextu:[22,26,219,221],conting:[383,483,553,644],continu:[239,240,245,246,259,263,266,288,291,319,332,333,337,338,365,366,369,370,381,382,385,483,577,629,947,958,959,967,969,977,1006],contrast:1075,contribut:[2,245,246,271,361,369,370,486],control:[7,54,195,210,292,294,295,319,329,332,377,378,430,434,555,581,590,629,632,712,807,808,867,886,887,905,920,922,949,1075],conveni:[319,496,501],converg:[241,244,247,248,251,252,255,258,270,271,272,274,275,277,278,279,363,364,367,368,371,372,377,378,407,416,418,458,460],convergencetol:[271,408,412,413,416,417,470,473,475,477],convers:[7,15,360,865,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1076],convert:[15,115,116,117,118,120,181,182,183,184,259,270,277,304,312,314,322,331,346,347,349,350,356,360,383,406,407,408,409,411,412,414,416,418,445,446,447,448,450,451,452,453,454,455,457,458,468,470,473,475,483,492,494,513,610,687,712,713,719,763,777,786,809,810,840,872,920,921,922,923,924,933,934,935,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1075],convertmatrixcolumnsfromml:494,convertmatrixcolumnstoml:494,converttoarrowarraysaf:15,convertvectorcolumnsfromml:494,convertvectorcolumnstoml:494,cooper:309,coordin:[455,621,745,1066],coordinatematrix:[454,458,459,460],copi:[1,39,101,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,445,446,447,448,450,451,452,453,865,958,1030],core:[8,9,684,864,1006,1067],corpu:[270,277,278,279,439],corr:[384,483],correct:[0,113,114,326,407,460,666,676,865,1075],correctli:[41,235,236,237,238,242,243,249,250,253,254,256,257,264,265,427,985],correl:[239,365,483,545,642,764],correspond:[0,1,7,229,239,245,263,268,277,280,303,304,330,345,363,364,365,369,374,379,380,381,429,464,470,473,475,504,631,651,712,745,928,1044,1062],corrupt:[629,632,947,949],cos:423,cosin:[267,268,274,275,282,296,342,458,460,716,717,765,766],cosinesimilar:440,cosmet:[593,599],cost:[268,276,415,419,425,460,563,621,867],costli:384,could:[12,270,278,279,294,295,363,364,414,483,498,538,641,677,730,777,816,822,835,1035,1040,1075],count:[1,7,57,59,60,104,111,125,239,240,245,246,263,266,270,277,278,279,294,295,299,300,319,337,351,355,365,366,369,370,381,382,387,420,433,446,451,462,465,481,482,483,520,553,554,555,556,569,570,577,579,586,592,594,595,606,644,645,646,664,679,719,721,732,768,862,912,1013,1014,1015,1035,1036],countdistinct:721,counter:58,counterintuit:12,counterpart:[395,397],countri:700,countvector:[277,295],countvectorizermodel:294,countvectorizerpath:294,coupl:0,cours:673,cov:[271,272,386],covari:[460,547,643,769,770],cover:[0,291,319,629,632,947,949,956],covert:[357,425,453],cprofil:1,crash:[607,631,651,958],creat:[1,6,7,8,15,34,44,54,55,58,75,86,103,112,116,118,147,150,162,164,176,187,190,207,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,352,357,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,384,388,389,390,392,393,418,430,439,447,453,462,484,503,535,548,549,550,551,554,588,592,624,629,631,632,651,663,664,675,677,679,683,685,687,690,702,703,704,705,722,732,772,802,821,825,834,846,847,865,910,931,947,949,994,1004,1006,1046,1050,1053,1054,1055,1057,1061,1062,1063,1066,1072,1075,1077],createcombin:[54,1010],createdatafram:[7,12,13,14,15,240,244,246,258,259,266,267,271,274,277,280,281,282,284,285,286,287,288,289,291,292,294,296,297,298,299,300,302,305,306,308,310,312,313,314,316,318,319,320,322,323,325,326,328,329,331,332,334,336,337,339,340,341,343,346,347,361,363,366,368,370,371,375,377,382,383,384,385,389,392,464,494,505,506,507,510,511,512,515,516,517,518,520,521,522,523,524,534,542,562,575,581,613,616,665,666,676,688,704,705,712,713,718,719,723,724,725,726,727,728,729,730,731,732,733,734,735,736,743,752,756,758,759,761,762,763,764,769,770,771,776,777,778,779,780,781,782,783,791,793,795,796,799,800,802,804,805,806,807,808,809,810,811,812,815,816,817,820,822,823,824,825,829,831,832,833,835,839,841,845,846,850,852,855,857,859,860,861,864,865,868,869,871,877,878,879,880,882,884,888,889,890,892,893,894,895,899,901,902,903,905,911,912,917,920,921,922,923,924,925,926,927,928,930,931,933,934,939,941,942,943,945,1075,1077],createorreplac:[624,753,784,818,858,944],createorreplacetempview:[7,588,639,679,694,697],createtransformfunc:234,creation:[5,388,985],credenti:1066,criterion:[239,240,245,246,263,266,365,366,369,370,373,374,381,382,484,488],cross:[6,305,361,362,389,390,392,393,578],crossvalid:[390,392],crossvalidatormodel:389,crpc:466,csc:[354,450],cst:[634,635,654,655,951,952,961,962],cstat:483,csv:[634,635,654,655,807,886,920,951,952,961,962],csv_sdf:947,csvparser:[629,947],ctx:42,cube:[754,813,814],cumtim:1,cumul:[1,385,428,483,773],current:[0,1,13,26,45,74,105,143,165,192,193,194,221,246,247,270,277,299,302,320,325,375,380,384,385,387,420,428,435,438,466,483,485,487,489,523,524,541,545,554,572,581,592,597,604,621,629,634,635,642,654,655,666,673,688,700,704,705,710,711,773,774,775,809,821,827,830,856,865,934,947,951,952,961,962,965,974,980,1046,1052,1053,1075,1077],currentrow:[529,700,704,705,710,711],curv:[235,236,237,238,242,243,249,250,281,426],custom:[16,54,162,164,613,629,632,648,652,947,949,1077],customarili:865,cutler:[239,365],cvmodel:389,cvmodelread:389,cycl:6,cyclic:771,daemon:1,dai:[633,637,639,661,776,778,779,780,781,782,783,829,859,861,941],danish:328,data2:[289,308],data:[1,5,8,16,20,35,51,52,89,108,116,118,131,132,133,136,164,169,210,227,234,241,244,245,246,247,248,251,252,255,258,259,261,263,266,267,269,270,271,273,274,276,277,278,279,280,289,290,298,306,308,309,314,315,316,319,320,321,323,324,326,327,329,330,336,337,338,339,341,342,343,347,349,355,361,362,363,364,367,368,369,370,377,378,381,382,385,389,390,392,393,395,396,397,406,407,408,409,410,411,412,413,415,417,419,421,422,425,430,434,437,438,439,441,442,443,444,445,446,447,448,450,451,452,453,454,466,467,468,469,470,472,473,474,475,476,477,482,483,484,485,486,487,488,489,492,494,495,535,555,558,561,564,569,571,577,589,590,591,606,607,612,621,625,627,628,629,630,633,634,635,638,645,647,648,649,650,651,652,653,654,655,656,657,658,659,660,664,666,676,687,691,692,704,712,713,722,723,724,727,728,729,730,731,732,733,784,791,802,807,808,811,818,825,832,844,845,847,848,849,856,858,865,880,895,899,902,904,920,922,926,927,944,947,948,950,951,952,955,958,960,961,962,963,966,967,969,973,977,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1004,1005,1006,1043,1046,1050,1051,1053,1054,1056,1057,1060,1067,1075],data_filt:845,data_path:[251,261],data_typ:1004,data_upp:926,databas:[345,443,631,651,685,810,924],datafram:[5,8,9,11,12,14,15,111,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,389,390,392,393,458,460,494,503,625,626,627,628,629,631,632,633,636,637,639,640,641,642,643,644,645,646,648,650,651,652,653,656,657,659,660,662,663,664,666,673,676,677,678,679,687,690,691,692,694,697,700,751,856,865,946,947,949,950,953,954,956,957,959,963,966,976,1067,1075,1076],dataframenafunct:[560,564,582,591],dataframeread:691,dataframestatfunct:[545,547,553,569,603],dataframewrit:622,dataframewriterv2:[753,784,818,858,944],dataset:[7,8,9,12,42,190,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,255,258,259,260,261,262,263,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,381,382,383,384,385,389,390,392,393,395,397,422,430,434,437,443,483,486,488,494,540,577,580,595,632,646,679,949,959,963,966,1072,1075,1076],dataseta:[289,290,308,309],datasetb:[289,290,308,309],datasourc:[629,634,635,654,655,807,808,886,887,920,922,947,951,952,961,962],datastreamread:692,datastreamwrit:[577,623,976],datatyp:[10,508,513,581,666,676,687,808,865,931,988,999,1003,1004],date1:859,date2:859,date:[7,629,631,632,648,652,700,718,774,776,777,778,781,782,783,784,817,829,855,857,858,859,861,871,888,921,930,939,941,943,944,947,949,993],dateformat:[629,632,648,652,947,949],datetim:[7,629,632,648,652,679,718,776,777,778,779,810,829,861,921,923,924,930,947,949,993,1005,1040,1075],datetime64:1075,datetyp:[774,921],david:460,dayofweek:861,dcg:428,dctpath:296,ddl:[581,629,632,633,638,666,676,807,808,865,886,887,931,947,949,950,955],ddthh:[629,632,634,635,636,637],dead:193,deal:[361,362,629,632,947,949],debug:[2,134,195,563,972],debugg:1,decai:[270,277,278,279,424,425],decayfactor:[424,425],decid:[408,412,438,470,473,475,631,865],decim:[632,752,805,882,949,994],decimaltyp:998,decis:[239,240,245,246,263,266,365,366,369,370,381,382,484,485],decisiontre:486,decisiontreeclassifi:239,decisiontreeclassificationmodel:[240,245,263,266],decisiontreemodel:484,decisiontreeregressionmodel:[246,366,369,370,381,382],decisiontreeregressor:365,declar:[337,338,1075],decod:[121,629,932,947,1066],decomp:460,decompos:[458,460],decomposit:[449,458,460,461],decor:[0,1,865,1075],decreas:[108,289,290,308,309,375,376,421,1037],dedic:0,dedupl:[614,615,616,958,959],deep:[261,262,389,390,392,393],deeper:[239,240,245,246,263,266,365,366,369,370,381,382,802],def:[0,1,7,16,19,54,65,68,69,92,93,94,95,165,193,423,567,568,581,613,664,665,666,676,719,800,865,925,931,958,959,1075,1077],defaultawscredentialsproviderchain:1066,defaultparallel:[190,462],defaultparammap:398,defaultparamsread:397,defaultparamswrit:[395,396],defaultvalu:152,defin:[16,19,66,71,164,195,291,325,373,374,379,380,429,529,535,541,595,621,629,631,632,646,648,652,662,665,666,676,682,700,702,703,704,705,708,709,710,711,719,793,800,804,845,850,865,925,926,927,931,945,947,949,956,968,1004,1015,1075],definit:0,deflat:[648,652,662],degrad:0,degre:[280,318,373,374,379,380,422,478,480,483,872,918],degreesoffreedom:[373,374,379,380,383,478,480,483],delai:621,delaythreshold:621,deleg:[351,446],delet:[35,39,119,121,140,186,270,277,278,279,494],delim:912,delimit:[345,443,629,632,652,727,912,947,949,1057],demonstr:[1,1077],dens:[240,244,246,247,251,258,259,261,266,267,271,274,277,281,282,289,292,296,297,306,308,310,313,316,318,323,326,332,334,337,339,340,346,347,350,351,352,357,363,366,368,370,371,375,377,382,383,384,386,387,389,392,421,432,434,436,437,445,446,447,453,454,458,460,481,483,494],dense1:[351,446],dense2:[351,446],dense3:[351,446],dense_rank:876,densematrix:[244,259,271,277,352,368,384,386,417,447,454,458,460,461,481,494],densevector:[240,244,246,247,251,258,259,261,266,271,289,292,296,297,300,308,310,313,316,318,323,326,332,334,336,337,339,340,341,346,355,357,363,368,370,371,375,382,386,425,430,432,434,436,437,451,453,458,460,461,481,494],densiti:479,depart:535,depend:[0,5,134,166,167,247,248,251,252,314,361,363,364,377,378,469,472,474,541,573,660,758,759,801,828,856,904,958,1006,1075,1077],deploi:[712,713,1077],deploy:[712,713],deprec:[53,94,268,292,330,408,470,473,475,588,665,720,865,918,919,1075],depth:[137,138,239,240,245,246,247,248,251,252,263,266,271,272,363,364,365,366,369,370,371,372,377,378,381,382,484,485,486,488],deptid:535,deriv:[270,415,417,419,421,469,472,474],desc:[529,537,578,583,601,982],descend:[136,458,460,461,464,515,516,517,583,601,602,788,789,790,902],descent:[241,244,270,277,278,279,367,368,408,412,413,470,473,475,477],describ:[0,1,3,7,9,270,278,279,343,345,421,443,460,498,569,645,666,676,865,1075],describetop:[270,277,278,279,421],descript:[53,134,192,193,239,245,251,252,263,319,365,369,371,372,381,1075],deseri:[190,210,712,958],design:[45,277,421,460],desir:[267,268,414,504,891],destin:280,destroi:306,detail:[0,3,4,12,15,319,424,458,460,483,496,520,563,810,924,1006,1066,1075],detect:[15,632,865,949],determin:[234,239,321,361,365,379,380,388,413,415,419,425,429,455,458,460,477,494,629,632,687,862,947,949,1075],determinist:[1,361,460,538,641,758,759,801,828,856,874,875,895,904,931,959],dev:0,develop:[1,280,422,593,599,1056],devianc:[372,373,374],devianceresidu:[379,380],deviat:[113,126,241,244,326,327,367,368,385,387,437,438,462,721,908,909],df0:[833,856],df1:[7,296,302,319,346,347,520,562,575,578,593,616,632,676,889,1075],df2:[7,288,289,296,302,308,319,328,346,347,520,548,549,550,551,552,557,562,572,575,578,588,593,604,616,629,632,676,687,694,697,758,759,889,1075],df3:[240,296,346,366,549,550,578,667,670,671,672,674,687],df4:[560,564,578,586,591,626,627,628,673],df5:[564,627,673],df_as1:537,df_as2:537,dfwithinvalid:337,dfwithnullsandnan:336,dialect:322,dialog:1,diamond:713,dict:[103,112,115,116,117,118,162,181,182,183,184,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,398,433,484,486,488,504,522,564,591,595,627,628,631,633,646,651,659,660,664,678,679,687,712,807,808,886,887,920,922,950,966,975,1003,1004],dictionari:[7,12,52,59,60,107,162,349,357,391,453,631,651,666,676,677],did:[81,877],diff:780,differ:[1,6,43,44,54,66,112,146,193,204,270,278,292,294,295,314,332,385,399,430,483,590,593,599,616,629,648,678,787,876,947,979,1066,1075],difficult:271,digest:[852,891],digit:[859,994],dim:424,dimens:[21,289,298,341,342,351,355,406,410,446,451,458,460,494],dimension:[241,244,271,280,316,317,349,351,355,367,368,422,446,451,554,592],dio:6,dir:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,494],directli:[0,1,7,150,295,330,388,435,438,485,487,489,518,704,705,710,711,1075,1077],directori:[0,1,3,6,48,89,165,168,169,175,177,191,206,209,239,240,245,246,263,266,270,277,278,279,361,365,366,369,370,381,382,493,494,495,540,629,632,636,637,947,949,953,954,956,1050,1051,1053,1054,1061,1066,1077],dirichlet:[270,277,278,279,420,421],dirnam:191,dirpath:206,disabl:[15,162,239,240,245,246,263,266,270,277,278,279,361,365,366,369,370,381,382,629,632,636,637,947,949,953,954,956,1075],discard:[239,240,245,246,263,266,270,365,366,369,370,381,382],discount:428,discov:496,discoveri:[292,293,332,430,496,629,632,634,635,636,637,947,949,953,954,956],discoveryscript:496,discret:[239,240,245,246,259,263,266,294,295,296,299,319,365,366,369,370,381,382,409,430,1006],discuss:958,disk:[140,210,417,421,617],disk_only_2:604,dispers:[373,374],displai:[7,162,606,810,924,1075],dist2:423,dist:[0,1077],distanc:[267,268,269,274,275,276,282,289,290,308,309,351,355,357,415,418,419,425,446,451,453,483,833],distancemeasur:[267,268,274,275,282],distcol:[289,290,308,309],distinct:[58,319,383,430,483,553,605,614,615,616,644,673,721,768,914,1013,1014],distinct_ag:721,distnam:[385,483],distribut:[6,7,8,42,66,89,170,185,251,252,270,271,272,277,278,279,289,318,343,345,363,371,372,385,416,417,420,421,439,443,454,455,456,457,458,459,460,461,462,483,535,773,874,875,958],distributed_model_path:277,distributedldamodel:[277,278,279],divid:[113,114,306,341,342,373,374,428,483,1046],divis:[267,268,414,632,949],dm1:454,dm2:454,dm3:454,dm4:454,doc:[0,45,148,149,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,358,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,424,433,439,496],docclusterkddtmw00:414,docconcentr:[270,277,278,279,420],docfreq:[300,301,435],docker:1077,docstr:2,doctest:16,document:[1,2,3,5,7,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,458,460,461,462,463,464,465,466,467,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,610,985,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1066,1076],doe:[1,7,12,41,102,150,151,162,192,193,194,246,279,294,295,302,306,339,390,393,445,446,447,448,450,451,452,453,584,614,615,616,629,632,634,635,636,637,660,666,673,865,931,947,949,953,954,956,958,979,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1053,1054,1075,1077],doesn:[496,520,557,620,963,966,986],doi:[343,443,460,538,569,641,645],doing:[1,6,541,607],domain:535,don:[0,104,496,586,631,651],done:[90,298,958,1036,1075],dong:343,dot:[11,351,355,446,451,460,994],dotnet:673,doubl:[0,7,281,291,294,295,305,346,384,385,478,480,501,545,547,586,629,632,633,638,642,643,665,666,676,679,865,867,881,925,947,949,950,955,995,1075,1077],doubletyp:[344,347,860],down:[201,281,378],download:[3,5,165],downweight:[270,277,278,279],drastic:541,drawn:462,driver:[7,15,16,18,26,27,51,52,131,132,133,136,221,222,270,278,279,337,389,392,454,571,607,612,1075,1077],drop:[0,210,314,315,320,321,361,362,518,558,560,629,632,685,947,949],drop_dupl:558,dropdupl:559,dropfieldifallnul:[632,949],dropglobaltempview:[548,549],droplast:[298,314,315],dropmalform:[629,632,947,949],dropna:626,droptempview:[550,551,588],dskiptest:4,dsl:535,dst:280,dstcol:280,dstream:[413,424,476,477,1046,1051,1053,1054,1056,1062,1063,1066],dt2:[240,366],dt3:[240,366],dtc:[240,414],dtc_model:240,dtc_path:240,dtr:366,dtr_model:366,dtr_path:366,dtype:[267,274,347,629,630,632,633,636,637,639,1075],due:[193,239,271,365,454,455,458,590,621,931],dummi:360,dump:[1,175],dump_stream:1,duplic:[79,81,340,362,558,562,573,575,678,724,725,726,734,758,759,931],durat:[941,1056,1063],dure:[15,89,219,270,277,278,279,311,314,315,343,361,388,389,392,486,499,500,629,632,714,947,949,1049,1075],dutch:328,dynam:[89,143],dynamicalloc:89,dynamodb:1066,e_i:310,e_max:310,e_min:310,each:[7,23,25,39,43,44,50,54,59,60,65,66,67,69,70,75,77,85,87,88,91,92,93,94,95,106,107,109,110,111,127,128,141,144,145,148,149,168,169,170,190,192,193,194,206,210,227,229,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,276,277,278,279,280,289,290,291,292,294,295,297,298,300,302,306,308,309,310,311,312,314,315,316,317,319,320,323,326,329,330,332,334,337,341,342,343,361,362,363,365,366,367,368,369,370,371,373,374,375,377,379,380,381,382,383,384,387,389,390,392,408,412,413,414,415,417,419,421,425,430,432,439,441,443,454,455,458,460,462,470,473,475,477,479,483,484,486,488,494,538,541,545,553,560,564,568,570,573,581,591,595,602,610,626,627,628,629,631,641,642,644,646,648,661,662,666,667,669,670,671,672,673,674,676,687,795,796,820,856,865,867,868,869,925,933,947,956,958,978,985,988,1006,1008,1010,1012,1013,1014,1015,1018,1019,1022,1023,1026,1027,1028,1029,1030,1032,1033,1034,1035,1036,1039,1041,1042,1044,1045,1050,1055,1056,1062,1075,1077],eager:[7,540,580],eagerev:7,earli:[245,246,270,277,278,279,369,370],earlier:[1053,1054],earn:673,eas:8,easi:7,easili:[0,1,7],east:1066,ecdf:483,echo:[1,6],edf:[795,868],edit:[1,3,245,263,369,381],edu:[414,422,466],edward:343,effect:[89,375,376,407,454,455,458],effici:[7,20,90,308,345,439,443,538,641,673,721,1015,1036,1075],effort:573,egg:[163,1077],eigenvalu:[458,460],eigenvector:[458,460],either:[70,82,88,110,115,116,117,118,162,165,166,229,274,275,280,298,304,319,322,337,338,340,351,357,391,418,422,446,453,483,581,631,666,676,687,730,810,822,865,924,931,970,985,1004,1006,1052,1053,1054,1055,1066,1075],elaps:1049,elast:377,elasticnet:[251,252,377,378],elasticnetparam:[251,252,377,378,470,475],electron:309,element:[42,43,47,51,54,56,58,59,61,62,63,64,66,68,70,75,79,81,83,85,86,88,91,97,103,105,110,111,113,114,121,125,126,129,131,132,135,136,137,138,142,144,145,176,187,189,236,238,243,245,250,254,257,263,265,277,297,308,312,351,353,355,357,361,369,374,379,380,381,421,441,443,446,448,451,453,460,462,464,514,538,569,570,610,614,615,616,641,645,690,719,725,726,727,731,733,734,735,759,791,793,795,796,800,804,846,867,868,869,880,901,902,925,945,988,1004,1012,1014,1015,1016,1017,1026,1032,1033,1036,1039,1045],elementtyp:988,elementwis:[297,432],elementwiseproductpath:297,elimin:[759,931,1044],els:[484,488,528,533,676],embed:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,422,806],emit:621,empir:[259,385,483],empti:[63,83,105,121,229,239,240,241,244,245,246,247,248,251,252,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,287,304,312,322,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,396,428,538,629,632,641,647,648,661,735,796,814,869,877,947,949],emptyvalu:[629,648,947],enabl:[1,7,8,13,14,15,41,53,143,192,193,194,612,629,682,687,922,947,1008,1066,1076,1077],enclos:648,encod:[202,206,298,305,314,315,320,321,629,632,648,652,662,748,903,932,947,949,956,1057,1061],encourag:865,end:[54,187,494,519,528,533,616,629,690,704,705,710,711,733,780,842,865,885,901,902,929,931,941,945,947,1040,1077],endpointurl:1066,enforceschema:[629,947],engin:[1,7,8,58,443],english:328,enough:[0,319,418,458,460,751],ensembl:[245,246,263,369,381,487,489],ensu:[454,455,458],ensur:[6,193,666,676,1060,1076],enter:[1,15,677,1035,1036],entir:[45,270,278,279,536,629,865,947,1075],entri:[7,162,277,291,314,319,320,321,357,435,453,454,455,458,459,460,483,484,486,488,679,844,847,905,1046,1072],entropi:[239,240,263,266,484,488],env:[6,103,1075],environ:[3,4,6,8,15,103,157,162,192,193,194,1075,1077],ephemer:89,epoch:[199,809,810,924,958],epoch_id:958,epoch_ordin:993,epochid:958,eprod:[297,432],eps:[284,427,492],epsilon:[377,378,418,419],equal:[235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,266,288,329,330,385,406,411,427,439,454,501,520,583,593,601,602,687,704,705,710,711,731,814,867,881,889,994],equat:[270,278,279,477],equi:578,equival:[32,226,251,252,269,276,351,415,419,425,446,535,562,574,575,605,614,615,786,787,827,830,862,863,872,876,891,921,923,963,966,967,1015],err:[538,641],errmsg:[743,873],error:[7,12,15,195,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,389,390,392,393,429,430,454,460,473,538,619,641,648,651,652,653,656,657,659,660,743,867,873,958,1049,1075,1077],errorifexist:[648,651,652,653,656,657,659,660],errorornul:958,escap:[11,629,648,947],escapequot:648,especi:[540,580,1075],essenti:361,estim:[58,113,114,131,228,229,232,239,240,241,244,245,246,251,252,255,258,259,260,263,266,270,271,272,277,278,279,280,284,302,345,361,365,369,370,373,374,377,379,380,381,389,390,391,392,393,396,398,439,460,479,486,590],estimateddocconcentr:[270,278,279],estimatorparammap:[389,390,392,393],eta:[270,277,278,279,420],etc:[0,7,12,15,144,291,319,398,498,685,687,946,957,958,1006,1077],euclidean:[267,268,274,275,282,289,387,418],euclideandist:289,evalu:[7,241,245,248,251,252,255,263,281,282,284,285,286,287,301,369,372,373,378,379,389,390,392,393,426,427,428,429,435,509,525,528,533,774,775,940,1067],evaluateeachiter:[245,246,369,370],evaluator2:[281,282,284,285,286,287],even:[57,81,83,270,298,310,454,619,931,1075,1077],evenli:[79,298,299,631],event:[294,295,299,363,364,621,1047],eventtim:621,everi:[165,187,235,236,237,238,239,240,242,243,245,246,249,250,259,263,266,270,277,278,279,361,365,366,369,370,381,382,383,406,409,411,469,471,472,474,483,496,687,804,912,926,927,958,959,963,966,967,973,979,1051],everyth:912,evolv:[13,496,497,498,499,500,501,502,577,621,623,692,696,712,946,947,948,949,950,951,952,955,956,957,958,959,960,961,962,963,964,965,966,967,969,983],exact:[388,538,641],exactli:[41,108,111,389,467,541,594,814,958,959],exampl:[0,1,4,6,7,8,11,16,19,34,43,47,49,50,52,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,77,78,79,81,83,85,86,87,88,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,121,122,123,124,126,127,128,129,130,131,132,133,135,136,137,138,139,141,142,144,145,146,150,162,165,167,185,186,187,189,193,202,204,206,240,244,246,247,251,258,259,261,262,266,267,271,274,277,280,281,282,284,285,286,287,288,289,291,292,294,296,297,298,299,300,302,305,306,308,310,312,313,314,316,318,319,320,322,323,325,326,328,329,331,332,334,336,337,339,340,341,343,345,346,347,350,351,355,357,361,363,366,368,369,370,371,375,377,381,382,383,384,385,386,387,389,391,392,406,407,409,410,411,415,417,419,421,423,425,426,427,428,429,430,431,432,433,434,436,437,439,442,444,445,446,451,453,454,455,458,460,462,464,465,467,469,472,474,479,481,483,484,485,486,488,494,498,504,505,506,507,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,546,548,549,550,551,552,554,555,556,557,558,560,561,562,563,564,565,566,567,568,570,571,572,573,575,578,579,581,583,585,586,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,604,606,607,608,609,610,611,612,613,616,619,620,624,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,646,647,648,649,651,652,653,654,655,656,657,658,659,661,664,665,666,667,669,670,671,672,673,674,676,677,678,679,681,683,687,688,690,694,697,700,704,705,710,711,712,713,718,719,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,743,749,752,753,756,758,759,761,762,763,764,768,769,770,771,772,776,777,778,779,780,781,782,783,784,791,793,795,796,798,799,800,802,804,806,807,808,809,810,811,812,813,814,815,816,817,818,820,823,824,825,827,829,830,831,832,833,834,835,836,839,841,843,844,845,846,847,848,849,850,852,855,856,857,858,859,860,861,863,864,865,867,868,869,871,874,875,877,878,879,880,882,884,886,887,888,889,890,891,892,893,894,895,899,901,902,903,904,905,910,911,912,917,920,921,922,923,924,925,926,927,928,930,931,933,934,939,941,942,943,944,945,947,948,949,950,951,952,953,954,955,956,958,959,960,961,962,963,965,966,967,972,984,986,987,988,994,999,1003,1004,1075,1077],exce:[239,240,245,246,263,266,345,365,366,369,370,381,382,443],except:[0,7,26,79,193,234,239,240,241,244,245,246,248,251,252,255,258,259,260,263,266,268,272,275,288,291,319,328,372,378,380,389,390,400,406,410,411,417,419,421,423,439,454,464,467,469,472,474,483,494,495,562,605,629,632,648,651,652,653,656,657,659,660,687,704,743,873,920,922,947,949,958,970,982,985,986,1046,1075],exclud:270,exclus:[0,187,631,690,941],execut:[1,4,7,8,12,13,14,15,45,48,162,166,189,193,219,229,343,541,577,581,590,612,624,679,687,865,931,958,959,967,969,1048,1049,1059,1060,1075,1077],executor:[7,15,33,39,89,143,157,193,196,239,240,245,246,263,266,365,366,369,370,381,382,496,497,499,500,576,580,1077],executorenv:150,exist:[0,11,15,89,146,150,162,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,398,399,400,405,454,495,548,551,578,591,619,620,624,628,629,648,650,651,652,653,656,657,659,660,681,683,688,865,958,986,1006,1046,1054,1075],existingrdd:563,exp:[423,462],expand:[318,555,597,865],expans:318,expect:[0,51,52,111,131,132,133,136,235,236,237,238,242,243,246,249,250,253,254,256,257,264,265,270,271,278,279,281,282,284,285,286,287,292,293,339,379,380,391,416,429,483,563,571,612,712,1075],expectedclassnam:396,expens:[1,89,538,641,865,1075],experiment:[6,13,22,23,25,26,28,33,41,45,73,143,147,148,149,285,286,290,309,540,580,581,612,666,675,676,687],expir:1035,explain:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,389,390,392,393,429],explainedvari:[316,317,379,380,429],explainparam:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],explan:[239,365],explicit:[7,361,590],explicitli:[7,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,629,666,676,677,947],explod:[504,796],exploratori:[555,569,606,645],expmean:462,exponenti:[462,540,580,794,797],exponentialrdd:462,exponentialvectorrdd:462,expos:[0,84],expr:[7,536,598,664],express:[7,318,460,503,504,505,506,507,509,510,511,512,515,516,517,518,521,522,523,524,525,526,528,530,533,534,565,570,578,589,590,597,598,619,631,664,704,708,709,719,724,728,729,733,737,738,739,788,789,790,793,798,800,802,804,823,824,827,830,840,844,845,847,848,849,850,851,854,856,862,865,880,895,899,902,905,908,909,913,914,925,926,927,931,935,940,945,958,1075],expstd:462,extend:[0,54,124,395,397,530,563,632,827,830,949,972],extens:337,extern:[103,150,622,623,631,651,712,713,946,957,959,1066],extra:[6,22,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,398,629,947,1075],extract:[6,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,387,389,390,392,393,396,518,781,782,783,791,811,817,825,855,857,871,877,888,939,943],extractjsonparam:398,extractparammap:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],extrametadata:398,extrem:[478,480],f1measur:285,f1measurebylabel:285,f_classif:332,f_regress:332,face:714,fact:[7,318],factor:[241,244,321,361,362,367,368,424,425,449,460,461,463,492],factori:[357,360,453],factoris:464,factors:[241,244,367,368],fail:[14,45,89,190,192,193,194,712,865,931,934],failfast:[629,632,947,949],failur:[0,15,45,89,270,277,278,279,361,363,958],fair:194,fairli:384,fall:[210,467,1075],fallback:[14,190,1075],fals:[12,15,35,39,49,53,64,74,83,91,92,93,94,102,103,111,112,133,135,140,148,149,150,165,189,193,202,206,211,212,213,214,215,216,217,218,235,236,237,238,239,240,242,243,244,245,246,249,250,253,254,256,257,263,264,265,266,267,270,271,274,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,298,299,308,309,320,322,323,326,328,332,343,345,347,350,353,354,361,365,366,368,369,370,375,376,381,382,383,387,389,392,407,408,412,417,427,430,433,437,445,448,450,458,460,463,470,473,475,509,520,563,564,569,583,584,593,594,600,601,602,604,611,616,617,627,629,632,645,648,677,678,679,723,735,793,800,801,804,823,824,828,843,845,850,859,862,867,902,926,927,945,947,949,956,966,972,988,999,1003,1004,1017,1026,1027,1028,1042,1049,1057,1060,1066],falsepositiver:427,falsepositiveratebylabel:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284],famili:[251,252,292,293,309,332,371,372,373,374,430,891],far:282,fast:[90,593,967],faster:[3,6,7,202,206],fatal:195,fault:[8,89,1051],fdr:[292,293,332,333,430],featur:[1,6,8,45,89,231,232,235,236,239,240,241,244,245,246,247,248,251,252,253,254,255,258,259,260,261,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,282,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,383,384,387,388,389,392,406,407,408,409,410,411,412,413,417,430,431,432,433,434,435,436,437,438,439,440,463,464,466,467,468,469,470,471,472,473,474,475,477,483,484,485,486,488,492,494,1067,1076],feature_hash:298,featureandpredict:282,featureandpredictionswithweight:282,featureimport:[239,240,245,246,263,266,365,366,369,370,381,382],featureindex:[375,376,383],featurescol:[231,232,235,236,239,240,241,244,245,246,247,248,251,252,253,254,255,258,259,260,261,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,282,292,293,320,321,332,333,334,335,363,364,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,383,388],featuresubsetstrategi:[245,246,263,266,369,370,381,382,488],featuretyp:[332,333],feed:[632,949],feedback:361,fetch:[135,414,611],few:[4,319,1006],fewer:[239,240,245,246,263,266,365,366,369,370,381,382,435,541,629,947],field1:694,field2:694,field:[15,235,236,237,238,242,243,249,250,253,254,256,257,264,265,342,347,349,373,374,379,380,383,385,398,465,481,518,521,534,629,632,648,652,666,676,677,678,687,712,825,905,947,949,1003,1004,1075],fieldnam:[518,534,1004],fifth:[705,711,787,876],figur:1,file1:206,file2:206,file:[0,1,6,7,37,48,71,89,115,116,117,118,120,121,162,165,166,168,169,181,183,190,202,206,207,208,209,270,493,494,495,540,573,629,632,633,634,635,636,637,647,648,652,654,655,656,657,658,659,661,662,679,821,946,947,949,950,951,952,953,954,956,957,961,962,964,966,1039,1050,1061,1077],fileinput:[121,494],filenam:[1,165,208],filesystem:[165,166],filev:165,fill:[12,564,616],fillna:[12,627],filter:[7,131,291,293,294,295,300,301,302,319,320,321,322,328,329,330,333,335,336,337,338,339,361,434,514,519,523,524,526,530,531,535,549,550,618,1035],filter_func:[581,1075],filterfunc:1035,finalstoragelevel:361,find:[6,96,99,165,267,271,280,290,309,319,342,345,357,361,414,415,417,419,422,425,440,443,453,484,496,569,573,645],findfrequentsequentialpattern:345,findsynonym:[341,342,439,440],findsynonymsarrai:[341,342],finish:[3,41,57,719],finit:259,finnish:328,first:[4,24,43,44,54,64,102,124,131,144,145,220,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,385,428,439,454,455,458,460,464,465,467,481,494,538,545,547,553,571,584,589,590,600,606,608,610,629,641,642,643,644,648,666,673,676,683,687,730,740,756,785,792,820,822,835,836,850,861,863,865,870,945,947,973,1032,1075],first_product:464,first_us:464,firstli:[1,3,7,810,924],fit:[7,227,228,229,230,232,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,289,290,292,293,294,295,300,301,302,303,306,307,308,310,311,314,315,316,317,319,320,321,323,324,326,327,329,330,332,333,334,335,337,338,339,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,389,392,414,424,430,434,437,439,444,469,472,474,483,632,664,666,676,949,1075],fitintercept:[241,244,247,248,251,252,363,364,367,368,371,372,374,377,378,379,380],fitlinear:[241,244,367,368],fitmultipl:[227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,361,363,366,368,370,371,375,377,382,389,392],five:[704,710],fix:[0,133,270,278,279,292,332,391,420,430,994,1050],flag:[210,629,648,947],flake8:0,flat:[169,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,1050],flatmap:[34,65,1018],flatten:[64,305,383,1017],fleec:124,float32:347,float64:[347,417,666,676,865,1075],floattyp:[347,860,999],floor:[290,538,641],flush:494,fm_model:[244,368],fmclassifi:[241,242,243],fmclassificationmodel:244,fmeasur:427,fmeasurebylabel:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284],fmeasurebythreshold:[235,236,237,238,242,243,249,250],fmregressionmodel:368,fmregressor:367,fmt:341,focus:[0,1],fold:[389,390],foldabl:[886,887],foldcol:[389,390],follow:[0,6,7,15,120,190,206,239,245,263,298,309,332,337,340,365,369,381,383,385,387,460,483,494,538,578,614,615,616,629,632,634,635,636,637,641,648,652,654,655,679,700,800,856,865,921,923,925,947,949,951,952,953,954,956,958,961,962,1075,1077],foo:[7,121,298,520,796,804,845,869,877,926,945],foo_1:945,foobar:804,forc:[147,204,251,312,320,321,322,331,460],forceindexlabel:[320,321],forcibl:[629,632,947,949],foreach:[16,19],foreachbatch:968,forest:[239,245,246,263,266,365,369,370,381,382,488,489],forev:977,forg:[1075,1077],forget:[424,425,987],forgotten:425,fork:[1,3,4,103],form:[115,116,117,118,120,185,454,455,458,621,631,634,635,651,654,655,677,800,810,924,925,951,952,961,962],format:[7,167,169,204,210,251,261,345,354,377,399,443,450,455,494,495,563,573,581,585,629,632,633,634,635,636,637,638,647,648,652,654,655,656,657,659,660,661,666,676,687,712,713,777,779,805,806,807,808,809,810,811,825,865,886,887,921,923,924,930,931,934,947,949,950,951,952,955,961,962,966,972,984,986,1075],format_numb:341,former:44,formul:[434,470,473,475],formula:[320,321,425,428],found:[0,291,319,337,338,434,454,629,730,822,835,947,1077],four:[305,344],fpga:498,fpgrowth:[344,442],fpgrowthmodel:343,fpm:[343,344,345,441,442,443,444],fpm_model:343,fpr:[235,236,237,238,242,243,249,250,292,293,332,333,430],frac:[251,252,379,380,429],fraction:[111,112,239,240,241,244,245,246,263,266,270,277,278,279,292,294,295,332,365,366,367,368,369,370,381,382,408,412,413,430,470,473,475,477,501,594,595,629,632,646,773],frame:[700,704,705,710,711,856,862],frank:422,freedom:[373,374,379,380,478,480,483],french:328,freq:[288,299,300,313,336,343,344,345,434,442,444],freqitemset:[343,344,442],freqsequ:444,frequenc:[294,295,299,300,301,329,330,344,345,433,434,435,483,553,569,644,645,1067],frequencyasc:[320,321,329,330],frequencydesc:[320,321,329,330],frequent:[302,303,329,343,344,345,441,442,443,444,569,645],fresh:958,fri:861,friedman:[245,246,263,369,381],friendli:0,friez:309,from:[1,3,5,7,9,16,19,34,41,66,67,79,105,106,107,119,120,121,131,132,136,140,146,150,162,165,168,169,181,182,183,184,187,190,193,194,202,206,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,355,357,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,395,396,402,403,406,410,411,413,414,415,417,419,421,422,423,424,425,430,436,439,440,442,447,451,453,454,462,464,466,467,469,472,474,476,477,479,483,484,485,486,487,488,489,490,493,494,503,505,506,507,510,511,512,515,516,517,518,520,521,523,524,528,529,533,534,535,536,537,538,541,548,549,550,551,558,564,577,578,581,583,588,593,595,601,613,616,617,619,621,627,629,633,636,637,638,641,646,648,664,665,666,676,677,679,681,687,690,694,704,705,710,711,712,713,724,725,726,731,734,736,763,780,785,792,795,802,808,809,810,811,842,843,844,846,847,848,849,862,863,864,865,867,868,875,877,885,889,901,912,917,920,922,924,929,931,946,947,950,953,954,955,956,968,973,979,986,994,1003,1006,1032,1046,1049,1050,1053,1054,1055,1057,1061,1063,1066,1076,1077],from_arrays_of_label:[329,330],from_arrow_typ:865,from_label:[329,330],from_vocabulari:[294,295],frombas:763,fromintern:[988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],fromjson:[988,999,1003,1004],fromlabelsmodel:329,fromml:[447,453],fromvocabmodel:294,frozen:1,fruit:7,ftp:[162,165,166],full:[1,4,239,245,263,270,365,369,381,485,487,489,578,664,666,676,1020,1075],full_out:578,fulli:[115,116,117,118,120,121,181,182,183,184,190,206,399],fullout:578,func:[67,106,107,165,581,613,666,676,704,705,865,959,968,1019,1033,1034,1035,1041,1042,1075],functiontyp:865,further:[329,330,341,616],futur:[45,166,246,268,270,278,279,330,337,665,865,1075],fwe:[292,293,332,333,430],gain:[239,240,245,246,263,266,365,366,369,370,381,382,428,484,488],gamma:[371,372,462],gammardd:462,gammavectorrdd:462,gap:[146,322,787,876],garbag:[41,1056],gatewai:162,gaussian:[259,260,271,272,273,371,372,416,417,424,492],gaussianmixtur:[272,417],gaussianmixturemodel:[271,416],gaussiansdf:[271,272],gbt2:[246,370],gbt:[245,246,369,370],gbtc:246,gbtc_model:246,gbtc_path:246,gbtclassifi:245,gbtclassificationmodel:246,gbtr:370,gbtr_model:370,gbtr_path:370,gbtregressionmodel:370,gbtregressor:369,gd1:675,gd2:675,gdf:664,gear:7,gencircl:423,gender:535,gener:[0,3,8,54,79,96,99,111,146,239,261,262,271,294,343,344,361,365,371,373,374,389,390,392,393,416,418,420,428,462,483,488,492,563,594,619,631,652,680,856,865,874,875,889,895,922,958,972,973,1006,1008,1009,1012,1014,1015,1020,1021,1023,1024,1025,1027,1028,1032,1033,1035,1036,1038,1041,1042,1045,1056,1062,1075],generalizedlinearregress:[372,374],generalizedlinearregressionmodel:371,generalmlwrit:[275,378],generatelinearinput:492,generatelinearrdd:492,german:328,germani:443,get:[1,16,18,22,23,25,27,71,73,74,132,136,145,146,150,153,165,179,180,198,209,219,222,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,389,390,392,393,400,414,415,419,425,444,454,455,456,458,460,485,487,489,499,500,521,522,604,683,686,863,958,984,1066,1075,1077],getaggregationdepth:[247,248,251,252,271,272,363,364,371,372,377,378],getal:150,getalpha:361,getandsetparam:396,getbeta:284,getbinari:[294,295,299],getblocks:[255,258,361,362],getbootstrap:[263,266,381,382],getbucketlength:[289,290],getcachenodeid:[239,240,245,246,263,266,365,366,369,370,381,382],getcasesensit:328,getcategoricalcol:298,getcensorcol:[363,364],getcheckpointfil:270,getcheckpointinterv:[239,240,245,246,263,266,270,277,278,279,361,365,366,369,370,381,382],getclassifi:[261,262],getcoldstartstrategi:[361,362],getcollectsubmodel:[389,392],getdegre:318,getdistancemeasur:[267,268,274,275,282],getdocconcentr:[270,277,278,279],getdroplast:[314,315],getdstcol:280,getelasticnetparam:[251,252,377,378],getep:284,getepsilon:[377,378],getestim:[389,390,392,393],getestimatorparammap:[389,390,392,393],getevalu:[389,390,392,393],getfactors:[241,244,367,368],getfamili:[251,252,371,372],getfdr:[292,293],getfeatureindex:[375,376],getfeaturescol:[231,232,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,282,292,293,320,321,332,333,334,335,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382],getfeaturesubsetstrategi:[245,246,263,266,369,370,381,382],getfeaturetyp:[332,333],getfinalstoragelevel:361,getfitintercept:[241,244,247,248,251,252,363,364,367,368,371,372,377,378],getfitlinear:[241,244,367,368],getfoldcol:[389,390],getforceindexlabel:[320,321],getformula:[320,321],getfpr:[292,293],getfw:[292,293],getgap:322,gethandleinvalid:[291,314,315,319,320,321,329,330,336,337,338,339],getimplicitpref:361,getimpur:[239,240,245,246,263,266,365,366,369,370,381,382],getindic:340,getinitialweight:[255,258],getinitmod:[274,275,280],getinitstd:[241,244,367,368],getinitstep:[274,275],getinputcol:[234,288,289,290,291,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330,331,336,337,338,339,340,341,342],getintermediatestoragelevel:361,getinvers:296,getisoton:[375,376],getitemcol:[361,362],getitemscol:[343,344],getk:[267,268,270,271,272,274,275,277,278,279,280,286,316,317],getkeeplastcheckpoint:[270,277,278,279],getlabel:[304,329],getlabelcol:[231,232,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,281,284,285,286,287,292,293,320,321,332,333,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382],getlabeltyp:[332,333],getlay:[255,258],getleafcol:[239,240,245,246,263,266,365,366,369,370,381,382],getlearningdecai:[270,277,278,279],getlearningoffset:[270,277,278,279],getlink:[371,372],getlinkpow:[371,372],getlinkpredictioncol:[371,372],getlocal:328,getloss:[377,378],getlosstyp:[245,246,369,370],getlow:[323,324],getlowerboundsoncoeffici:[251,252],getlowerboundsonintercept:[251,252],getmax:[310,311],getmaxbin:[239,240,245,246,263,266,365,366,369,370,381,382],getmaxblocksizeinmb:[247,248,251,252,363,364,377,378],getmaxcategori:[337,338],getmaxdepth:[239,240,245,246,263,266,365,366,369,370,381,382],getmaxdf:[294,295],getmaxit:[241,244,245,246,247,248,251,252,255,258,267,268,270,271,272,274,275,277,278,279,280,341,342,361,363,364,367,368,369,370,371,372,377,378],getmaxlocalprojdbs:345,getmaxmemoryinmb:[239,240,245,246,263,266,365,366,369,370,381,382],getmaxpatternlength:345,getmaxsentencelength:[341,342],getmetriclabel:[284,285],getmetricnam:[281,282,284,285,286,287],getmin:[310,311],getminconfid:[343,344],getmincount:[341,342],getmindf:[294,295],getmindivisibleclusters:[267,268],getmindocfreq:[300,301],getminibatchfract:[241,244,367,368],getmininfogain:[239,240,245,246,263,266,365,366,369,370,381,382],getmininstancespernod:[239,240,245,246,263,266,365,366,369,370,381,382],getminsupport:[343,344,345],getmintf:[294,295],getmintokenlength:322,getminweightfractionpernod:[239,240,245,246,263,266,365,366,369,370,381,382],getmissingvalu:[302,303],getmodeltyp:[259,260],getn:312,getnam:[340,414],getnonneg:361,getnumbin:281,getnumbucket:319,getnumbucketsarrai:319,getnumfeatur:[298,299],getnumfold:[389,390],getnumhasht:[289,290,308,309],getnumitemblock:361,getnumpartit:[341,342,343,344,462,541,589,590],getnumtopfeatur:[292,293],getnumtre:[245,263,266,369,381,382],getnumuserblock:361,getoffset:977,getoffsetcol:[371,372],getoptim:[270,277,278,279],getoptimizedocconcentr:[270,277,278,279],getorcr:[1,7,15,679,704,705,1077],getordefault:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],getoutputcol:[234,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342],getp:313,getparallel:[261,389,392],getparam:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],getpattern:322,getpercentil:[292,293],getpid:1,getpredictioncol:[231,232,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,271,272,274,275,282,284,285,286,287,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382],getprobabilitycol:[239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272,284],getquantileprob:[363,364],getquantilescol:[363,364],getrank:361,getratingcol:361,getrawpredictioncol:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,281],getregparam:[241,244,247,248,251,252,361,367,368,371,372,377,378],getrelativeerror:[302,303,319,323,324],getscalingvec:297,getse:[239,240,241,244,245,246,255,258,263,266,267,268,270,271,272,274,275,277,278,279,289,308,341,342,361,365,366,367,368,369,370,381,382,389,390,392,393],getselectionmod:[332,333],getselectionthreshold:[332,333],getselectortyp:[292,293],getsequencecol:345,getsiz:339,getsmooth:[259,260],getsolv:[241,244,255,258,367,368,371,372,377,378],getsplit:[291,319],getsplitsarrai:291,getsrccol:280,getstag:229,getstandard:[247,248,251,252,377,378],getstat:325,getsteps:[241,244,245,246,255,258,341,342,367,368,369,370],getstopword:328,getstrategi:[302,303],getstringindexerordertyp:[320,321],getstringordertyp:[329,330],getsubsamplingr:[245,246,263,266,270,277,278,279,369,370,381,382],getthreshold:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,288],getthroughorigin:287,gettol:[241,244,247,248,251,252,255,258,271,272,274,275,363,364,367,368,371,372,377,378],gettolowercas:322,gettopicconcentr:[270,277,278,279],gettopicdistributioncol:[270,277,278,279],gettrainratio:[392,393],getupp:[323,324],getupperboundsoncoeffici:[251,252],getupperboundsonintercept:[251,252],getusercol:[361,362],getvalidationindicatorcol:[245,246,369,370],getvalidationtol:[245,246,369,370],getvariancecol:[365,366],getvariancepow:[371,372],getvariancethreshold:[334,335],getvector:[341,342,440],getvectors:[341,342],getvocabs:[294,295],getweightcol:[239,240,241,244,245,246,247,248,251,252,259,260,261,262,263,266,267,268,271,272,274,275,280,281,282,284,287,365,366,367,368,369,370,371,372,375,376,377,378,381,382],getwindows:[341,342],getwithcent:[323,324],getwithmean:[326,327],getwithsc:[323,324],getwithstd:[326,327],gini:[239,240,263,266,365,484,488],git:3,github:[2,3,8],give:[193,235,236,237,238,242,243,249,250,253,254,256,257,264,265,270,342,371,373,374,379,380,425,483,538,641,787,876,1075],given:[19,43,44,66,70,79,88,109,110,111,123,151,164,165,173,174,189,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,251,252,253,255,256,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,357,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,387,388,389,390,391,392,393,396,397,398,404,406,407,408,409,410,411,412,415,417,419,421,423,425,427,440,442,453,454,455,457,458,460,463,464,466,469,472,474,479,483,485,487,489,490,491,492,493,494,495,509,538,547,549,553,555,557,565,578,588,589,590,594,595,606,620,621,629,641,643,644,646,647,658,661,687,694,705,723,730,731,737,738,739,749,752,754,755,757,760,762,777,781,782,783,788,789,790,791,794,795,796,797,799,800,803,809,810,815,816,817,822,825,827,829,830,833,837,838,843,844,847,850,855,857,867,868,869,871,882,888,892,893,894,895,896,898,905,915,916,924,934,939,941,942,943,945,947,964,967,1031,1044,1056,1066,1075],gkhome:414,glaro:414,gleich:460,glm:371,glob:[121,494,629,632,634,635,636,637,947,949,953,954,956],global:[16,19,25,193,271,496,548,549,683],global_temp:[548,549],globfilt:[629,632,634,635,636,637,947,949,953,954,956],glom:[49,101,108,109,185],glr2:371,glr:371,glr_model:371,glr_path:371,gm2:271,gmm:[271,416],gmm_model:271,gmm_path:271,goe:[632,949],going:[191,518,621,629,947],good:483,googl:439,gpu:[496,498],gracefulli:1060,gradient:[241,244,245,246,270,277,278,279,367,368,369,370,408,412,413,470,473,475,477,486,487],gradientboostedtreesmodel:486,gram:[312,439],gramian:[458,460],grape:[7,95],graph:[280,422,1051],graphx:89,greater:[58,288,298,299,334,335,406,411,460,538,569,571,600,641,645,704,705,710,711],greatest:[460,867],greenwald:[538,641],grep:1,grid:[389,391,392],ground:428,group:[5,53,54,76,77,172,193,267,319,336,343,361,414,535,536,570,664,665,666,667,668,669,670,671,672,674,675,676,747,767,772,801,814,826,828,851,853,854,863,877,900,908,909,936,937,1067],groupbi:[7,535,536,595,646,663,664,665,666,667,669,670,671,672,673,674,676,865,867,941,1075,1077],groupbykei:[90,112,1023],grouped_agg:664,grouped_map:665,groupeddata:[570,675,865,1075],groupid:[53,172,193],grow:[540,580,700],growth:[343,344,345,441,442,443],guarante:[111,162,270,271,277,278,279,337,460,555,569,594,606,621,645,856,865,958,959,977,1075],guid:[2,3,5,7,712,713,1075],guidanc:4,guidelin:0,gzip:[648,652,657,662],gzipcodec:[116,120,121],h_i:[290,309],had:[12,124,787,876],hadamard:[297,432],hadoop2:6,hadoop:[6,32,115,116,117,118,120,121,165,166,168,173,181,182,183,184,190,202,206,226,494,629,632,634,635,636,637,648,652,656,657,659,662,686,714,947,949,953,954,956,966,1050,1061],half:424,half_even:[752,805],half_up:882,halflif:424,hammingloss:[284,285],han:343,hand:[470,473,475],handl:[1,7,45,150,259,291,298,305,314,315,319,320,321,329,330,336,337,338,339,361,362,395,396,397,398,399,405,409,582,629,947,969],handleinvalid:[291,314,315,319,320,321,329,330,336,337,338,339],hang:[23,25],haoyuan:343,happen:[323,928],hard:[629,947],hardcod:666,has:[3,6,13,16,24,35,39,48,83,90,108,128,176,177,220,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,383,389,390,392,393,417,424,428,470,471,473,475,476,486,496,538,539,541,584,617,619,621,629,641,689,704,856,865,947,958,970,977,985,1012,1015,1033,1036,1060,1075,1077],hasdefault:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],hash:[70,77,85,88,106,110,289,290,298,299,308,309,433,589,599,753,852,890,891,942,1009,1020,1024,1025,1038],hashabl:433,hasher:298,hasherpath:298,hashingtfpath:299,hasintercept:320,hasparam:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],hassummari:[241,248,252,255,263,267,268,271,272,274,275,372,378,400],hasti:[245,263,369,381],hat:[379,380,429],have:[0,1,7,23,24,25,57,70,79,88,102,110,144,171,193,206,220,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,255,258,259,260,263,266,290,308,309,313,334,337,338,339,349,361,365,366,369,370,381,382,407,416,418,435,454,455,458,460,483,493,496,553,560,564,584,591,626,627,628,629,632,634,635,644,654,655,662,677,678,679,704,722,810,891,924,941,947,949,951,952,958,961,962,979,985,994,1035,1041,1042,1043,1075,1077],hdf:[162,165,166,168,181,183,190,191,193,202,206,1051],head:[240,244,246,247,251,258,259,261,266,267,271,274,288,289,291,292,296,297,298,299,300,302,305,308,312,313,314,318,319,322,325,328,331,332,334,336,337,339,340,341,366,370,371,375,377,382],header:[7,629,648,947],heart:713,heidelberg:443,height:[349,505,506,507,515,516,517,523,524,552,557,558,560,564,572,578,591,626,627,628,667,670,671,672,674,834],held:361,hello:[202,204,806],help:[0,8,193,337,361],helper:[19,164,395,397,494],henc:[280,314,422,590,958],here:[1,3,7,58,162,345,361,470,473,475,593,638,714,955,1075,1077],hex:[763,852,890,891,933],hexadecim:933,hidden:[255,258],hierarch:439,high:[8,89,239,271,365,492,1075],higher:[9,15,267,414,467,867,1075],highest:[261,262,292,293,390,455,458,467],highlight:1075,hing:247,hint:[2,339,865,1075],histogram:[239,240,245,246,263,266,365,366,369,370,381,382],histor:8,histori:[241,248,252,255,263],hit:25,hive:[6,647,658,682,964],hochberg:[292,332,430],hoefl:466,hoffman:[270,278,279],hold:[291,470,473,475,498,793,800,804,958],holger:466,home:150,hood:1077,hook_compress:121,horizont:7,host:[33,162],hostnam:1057,hot:[2,298,305,314],hour:[621,779,941,1066],hourli:941,how:[1,3,4,7,19,24,164,220,239,240,245,246,263,266,291,314,315,319,320,321,329,330,336,337,338,339,365,366,369,370,381,382,424,496,558,560,578,626,629,712,947,963,966,1056,1075],howev:[6,11,43,66,235,236,237,238,242,243,249,250,253,254,256,257,264,265,460,518,541,665,678,704,810,924,958,966,1075,1077],htf:433,html:0,http:[0,3,6,162,165,166,298,343,414,421,422,439,443,460,466,538,569,641,645,1066],huber:[377,378],human:[192,495],hungarian:328,hybrid:377,hyper:[389,390,392,393],hyperbol:[717,742,746,766,898,916],hyperloglog:58,hyperparamet:270,hypothesi:[332,383,385,478,480,483],iam:1066,icd:443,ice:[519,530],icml2010:422,ida:[289,308],idb:[289,308],idea:[239,365],ideal:[865,1075],ident:[229,360,371,372,865,874,875,1075],identifi:[2,167,337,406,411,959,1066],idf:[259,301,409,435],idfmodel:300,idfpath:300,ids:[1,146,361,362,666,676],idx:877,ietf:[629,632,947,949],iff:[812,823,824,831],ignor:[0,12,165,166,239,240,245,246,263,266,270,277,278,279,280,294,295,298,312,323,328,343,345,361,365,366,369,370,379,380,381,382,422,494,538,564,591,627,628,629,632,641,648,651,652,653,656,657,659,660,667,671,672,674,727,859,947,949,1050,1061,1075],ignoreleadingwhitespac:[629,648,807,947],ignorenul:[801,828,862],ignorenullfield:652,ignoretrailingwhitespac:[629,648,947],ill:[458,460],illustr:[15,865,1075],imag:[348,349,1067],imagefield:349,imageschema:349,immedi:[7,107,540,580,970,977,985],immut:[42,499],implement:[7,58,66,131,167,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,395,396,397,398,399,405,407,428,434,439,458,460,466,483,490,491,538,641,856,968,1075,1077],implicit:[361,463],implicitli:[298,632,949],implicitpref:361,importlib:1,improv:[289,290,308,309],impur:[239,240,245,246,263,266,365,366,369,370,381,382,484,488],imput:303,imputer1:302,imputer2:302,imputermodel:302,imputerpath:302,includ:[0,6,13,195,278,291,294,295,314,320,337,339,341,342,345,385,439,443,485,555,597,629,632,634,635,636,637,653,682,832,865,947,949,953,954,956,963,1040,1075,1077],inclus:[631,704,705,710,711,863,941],incom:[413,424,477],incomplet:57,inconsist:494,incorpor:[865,931],incorrect:[15,302,629,865,947],increas:[24,108,187,220,267,289,290,291,308,309,375,376,414,467,856,1037],increment:[1,187,690,889,1035,1036],incur:460,independ:[271,272,309,314,323,343,383,416,469,472,474,483,874,875],index1:[329,494],index2:[329,494],index:[93,94,145,149,227,229,232,239,240,244,245,246,247,251,258,259,261,263,266,267,271,274,277,289,292,294,298,299,300,302,304,306,308,310,314,316,319,320,321,323,326,329,330,332,334,337,338,341,343,357,361,363,365,366,368,369,370,371,372,375,376,377,381,382,389,392,415,419,425,433,453,454,455,457,458,459,465,467,481,484,486,488,666,676,705,730,791,800,822,835,865,901,911,925],indexedrow:458,indexedrowmatrix:[454,455,457],indexof:[299,433],indextostr:329,indextostringpath:329,indic:[0,145,239,240,241,245,246,248,252,255,263,266,268,270,272,275,277,278,279,281,282,283,284,285,286,287,293,298,304,314,329,330,333,335,337,338,340,357,361,365,366,369,370,372,378,381,382,400,407,408,412,415,419,421,425,453,458,460,467,470,473,475,484,486,488,494,498,578,629,632,634,635,648,652,654,655,666,676,705,813,862,891,901,947,949,951,952,961,962,999,1075],individu:[2,66,306,310,436,1077],inertia:[269,276],inf:[247,248,291,319,371,372,436,629,632,947,949],infer:[7,116,118,270,277,278,279,336,420,421,629,632,638,687,886,887,947,949,955,994,1000],inferschema:[629,947],infin:[79,319,629,632,947,949],info:[22,33,195,270,279,454,484,1066],inform:[7,26,30,45,172,219,221,224,239,240,245,246,263,266,296,339,361,363,365,366,369,370,371,373,374,379,380,381,382,394,484,488,498,504,1075],inherit:[8,41,396,476],inheritablethread:[53,192,193,194],inheritablethreadloc:41,ini:0,initcent:425,initi:[1,7,26,164,221,236,238,241,243,244,250,254,255,257,258,265,274,275,280,367,368,407,408,412,413,414,416,418,420,422,424,425,439,463,470,473,475,477,719,865,958,1066,1075],initializationmod:[418,419],initializationmodel:418,initializationstep:[418,419],initialmodel:[416,418,419],initialpositioninstream:1066,initialrdd:1044,initialvalu:719,initialweight:[255,258,407,408,412,413,469,470,472,473,474,475,477],initmod:[274,275,280,422],initstd:[241,244,367,368],initstep:[274,275],initweight:425,inner:[537,557,578],inout:483,input1:319,input2:319,input:[79,81,121,169,181,182,183,184,185,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,384,385,389,390,392,393,395,396,398,399,402,403,405,409,415,417,419,422,425,431,433,436,437,438,441,443,455,462,464,470,473,475,483,494,538,573,629,630,632,633,634,635,638,641,717,733,736,742,743,746,753,761,762,810,811,860,865,902,905,924,925,947,948,949,950,951,952,955,956,958,1046,1050,1055,1057,1061,1066,1067,1075],input_df:613,inputcol:[0,234,240,246,266,288,289,290,291,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330,331,336,337,338,339,340,341,342],inputformat:[181,182,183,184,190],inputformatclass:[181,182,183,184],inputtoken:312,inputtyp:234,insensit:[239,240,245,246,263,266,365,366,369,370,381,382,398,399,405,648,652,656,657,662,861],insert:[79,650],insid:[26,48,221,387,540,593,629,648,947],inspir:0,instal:[0,1,5,160,162,612,1076,1077],instanc:[7,41,45,147,162,203,207,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,389,390,391,392,393,395,396,397,398,399,400,402,403,404,405,421,427,454,484,493,496,503,593,619,629,632,679,681,696,704,705,777,865,947,949,958,1075],instant:349,instanti:[162,180,196],instead:[1,6,10,15,41,44,45,54,89,94,113,114,162,235,236,237,238,239,242,243,249,250,253,254,256,257,264,265,268,292,304,305,330,332,338,361,365,388,430,435,438,485,487,489,541,588,629,687,720,865,918,919,947,1075,1077],instruct:[1,6,1075],int32:[666,676],int64:[666,865,1075],integ:[7,15,164,294,295,298,299,309,361,362,389,390,462,585,666,676,781,782,783,817,855,856,857,859,863,871,881,888,889,905,939,943,991,997,998,1001,1075],integertyp:[596,687,808,816,865,931,999,1004],integr:[704,705,710,711,752,882,1077],intend:977,intent:1053,interact:[1,8,241,244,367,368,1077],interactionpath:305,intercept:[241,244,247,248,251,252,261,363,364,367,368,371,372,374,377,378,379,380,406,407,408,411,412,469,470,471,472,473,474,475,492],interceptvector:[251,252],interchang:7,interfac:[8,148,149,387,622,623,685,686,946,957,968],intermedi:[361,426,558,819,1077],intermediatestoragelevel:361,intern:[1,9,81,108,150,162,192,193,194,239,240,245,246,263,266,343,345,349,359,365,366,369,370,381,382,399,443,484,485,486,488,619,673,865,931,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1075],interpol:467,interpret:[0,187,498,810,924,933,1057,1077],interquartil:323,interrupt:193,interruptoncancel:[53,193],intersect:[101,575,726],interv:[239,240,245,246,263,266,270,277,278,279,361,365,366,369,370,381,382,486,621,941,967,1006,1008,1014,1023,1035,1036,1043,1045,1046,1051,1066],intlist:[795,868],introduc:619,introduct:7,intuit:483,intwrit:[116,118],invalid:[234,239,240,245,246,263,266,291,314,315,319,320,321,329,330,336,337,338,339,349,365,366,369,370,381,382,811],inventor:259,invers:[296,300,371,372,434,716,717,741,742,744,746,933,1035,1036],invert:[329,1036],invfunc:1035,invoc:[931,977],invok:[0,7,196,454,528,533,931,940],involv:[270,278,279],invreducefunc:1036,ipc:1075,ipv4:33,iqr:323,ir2:375,ir_model:375,ir_path:375,irl:[371,372],irm:[458,467],irrecover:89,irrespect:958,is_cach:102,isact:[966,986],isdefin:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],isdistribut:[270,277,278,279],isin:927,isinst:[419,494],islargerbett:[281,282,283,284,285,286,287],isn:[634,635,654,655,951,952,961,962],isnan:483,isnul:7,iso:[785,792],isol:[192,193,194,1077],isoton:[375,376,466,467],isotonicregress:[376,467],isotonicregressionmodel:375,ispythonparamsinst:396,isset:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],isstream:[947,949,950,953,954,956],issu:[0,8,271,454,619],istranspos:[350,353,354,445,448,450],italian:328,itd:329,item:[9,59,60,76,96,99,107,145,146,290,309,343,344,345,361,362,428,442,443,522,553,569,591,628,644,645,767],item_rec:361,item_subset:361,item_subset_rec:361,itemcol:[361,362],itemfactor:[361,362],itemscol:[343,344],itemset:[343,344,345,441,442,443],iter:[7,69,92,93,94,135,155,165,227,229,232,236,238,239,240,241,243,244,245,246,247,248,250,251,252,254,255,257,258,259,261,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,342,343,345,361,363,364,365,366,367,368,369,370,371,372,374,375,377,378,380,381,382,389,392,406,407,408,411,412,413,414,416,418,420,422,425,439,440,443,458,460,463,469,470,472,473,474,475,477,486,540,580,581,611,687,865,1004],its:[0,16,34,43,48,66,80,102,134,145,150,165,206,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,353,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,413,440,448,470,473,475,476,477,490,496,498,560,573,595,626,646,687,712,801,828,856,865,886,887,1004,1056,1075,1077],itself:[0,1,4,6,1077],jaccard:308,jaccarddist:308,jar:163,java:[0,6,15,120,150,162,181,182,183,184,190,196,210,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,467,632,673,716,741,744,745,765,766,786,872,877,897,898,905,915,916,949,968,1075],java_gatewai:[150,162],java_hom:6,java_model:[239,241,245,248,252,255,260,263,268,270,272,275,278,279,290,293,295,301,303,307,309,311,315,317,321,324,327,330,333,335,338,342,344,362,364,365,367,369,372,376,378,381,415,417,421,423,426,427,428,429,431,435,438,440,442,444,461,464,478,480,482,485,487,489],java_obj:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,269,273,276,373,374,379,380],javagatewai:162,javaobject:[150,162],javaparam:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382],javardd:1062,javasparkcontext:162,javastreamingcontext:1053,javatowritableconvert:[115,116,117,118],jconf:714,jdbc:7,jdf:535,jdk:6,jdstream:1006,jekyl:0,jgd:663,jian:[343,443],jiawei:343,jira:0,jmlr:[277,421],job:[1,23,25,48,53,89,115,116,117,118,145,146,162,165,171,172,192,193,194,1077],job_to_cancel:193,john:[865,931],join:[70,88,110,121,165,202,204,206,290,309,384,494,520,535,537,557,572,648,649,652,653,656,657,658,659,678,727,751,1020,1025,1038,1075],joined_df:537,jordan:277,journal:[277,309,421],jrdd:42,jrdd_deseri:[42,1006],jsc:162,json:[396,398,495,573,610,630,633,634,635,638,649,654,655,712,713,808,811,825,887,922,948,950,951,952,955,960,961,962,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],json_sdf:[949,950],jsonformatschema:[712,713],jsonvalu:[988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],jsparksess:679,jsq:969,jsqm:983,jssc:1046,jst:[810,924],jstring:[811,825],jsummarybuild:388,june:343,jupyt:7,just:[12,14,360,457,459,558,810,924,967,1077],jvm:[0,1,41,162,192,193,194,968,1075],jvmview:150,karp:[569,645],karypi:[267,414],kcl:1066,kdd:414,kearslei:466,keep:[0,210,270,277,278,279,291,314,315,319,320,321,329,330,334,336,337,338,339,458,460,558,621,629,632,947,949],keeplastcheckpoint:[270,277,278,279],keepseri:1042,kei:[27,30,44,50,52,54,59,65,67,70,77,85,88,90,95,96,99,106,107,109,110,112,115,116,117,118,120,124,128,132,136,144,150,151,152,153,154,155,157,158,161,168,179,181,182,183,184,190,194,196,206,222,224,290,308,309,329,338,361,398,399,405,413,423,424,476,477,522,595,634,646,654,664,666,676,677,678,681,712,772,791,793,795,796,800,804,808,811,825,845,846,848,850,867,868,869,920,922,925,926,927,946,951,957,961,999,1018,1029,1035,1044,1075],kept:[202,206,292,293],key1:772,key2:772,keyclass:[116,118,181,182,183,184,190],keyconvert:[115,116,117,118,181,182,183,184,190],keyerror:3,keyfunc:[109,123,124],keytyp:999,keyword:[251,312,322,331,504,865,931],khanna:[538,641],kind:[377,409,687],kinesi:1067,kinesisappnam:1066,kitten:833,kmean:[269,275,276,419,424],kmeans2:274,kmeans_model:274,kmeans_path:274,kmeansmodel:[274,418],knob:460,know:[1,621],known:[90,310,376,407,467,553,644,648,652,656,657,662],kolmogorov:[385,480,483],kolmogorovsmirnovtest:483,kolmogorovsmirnovtestresult:483,krap:880,ksmodel:483,ksresult:385,kstest:483,kth:146,kubernet:[496,1077],kumar:[267,414],kwarg:[1,41,504,527,583,601,602],l_1:469,l_2:474,label1:329,label2:329,label:[231,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,272,275,281,282,283,284,285,286,287,292,293,294,304,320,321,329,330,332,333,337,338,363,364,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,383,389,392,407,409,410,417,426,427,430,466,467,468,470,473,475,483,484,485,486,488,494,666,676,1075],labelcol:[231,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,281,284,285,286,287,292,293,320,321,332,333,363,364,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,383,391],labeledpoint:[406,407,408,409,410,411,412,413,430,469,470,472,473,474,475,477,483,484,486,488,492,494],labelsarrai:330,labeltyp:[332,333],laid:[647,658,964],lamb:124,lambda:[1,16,34,43,62,64,76,86,91,101,105,109,123,124,131,132,137,138,150,189,281,282,329,361,423,439,460,462,679,687,719,793,804,836,845,850,856,925,926,927,931,945],lambda_:[409,463],lang:[716,741,744,745,765,766,786,872,897,898,915,916],languag:[5,6,66,328,341,439,535,629,632,947,949,1076],larg:[7,168,270,278,279,290,309,337,377,389,392,421,483,607,631,651,664,666,676,1015,1075],large_broadcast:34,larger:[267,270,277,278,279,289,290,414,541],largest:[135,145,239,240,241,244,245,246,251,252,255,258,259,260,263,266,306,385,458,460,611],lasso:377,lassowithsgd:469,last:[16,63,79,105,145,162,251,270,277,278,279,291,312,314,315,320,321,322,331,351,355,374,379,380,446,451,467,548,551,607,687,829,859,863,865,905,1056],lastli:0,late:[558,621],latent:[277,278,420,421,463,464],later:[6,7,323,379,380,437,687,859,861,958],latest:[7,413,424,476,477,621,1066],latestmodel:[413,424,476,477],latter:[0,44,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,460,673],launch:[1,45,147,148,149],layer:[89,255,258],lazi:454,lazili:[1,7],lbfg:407,lda:[270,278,279,421],lda_distributed_model:277,lda_local_model:277,lda_path:277,ldaoptim:420,lead:[458,460,494,629,632,648,947,949,1075],leaf:[239,240,245,246,263,266,267,268,365,366,369,370,381,382,414,484,485,486,488],leafcol:[239,240,245,246,263,266,365,366,369,370,381,382],leafid:[240,246,266,366,370,382],learn:[7,8,9,239,240,244,245,246,263,266,270,277,278,279,314,341,365,366,368,369,370,377,381,382,416,421,439,484,486,488,1076],learningdecai:[270,277,278,279],learningoffset:[270,277,278,279],learningr:[439,486],leas:1066,least:[79,83,162,308,340,343,344,361,377,434,460,463,464,469,470,472,473,474,475,478,480,590,621,631,651,812,867],leastabsoluteerror:486,leastsquareserror:486,leav:[239,245,263,365,369,381,787,876],left:[88,239,240,245,246,263,266,338,365,366,369,370,381,382,454,458,460,461,578,833,841,842,892,912,945,1025,1035,1036],left_anti:578,left_out:578,left_semi:578,leftanti:578,leftout:578,leftsemi:578,legaci:1075,legal:[632,949],lemon:95,len:[19,77,95,101,104,108,112,133,267,271,274,291,391,462,464,483,573,841,864,865,884,911,931,1075],length:[0,7,169,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,266,277,281,289,290,291,296,312,322,336,338,341,342,345,420,436,443,483,492,532,583,591,600,601,602,628,629,648,666,676,798,865,891,899,901,905,911,945,947,1050,1075],leo:[239,365],less:[15,239,240,245,246,263,266,270,271,277,278,279,288,294,295,309,312,319,365,366,369,370,381,382,418,428,443,454,458,460,464,501,553,560,626,629,632,644,673,704,705,710,711,827,830,856,862,867,889,947,949,994],lesser:483,let:[3,387,460,1077],letter:[777,820],level:[8,46,74,102,106,108,137,138,174,195,210,267,321,343,344,345,398,414,441,443,454,463,496,497,501,502,539,584,604,687,802,814,1007,1031,1037,1057,1066,1075],leverag:[0,1,7,1077],lib:[6,118,181,182,183,184],liblinear:494,librari:[0,7,8,1066,1076,1077],libsvm:[251,261,494],lifecycl:958,lifetim:[548,549,550,551,588],lift:[343,344],like:[3,15,16,66,167,259,274,290,309,325,361,387,410,454,496,530,541,629,632,634,635,654,655,677,777,805,947,949,951,952,961,962],likelihood:[270,271,273,278,279,416],limit:[45,131,320,407,496,558,629,905,947,1056,1066,1075],lin:[280,422],linalg:[240,244,246,247,251,258,259,261,266,267,271,274,277,281,282,289,290,292,296,297,300,306,308,309,310,313,314,316,318,323,326,332,334,337,339,340,347,350,351,352,353,354,355,356,357,363,366,368,370,371,375,377,382,383,384,386,387,389,392,406,407,408,410,411,412,415,416,417,418,419,421,425,430,431,435,436,438,440,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,467,468,469,470,471,472,473,474,475,483,484,485,486,488,492,494],line:[0,1,121,161,439,494,514,519,531,600,629,632,648,652,662,947,949,956,1057,1077],lineag:[89,384],linear:[241,244,247,248,266,309,367,368,371,372,373,374,377,379,380,382,467,469,471,472,473,474,477,492],linearli:[310,314],linearregress:[378,379,380,470,473,475],linearregressionmodel:377,linearregressionwithsgd:[469,472,474,477],linearsvc:[248,249,250],linearsvcmodel:247,lineno:1,linesep:[629,632,648,652,662,947,949,956],link:[0,45,361,371,372,1077],linkpow:[371,372],linkpredictioncol:[371,372],lint:0,linter:0,list:[0,1,6,7,23,50,51,54,75,77,78,86,90,104,136,153,155,161,162,204,227,229,232,240,244,246,247,251,258,259,261,266,267,268,270,271,274,275,277,289,292,293,294,295,300,302,306,308,310,314,316,319,320,323,326,329,330,332,333,334,335,337,341,343,349,351,357,360,361,363,366,368,370,371,375,377,382,385,387,389,391,392,410,415,417,419,421,425,433,439,446,453,464,468,492,498,522,528,533,538,543,544,560,561,564,569,570,571,572,578,583,586,591,596,597,601,602,607,608,611,626,627,628,629,631,632,633,636,641,645,647,656,657,658,659,660,661,664,673,679,687,708,709,758,812,813,814,831,910,940,947,956,964,966,984,1004,1006,1055,1062,1067],lit:[518,534,719,723,756,791,808,867,886,887],liter:[514,528,533,834,867,940],literatur:[270,277,278,279],littl:124,live:[7,8,1006],load:[51,52,131,132,133,136,150,169,186,206,229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,394,395,396,398,399,402,403,405,406,410,411,417,419,421,423,425,439,440,442,464,467,469,472,474,485,487,489,490,493,494,495,571,573,612,629,630,632,636,637,638,664,666,676,946,947,949,953,954,955,956,1050,1075],load_stream:1,loaddefault:150,loaddefaultstopword:328,loadedassembl:336,loadedbinar:288,loadedbucket:291,loadedcv:294,loadeddtc:296,loadedep:297,loadedhash:298,loadedhashingtf:299,loadedidf:300,loadedimput:302,loadedindex:[329,337],loadedinteract:305,loadedinvert:329,loadedmascal:306,loadedmmscal:310,loadedmodel:[292,294,300,302,306,310,314,316,320,323,326,329,332,334,337,341],loadedngram:312,loadednorm:313,loadedoh:314,loadedpca:316,loadedpipelin:339,loadedpx:318,loadedqd:319,loadedremov:328,loadedretoken:322,loadedrf:320,loadedscal:323,loadedselector:[292,332,334],loadedsqltran:325,loadedstandardscal:326,loadedtoken:331,loadedv:340,loadedword2vec:341,loader:495,loadlabeledpoint:494,loadlibsvmfil:494,loadmetadata:396,loadparamsinst:396,loadvector:494,local:[1,6,7,27,34,71,82,84,89,105,106,107,150,162,165,166,167,168,179,181,183,185,190,192,193,194,202,206,222,270,278,279,289,328,345,440,443,445,446,447,448,450,451,452,453,454,458,460,550,551,576,580,629,632,679,684,810,924,934,947,949,1075],local_model_path:277,local_tim:810,localdoc:439,localhost:1,localldamodel:277,localmodel:277,locat:[0,162,165,302,730,822,1050,1061],lock:193,log2:[245,246,263,266,369,370,381,382,488],log:[79,195,260,270,271,273,278,279,284,371,372,410,416,428,434,460,462],logarithm:[836,837,838,839],logic:[540,563,580,593,599,675,958,972],logist:[235,236,245,246,251,252,253,254,406,407,408,413],logisticregress:[252,261,389,391,392,408],logisticregressionmodel:251,logisticregressionwithlbfg:[406,408],logisticregressionwithsgd:406,logit:[371,372],loglevel:195,loglikelihood:[270,271,273,278,279],logloss:[284,427,486],lognormalrdd:462,lognormalvectorrdd:462,logperplex:[270,278,279],logprior:270,long_col:[865,1075],long_column:[865,1075],longer:[15,89,150,341,342,600,629,677,945,947],longtyp:[15,344,690,816,1075],longwrit:[181,182,183,184,190],look:[483,621],loop:[2,619],los_angel:[634,635,654,655,809,810,917,924,934,951,952,961,962],loss:[236,238,239,243,245,246,247,250,254,257,265,284,365,369,370,377,378,379,380,429,486],losstyp:[245,246,369,370],lost:[270,277,278,279],lot:1,low:[280,334,361,422],lower:[124,251,252,270,278,279,289,290,308,309,310,311,316,317,319,323,324,361,463,467,704,705,856],lowerbound:[509,631],lowerboundsoncoeffici:[251,252],lowerboundsonintercept:[251,252],lowercas:[322,331],lowest:467,lr2:[251,377],lr_model:[251,377],lr_path:[251,377],lrm:[406,407,469,472,474],lsh:[289,308],lz4:[648,652,657,662],lzo:[656,657],m_t:425,mac:4,mach:421,machin:[1,7,8,9,244,341,368,411,412,439,1076],machineri:343,made:[144,589,704,1075],mae:287,magnitud:460,mai:[4,15,23,25,66,67,83,89,135,146,168,193,227,229,232,239,240,241,244,245,246,247,251,252,255,258,259,260,261,263,266,267,270,271,274,277,278,279,281,282,283,284,285,286,287,289,292,294,298,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,355,361,362,363,365,366,368,369,370,371,375,377,381,382,389,392,439,449,451,454,464,494,495,540,541,573,580,590,611,621,629,632,685,712,758,759,801,810,828,924,931,947,949,966,977,1004,1075,1077],mail:0,main:[1,162,573,1046,1077],mainli:7,maintain:[2,6,337,338],mainten:0,major:[350,445],make:[0,3,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,395,397,409,413,424,454,455,458,476,477,553,555,569,606,629,644,645,787,876,947,1066,1077],malform:[629,632,947,949],mallori:[564,627],manag:[1,6,143,270,496,696,983,1067,1076],mani:[0,1,7,9,24,220,271,629,631,651,865,905,947,1075],manipul:535,manner:[193,958],manual:[0,5,1075,1077],map1:843,map2:843,map3:843,map:[1,16,50,58,78,86,90,95,101,105,112,119,144,193,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,428,433,439,440,460,462,484,486,488,564,581,591,627,628,664,665,666,679,687,772,791,795,796,808,836,843,844,845,846,847,848,849,850,868,869,899,922,926,927,999,1006,1029],map_func:193,mapfield:[795,868],mapinpanda:[7,865,1075],mappartit:[165,856],mappartitionswithindex:94,mapper:[106,107],mapr:[115,116],mapreduc:[106,107,116,117,118,181,182,183,184,460],maptyp:[808,922,988,989,990,991,992,993,994,995,996,997,998,1000,1001,1002,1003,1004,1005,1075],mapvalu:77,mari:124,mark:[13,45,48,84,89,140,193,338,617,751],mascal:306,master:[52,59,107,150,159,162,679,1051],mat1:454,mat2:454,mat3:454,mat:[447,454,455,458,460,462],mat_transpos:[454,455],match:[0,15,85,128,235,236,237,238,239,240,242,243,245,246,249,250,251,252,253,254,256,257,263,264,265,266,322,362,365,366,369,370,381,382,421,439,454,458,460,467,514,519,526,530,531,539,564,584,591,617,627,628,629,632,634,635,636,637,666,676,687,712,814,865,877,878,905,912,928,945,947,949,953,954,956,1075],materi:[82,89],math:[423,462,483,716,741,744,745,765,766,786,872,897,898,915,916],mathemat:[318,466,881],matric:[255,258,361,362,454,458,460,463,483,494],matrix:[251,252,270,272,278,279,280,296,317,350,354,360,361,362,383,384,422,427,445,447,449,450,454,455,456,457,458,459,460,461,462,463,464,468,470,473,475,482,483,494,1067],matrixentri:[454,455,458],matter:150,maven:[3,4],max:[7,79,112,239,240,241,244,245,246,247,248,251,252,255,258,263,266,267,268,270,271,272,274,275,277,278,279,280,284,290,294,295,306,307,310,311,341,342,361,362,363,364,365,366,367,368,369,370,371,372,377,378,381,382,387,436,455,458,462,482,483,486,504,535,536,555,606,621,664,704,710,711,728],maxab:[306,307],maxabsscal:307,maxabsscalermodel:306,maxbin:[239,240,245,246,263,266,365,366,369,370,381,382,484,486,488],maxblocksizeinmb:[247,248,251,252,363,364,377,378],maxcategori:[337,338],maxcharspercolumn:[629,947],maxcolumn:[629,947],maxdepth:[239,240,245,246,263,266,365,366,369,370,381,382,484,486,488],maxdf:[294,295],maxim:[270,271,278,279,281,282,283,284,285,286,287,345,389,390,392,393,416,443],maximum:[79,96,239,240,245,246,247,248,251,252,263,266,290,294,295,306,309,319,337,341,342,345,363,364,365,366,369,370,377,378,381,382,387,414,416,417,418,420,421,422,443,458,460,483,484,486,488,538,629,631,641,648,721,728,851,947,994,1075],maxit:[241,244,245,246,247,248,251,252,255,258,267,268,270,271,272,274,275,277,278,279,280,341,342,361,363,364,367,368,369,370,371,372,377,378,389,391,392],maxiter:[414,416,417,418,419,420,422],maxlocalprojdbs:[345,443],maxmalformedlogperpartit:[629,947],maxmemoryinmb:[239,240,245,246,263,266,365,366,369,370,381,382],maxnumrow:7,maxpatternlength:[345,443],maxrecordsperbatch:[581,1075],maxsentencelength:[341,342],maxsiz:[704,710,711],maxtermspertop:[270,278,279,421],mce:284,mce_path:284,mcm:406,mdf:251,mean:[7,11,79,98,125,239,240,245,246,255,258,263,266,267,270,271,272,274,275,276,277,278,279,282,287,302,303,308,326,327,361,363,364,365,366,369,370,371,372,379,380,381,382,385,386,387,414,415,418,419,425,428,429,437,438,455,458,460,462,473,482,483,484,485,486,488,541,555,570,606,629,665,666,667,704,705,710,711,719,814,865,947,1075,1077],mean_func:666,mean_udf:[865,1075,1077],mean_v:[865,1075],meanabsoluteerror:[379,380,429],meanaverageprecis:[286,428],meanaverageprecisionat:428,meanaverageprecisionatk:286,meaning:460,meansquarederror:[379,380,429],meant:[349,499,555,569,606,645],measur:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,267,268,274,275,282,427,786,872],mechan:[120,181,182,183,184,190,632,949],median:[302,303,323,324,538,641,867],meet:[98,130,629,632,947,949],mem:1,membership:417,memori:[2,7,8,44,48,51,52,54,131,132,133,135,136,140,196,206,210,239,240,245,246,247,248,251,252,263,266,363,364,365,366,369,370,377,378,381,382,407,571,611,612,617,664,666,676,867,966,972,984,986,1075],memory_and_disk:[361,539],memory_and_disk_2:1066,memory_and_disk_des:584,memory_onli:[46,102,210,1007],memory_profil:1,menu:1,merg:[43,44,54,67,106,107,116,118,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,636,637,719,736,850,945,953,954],merge_asof:[7,676,1075],mergecombin:[54,1010],mergeschema:[636,637,953,954],mergevalu:[54,1010],meso:[162,1077],messag:[23,361,743,873,1066],metadata:[35,304,337,338,339,349,396,398,495,504,1003,1004],metastor:682,method:[0,1,11,15,16,19,22,34,41,42,51,52,53,81,89,131,132,133,136,145,146,147,150,162,186,193,207,219,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,350,351,352,353,354,355,356,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,450,451,452,453,454,455,456,458,460,461,462,463,464,465,466,467,469,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497,500,502,503,518,535,538,545,571,573,576,577,590,612,619,625,640,641,642,663,675,677,679,681,683,700,714,719,753,784,793,800,804,818,845,850,858,925,926,927,944,945,946,957,958,968,969,970,977,983,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1046,1049,1056,1067,1077],methodnam:384,metric:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,281,282,283,284,285,286,287,289,387,388,389,390,392,393,426,427,428,429,1066],metriclabel:[284,285],metricnam:[281,282,284,285,286,287],mh2:308,mhpath:308,mib:1,michael:466,micro:[958,959],microbatch:967,microf1measur:285,microprecis:285,microrecal:285,microsecond:[810,924,941,1075],middl:958,might:[3,54,458,460,631,651,678,865,1075],mike:525,millisecond:941,min:[7,79,112,173,190,284,309,310,311,387,462,482,483,494,529,536,555,606,664,704,710,711,729],min_udf:664,minconfid:[343,344],mincount:[341,342,439],mind:0,mindf:[294,295],mindivisibleclusters:[267,268,414],mindocfreq:[300,301,434,435],mine:[343,344,345,414,441,442,443,1067],ming:343,minhash:308,minhashlsh:309,minhashlshmodel:308,mini:[244,270,277,278,279,368],minibatchfract:[241,244,367,368,408,412,413,469,470,472,473,474,475,477],minim:[245,246,281,282,283,284,285,286,287,322,343,344,345,369,370,377,441,443,486,621],minimum:[6,79,99,190,239,240,245,246,263,266,267,268,294,295,300,301,322,341,342,365,366,369,370,381,382,387,414,434,439,484,538,621,631,641,729,854,1056,1075],mininfogain:[239,240,245,246,263,266,365,366,369,370,381,382,484],mininstancespernod:[239,240,245,246,263,266,365,366,369,370,381,382,484],minmaxscal:311,minmaxscalermodel:310,minmaxscalerpath:310,minor:[6,1075],minpartit:[168,186,202,206,494],minsplit:190,minsupport:[343,344,345,441,443],mintf:[294,295],mintokenlength:322,minu:[621,797],minut:[621,779,941,967],minweightfractionpernod:[239,240,245,246,263,266,365,366,369,370,381,382],mirror:6,mismatch:[351,355,446,451,865],miss:[27,179,222,235,236,237,238,242,243,249,250,253,254,256,257,264,265,290,298,302,303,309,582,616,625,677],missingvalu:[302,303],mix:[7,251,252,271,377,378,664],mixin:[15,402,404,490,491,493,495],mixtur:[270,271,272,273,277,278,279,416,417],mkdir:206,mkdtemp:[389,392,406,410,411,417,419,421,423,439,464,467,469,472,474,648,649,652,653,656,657,658,659,947,949,950,953,954,956],mlce:285,mlce_path:285,mllib:[7,8,9,251,261,343,346,347,355,357,360,387,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,1067,1076],mlor:251,mlormodel:251,mlp2:258,mlp:258,mlp_model:258,mlp_path:258,mlreadabl:396,mlreader:[229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,394,396,402],mlwriter:[229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,381,382,389,390,392,393,394,398,399,404],mmscaler:310,mod:309,mode:[1,41,45,53,192,193,194,274,275,302,303,332,333,337,349,418,422,563,621,629,632,647,648,651,652,656,657,659,660,661,752,805,882,947,949,958,959,963,966,1077],model1:302,model2:[240,244,246,247,251,258,259,261,266,267,271,274,289,302,308,337,343,361,363,366,368,370,371,375,377,382],model3:[240,258,259,337,366],model4:[259,337],model5:259,model:[227,229,230,231,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,284,289,290,292,293,294,295,299,300,301,302,303,306,307,308,309,310,311,314,315,316,317,319,320,321,323,324,326,327,329,330,332,333,334,335,337,338,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,389,390,391,392,393,396,398,399,400,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,424,425,430,431,434,435,437,438,439,440,441,442,444,463,464,466,467,469,470,471,472,473,474,475,476,477,484,485,486,487,488,489,490,491,493,495],model_path:[240,244,246,247,251,258,259,261,266,267,271,274,343,361,363,366,368,370,371,375,377,382,389,392,442],modeliter:[227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,361,363,366,368,370,371,375,377,382,389,392],modelpath:[289,292,294,300,302,306,308,310,314,316,320,323,326,329,332,334,337,341],modeltyp:[259,260],modif:[267,414,629,632,634,635,636,637,704],modifi:[0,43,44,54,66,150,246,312,322,331,339],modifiedaft:[629,632,634,635,636,637],modifiedbefor:[629,632,634,635,636,637],modul:[0,1,4,8,712,713,1067,1075,1077],modulenotfounderror:1077,modulo:[298,299],moment:[809,1075],mon:[779,861,930],monitor:[1050,1061],monoton:[376,467,856],month:[633,637,639,647,658,661,718,779,781,800,829,859,930,941],more:[3,4,5,58,145,172,236,238,243,247,248,250,251,252,254,255,257,258,259,265,267,294,295,296,308,337,343,344,345,361,362,363,364,371,377,378,396,414,424,443,456,458,460,485,492,496,501,504,535,538,577,621,629,641,648,673,721,793,865,867,905,931,941,947,1006,1015,1036,1055,1066,1075,1076],most:[0,7,8,16,63,105,150,162,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,266,290,302,303,309,312,314,322,329,331,351,355,410,446,451,548,551,553,644,687,966,975,978,1075,1077],move:[418,607,1050,1061],mpi:25,mpi_barri:25,mse:[287,378],much:[3,23,25,77,135,611],multi:[137,138,162,239,240,241,244,245,246,251,252,255,258,259,260,263,266,314,554,592],multi_class_data:406,multiclass:[240,246,261,266,284,427,488],multilabel:285,multilay:258,multilayerperceptronclassifi:[255,256,257],multilayerperceptronclassificationmodel:258,multilin:[629,632,947,949],multinomi:[251,252,254,259,260,272,277,406,407,409,421],multipl:[67,78,111,155,162,192,193,194,210,281,282,283,284,285,286,287,288,290,291,298,309,318,319,328,336,337,377,454,467,494,518,528,533,538,583,601,602,619,629,632,641,704,761,762,865,940,947,949,985,1014,1023,1035,1036,1045,1063,1077],multipli:[297,454,458,460,865,1075],multiply_func:1075,multiply_two_col:1075,multirowdf:329,multivari:[271,272,417,482],multivariategaussian:[272,417],multivariatestatisticalsummari:[460,483],murmurhash3_x86_32:299,murmurhash:299,mus:417,must:[11,15,26,45,48,58,67,79,89,111,162,191,196,202,206,221,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,284,285,286,291,294,295,302,303,308,312,319,322,323,324,331,340,341,342,345,361,362,363,364,365,366,369,370,377,378,381,382,383,384,391,392,393,409,413,420,422,433,439,454,458,460,467,477,483,538,564,569,577,578,583,590,591,601,602,619,627,628,629,632,634,635,636,637,641,645,662,666,676,687,704,712,733,810,867,891,924,941,956,958,965,976,977,994,1014,1023,1035,1036,1045,1050,1061,1075],mutat:[219,865],mutual:0,mvn:4,my_func:1,mypassword:[631,651],mypi:0,myrdd:189,myremotedebugg:1,n_t:425,n_th:425,naiv:[259,409,410],naivebay:[260,410],naivebayesmodel:259,nalic:712,name:[0,1,7,11,15,30,71,119,121,122,150,156,162,181,182,183,184,186,190,202,224,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,383,384,385,389,390,392,393,398,399,405,415,417,420,421,423,426,427,428,429,431,435,438,439,440,442,444,461,464,478,480,482,483,485,487,489,494,496,498,501,504,505,506,507,509,514,515,516,517,518,519,521,523,524,525,526,528,529,530,531,532,533,534,535,537,538,542,543,544,545,547,548,549,550,551,552,553,554,555,557,558,560,561,562,563,564,565,566,567,568,569,570,571,572,575,578,579,583,585,588,589,590,591,592,593,596,597,599,600,601,602,606,607,608,609,610,611,612,614,615,616,619,620,621,626,627,628,629,630,631,632,633,634,635,637,639,641,642,643,644,645,647,648,649,651,652,654,655,656,657,658,659,660,661,662,664,666,667,671,672,673,674,676,677,678,680,681,687,688,690,708,709,712,713,719,722,723,724,725,726,728,729,731,733,734,737,738,739,757,760,768,772,788,789,790,791,793,795,796,798,800,802,804,805,806,810,812,813,814,821,825,827,830,831,843,844,845,846,847,848,849,850,862,865,868,869,874,875,880,891,895,899,902,903,910,920,922,924,925,926,927,931,945,947,948,949,951,952,956,960,961,962,964,965,966,984,986,1003,1004,1050,1061,1066,1075,1077],namedtemporaryfil:[119,121,186,494],namedtupl:687,namespac:712,nan:[291,302,319,323,336,361,362,384,483,520,629,632,823,860,947,949],nanosecond:1075,nanvalu:[629,947],narrow:[0,541],nativ:[1,7,581,665,666,676,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1075,1076],natur:[341,439,836,838,902],nb2:259,nb3:259,nb5:259,nb_model:259,nb_path:259,nbar:121,ncall:1,nchannel:349,ndarrai:[349,350,351,353,354,355,356,357,410,415,417,419,425,445,446,448,450,452,453,467],ndcg:428,ndcgat:428,ndcgatk:286,nearest:[269,276,290,309,415,419,425],neariso:466,nearli:466,necessari:[290,309,1075],necessarili:6,need:[10,12,15,39,43,44,89,131,135,145,150,270,339,357,361,384,453,483,496,497,501,502,611,621,629,631,660,673,687,704,947,985,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1075,1077],needconvers:[988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],neg:[289,290,308,309,406,411,483,593,629,632,901,912,947,949],negativeinf:[629,947],neighbor:[290,309],neither:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],nest:[11,494,518,678,802,865,941,1075],nestedfield:11,net:377,netflix:460,netti:6,network:6,neuron:[255,258],neutral:[43,44,66,67],new_data:[343,927],newli:[6,361,683],newlin:[486,632,652,949],newpredict:[247,261,267,271,274,343,361,377],newprob:251,newrawpredict:266,nexampl:492,next:[0,135,227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,290,292,294,300,302,306,308,309,310,314,316,319,320,323,326,329,332,334,337,341,343,361,363,366,368,370,371,375,377,382,389,392,611,787,830,876,958],next_dat:776,next_month:718,nfeatur:492,nfoo:121,ngrampath:312,nnnnn:206,node:[160,162,165,168,181,183,190,193,202,206,210,239,240,245,246,263,266,365,366,369,370,381,382,484,485,486,487,488,489,541,563,1075,1077],nois:492,nomin:[305,338],non:[0,14,66,140,279,299,308,310,319,334,338,351,355,357,363,364,387,389,396,433,446,451,453,455,458,460,506,507,516,517,553,560,564,591,617,622,626,627,628,629,644,667,671,672,674,704,735,738,739,758,759,789,790,801,828,856,862,874,875,895,904,947,958,1075],nondeterminist:361,none:[0,12,15,26,27,34,44,50,54,61,67,70,73,76,77,85,88,96,99,103,104,106,109,110,111,112,115,116,117,118,120,121,123,124,127,128,132,133,136,150,152,157,162,164,168,177,180,181,182,183,184,185,186,187,189,190,202,206,221,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,387,388,389,390,392,393,396,398,407,408,412,416,418,420,421,427,460,462,463,470,473,475,483,488,494,497,499,502,505,506,507,515,516,517,520,523,524,528,533,545,558,559,560,563,564,569,571,578,586,591,594,595,626,627,628,629,631,632,633,636,642,645,646,648,650,651,652,656,657,659,660,662,673,677,679,681,687,690,719,720,721,727,728,729,733,743,756,761,791,796,802,808,811,824,825,827,830,836,865,869,874,875,889,895,902,921,923,931,934,940,941,947,949,950,953,954,956,966,967,970,971,975,982,985,988,999,1000,1003,1004,1009,1010,1014,1020,1022,1023,1024,1025,1034,1035,1036,1038,1039,1044,1045,1046,1048,1052,1053,1055,1066],nonneg:[259,280,361,409,422,463,464],nonposit:494,nonsens:0,nonzero:[280,294,295,351,355,422,446,451],noqa:[629,632,636,637,648,652,947,949,953,954,956],nor2:436,nor:436,norm:[290,313,351,355,357,379,380,385,387,429,436,446,451,453,483],normal:[104,239,244,245,263,272,280,290,310,365,368,369,377,378,379,380,381,385,417,422,460,462,483,586,631,651,665,666,875],normalizerpath:313,normalrdd:462,normalvectorrdd:462,norml1:[387,482],norml2:[387,482],norwegian:328,notat:460,note:[0,1,4,6,7,22,23,25,26,28,33,41,45,51,52,54,58,73,77,81,83,111,131,132,133,136,143,147,148,149,150,162,165,166,168,192,193,194,206,221,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,266,270,271,272,277,278,279,280,284,285,286,288,289,290,291,294,295,296,302,308,309,310,314,315,319,320,323,328,339,343,345,357,361,362,363,365,366,369,370,371,377,379,380,381,382,384,387,389,390,414,421,425,433,435,438,440,453,458,460,466,468,470,475,483,485,487,489,496,497,498,499,500,501,502,520,538,539,540,555,569,571,577,580,581,584,590,593,594,599,606,612,617,619,621,623,629,631,641,645,647,651,664,665,666,675,676,678,687,692,696,700,712,713,730,753,758,759,777,784,791,801,814,818,822,828,835,856,858,865,874,875,895,904,911,931,944,946,947,948,949,950,951,952,955,956,957,958,959,960,961,962,963,964,965,966,967,969,977,983,999,1055,1066,1076,1077],notebook:[7,8,1077],notic:1077,now:[1,6,11,12,14,905,960,1075],npart:492,npoint:492,nth:862,null_replac:727,nullabl:[7,349,585,865,867,1003,1004,1075],nulldevi:[373,374],nullhypothesi:[478,480,483],nullvalu:[629,648,947],num:[131,132,133,136,342,440,464,579,607,608,1032],number:[1,7,23,24,25,56,58,59,67,70,72,79,88,108,110,111,131,144,146,162,164,169,173,181,182,183,184,187,190,220,231,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,289,290,292,293,294,295,298,299,300,301,308,309,312,315,316,317,319,332,336,337,338,341,342,343,344,345,351,355,357,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,387,389,390,392,406,407,408,410,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,430,433,434,435,439,440,441,443,446,451,453,454,455,456,458,460,462,463,464,465,470,473,475,477,478,480,481,483,484,485,486,487,488,489,492,494,496,501,538,541,546,553,571,579,589,590,600,629,631,632,641,644,647,669,690,704,705,763,767,780,787,805,809,810,827,830,832,856,859,862,876,883,905,924,933,939,947,949,978,994,1014,1015,1023,1032,1035,1075],numbin:281,numbit:[891,892,893,894],numbucket:[319,647,753],numbucketsarrai:319,numclass:[235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,260,263,264,265,406,407,484,488],numcol:[350,352,353,354,445,447,448,450,454,455,456,458,460,462],numcolblock:454,numdoc:[300,301,435],numer:[169,271,298,302,305,320,321,329,338,346,373,374,383,385,458,460,538,555,591,606,628,631,641,667,670,671,672,674,704,740,805,867],numfeatur:[231,239,240,241,245,247,248,251,252,255,260,263,292,298,299,332,337,338,364,365,366,367,369,370,371,372,375,376,377,378,381,382,406,430,433,494],numfold:[389,390],numhasht:[289,290,308,309],numinst:[373,374,379,380],numit:[269,273,276],numitem:362,numitemblock:361,numiter:[374,413,439,477,486],numlabel:[320,321,329,330],numnearestneighbor:[290,309],numnod:[239,240,365,366,485],numnonzero:[351,355,387,446,451,482,483],numpartit:[44,49,50,54,61,67,70,76,77,85,88,101,106,108,109,110,123,124,127,128,341,342,343,344,439,441,462,541,589,590,631,690,1009,1010,1014,1020,1022,1023,1024,1025,1030,1034,1035,1037,1038,1044],numpi:[0,6,246,266,268,275,349,350,351,353,354,355,356,357,370,382,406,410,411,415,417,419,421,425,445,446,448,450,451,452,453,462,468,484,666,676,865,1075],numrecentprogressupd:978,numrow:[350,352,353,354,445,447,448,450,454,455,456,458,460,462],numrowblock:454,numslic:[185,187],numtopfeatur:[292,293,332,333,430],numtre:[245,246,263,266,369,370,381,382,486,487,488,489],numus:362,numuserblock:361,obj:[988,989,990,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004],objc_disable_initialize_fork_safeti:4,object:[16,19,43,66,119,120,125,150,162,164,170,180,181,182,183,184,190,200,236,238,241,243,248,250,252,254,255,257,263,265,299,357,377,380,384,388,401,415,418,419,421,424,425,453,460,464,483,493,581,632,638,652,666,676,677,758,759,811,865,931,949,955,958,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1046,1047,1057,1066,1075],objectivehistori:[236,238,243,250,254,257,265,380],observ:[270,281,282,283,284,285,286,287,429,460,478,480,483],obtain:[22,235,236,237,238,242,243,249,250,428,478,480],occur:[281,363,364,416,435,629,632,634,635,636,637,1075],occurr:[302,303,383,465,481,553,644,730,822,835,912],ocvtyp:349,off:[14,41,193,195,460,629,704,710,859,947],offici:[0,6],offset:[371,372,634,635,654,655,704,705,810,827,830,862,924,941,951,952,961,962],offsetcol:[371,372],oflass:[251,252],often:[193,239,240,245,246,263,266,270,277,278,279,365,366,369,370,381,382,958],ohe:314,ohepath:314,old:[12,115,116,181,182,425,494,1035,1036,1056],older:[558,1075],oldvec:347,oldvector:347,omit:[7,12,560,591,626,628,677,681,687,865,921,923,1075],onc:[3,35,150,165,166,170,193,288,291,319,328,389,390,392,535,619,629,632,947,949,958,967,1055],one:[0,1,7,43,44,47,54,81,125,131,139,144,145,161,162,164,227,229,232,233,234,236,238,239,240,241,243,244,245,246,247,250,251,252,254,255,257,258,259,260,261,262,263,265,266,267,271,274,277,287,289,292,294,298,300,302,305,306,308,310,314,315,316,317,319,320,323,326,329,332,334,337,340,341,343,361,362,363,366,367,368,370,371,375,377,382,383,385,388,389,392,454,455,456,458,467,478,480,485,494,504,528,533,541,577,578,590,597,600,610,629,631,632,648,652,656,657,660,662,666,673,676,678,683,690,704,710,763,785,792,793,797,800,802,827,830,836,838,865,905,925,940,941,945,947,949,958,967,973,1041,1055,1075,1077],oneatatim:1055,oneatwobthreec:905,onehotencod:[298,315],onehotencodermodel:314,ones:[377,494],onethird:[245,246,263,266,369,370,381,382,488],onevsrest:262,onevsrestmodel:261,onli:[0,1,7,8,15,16,18,45,51,52,62,83,90,102,131,132,133,136,143,162,165,166,170,207,247,270,277,279,284,291,292,294,295,314,315,325,336,337,343,361,362,371,372,375,377,378,379,380,385,389,392,395,397,406,411,430,440,454,455,466,483,484,488,504,538,545,558,560,563,571,574,584,591,612,621,626,628,629,632,634,635,636,637,641,642,648,662,687,690,704,753,784,802,818,836,858,944,947,949,953,954,956,959,963,966,967,972,973,977,1016,1035,1056,1075],onlin:[270,277,278,279,420,425,538,641],oom:[389,392,664,666,676],open:[1,6,79,165,202,204,206,958],opencv:349,openhook:121,oper:[7,16,42,43,44,66,67,90,98,102,105,106,107,125,130,235,236,237,238,242,243,249,250,298,320,361,426,454,541,584,624,648,651,652,653,656,657,659,660,668,719,865,959,1006,1015,1051,1075],opt1:633,opt2:633,opt3:633,optim:[14,15,241,244,247,248,251,252,255,258,270,277,278,279,341,342,363,364,367,368,371,372,377,378,420,460,538,563,641,931,972,1075],optimist:339,optimizedocconcentr:[270,277,278,279],optimum:271,option:[0,6,15,35,39,58,96,99,103,104,111,115,116,117,118,120,121,132,135,137,138,140,150,162,165,180,181,182,183,184,187,190,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,349,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,383,384,388,389,390,392,393,396,398,399,405,407,408,409,412,413,414,416,418,420,421,422,424,426,427,429,430,433,436,437,441,443,454,455,458,460,462,463,466,470,473,475,477,483,484,486,488,494,496,504,540,545,558,560,563,564,569,571,572,578,580,583,586,589,591,594,595,600,601,602,611,616,626,627,628,629,631,632,633,636,637,642,645,646,647,648,650,651,652,653,656,657,659,660,661,662,678,679,681,683,687,690,712,713,714,719,721,807,808,827,830,835,862,865,886,887,902,905,920,921,922,923,947,949,950,953,954,956,958,963,966,967,972,988,994,999,1004,1014,1023,1032,1035,1045,1046,1048,1055,1057,1060,1066,1075,1077],orantiton:[375,376],orc_df:656,orc_partit:[636,656],orc_sdf:953,order:[0,1,4,7,15,28,66,77,132,136,145,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,351,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,384,389,390,392,393,421,427,446,458,460,461,464,467,483,494,505,506,507,515,516,517,583,590,601,602,619,677,700,702,704,708,733,737,738,739,758,759,788,789,790,801,828,863,865,867,880,902,941,1062,1077],orderbi:[361,383,505,506,507,515,516,517,529,554,592,595,601,646,700,704,705,813,814,865],ordereddict:[666,676],ordin:522,ordinari:377,org:[0,6,115,116,117,118,120,121,181,182,183,184,190,298,340,343,421,443,460,538,569,629,632,634,635,636,637,641,645,947,949,953,954,956,976,1047],orient:[458,460],origin:[3,12,65,93,94,95,149,239,240,241,244,245,246,251,252,255,258,259,260,263,266,277,287,290,298,309,311,315,338,340,349,373,374,414,421,439,666,676],originalmax:[310,311],originalmin:[310,311],origvec:296,orthogon:449,oserror:[410,417,419,421,423,439,464,467],other:[0,1,5,7,8,9,12,47,50,70,78,81,85,88,110,127,128,139,144,164,165,166,190,239,280,282,297,351,355,361,365,446,451,454,462,504,510,511,512,514,519,520,526,530,531,545,552,560,562,564,574,575,578,583,591,593,601,602,605,614,615,616,619,626,627,628,632,633,634,635,637,642,654,655,659,660,668,810,924,949,950,951,952,958,961,962,966,1006,1009,1020,1024,1025,1038,1042,1043,1076],otherwis:[0,15,23,25,48,152,162,251,252,291,298,299,363,364,373,374,375,376,378,406,411,533,629,631,648,651,712,723,727,735,743,795,796,865,868,869,889,925,927,940,947,1075,1077],our:[195,407,408,412,439,473],out:[1,5,111,120,162,210,235,236,237,238,242,243,249,250,253,254,256,257,264,265,270,291,294,295,302,319,320,321,328,329,330,336,337,338,339,361,389,390,427,434,496,503,518,522,585,622,623,647,658,964,1075],out_a:302,out_b:302,outcom:[383,406,407],outer:[70,88,110,578,1020,1025,1038],outlin:563,outofmemoryerror:607,output1:[288,319],output2:[288,319],output:[54,81,106,115,116,117,118,120,234,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,266,270,271,272,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,347,361,363,364,373,374,375,376,379,380,391,398,399,405,406,411,437,443,454,538,563,581,590,600,621,632,641,647,649,654,655,658,661,662,666,673,676,713,865,910,941,949,958,959,960,961,962,964,1067,1075],outputcol:[0,234,240,246,266,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],outputdatatyp:234,outputformat:[115,116,117,118],outputformatclass:[116,118],outputmod:966,outsid:[0,291,1056],over:[77,150,189,227,228,231,232,233,234,235,236,237,238,239,242,243,245,249,250,253,254,256,257,261,262,263,264,265,270,272,277,278,279,283,304,318,328,338,359,365,369,381,389,390,392,393,413,420,421,457,459,476,477,487,489,555,619,629,665,679,704,705,865,947,1004,1014,1015,1023,1035,1036,1045,1075],overflow:[15,819],overlap:[340,389,735],overload:0,overrid:[195,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,398,399,405,629,632,636,637,656,657,947,949,953,954],overview:1067,overwrit:[398,399,405,560,626,647,648,650,651,652,653,656,657,659,660,661],ovr:261,ovr_model:261,owlqn:247,own:[0,3,4,319,681],p362:903,pack:1077,packag:[1,3,4,6,115,116,117,118,387,494,1076],pad:[296,841,884],page:[0,1,5,6,9,363,371,1067,1076],pair:[47,52,60,65,70,85,88,95,101,110,115,116,117,118,120,124,128,144,150,153,155,157,161,168,206,280,290,309,314,357,383,389,391,421,422,428,453,460,464,483,553,644,681,772,845,926,927,933,1018,1029,1035,1044],pairwis:[241,244,367,368],panda:[1,6,7,12,14,15,520,581,612,664,666,676,687,865,1076,1077],pandas_df:7,pandas_filter_func:7,pandas_plus_on:7,pandas_udf:[7,13,15,581,664,665,666,676,1075,1077],pandascogroupedop:[668,865,1075],pandasudftyp:[664,665,865,1075],papadimitri:[569,645],paper:[267,270,277,278,279,280,414,421,422,439,466],parallel:[1,7,16,19,34,42,43,47,49,50,52,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,74,75,76,77,78,79,81,83,85,86,87,88,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,119,121,122,123,124,126,127,128,129,130,131,132,133,135,136,137,138,139,141,142,144,145,146,165,174,186,189,193,204,247,251,259,261,267,274,275,329,343,344,345,375,387,389,392,406,407,410,411,414,415,417,419,421,423,425,426,427,428,429,430,432,434,436,437,439,441,442,443,444,454,455,458,460,463,464,466,467,469,472,474,479,483,484,486,488,494,541,558,631,651,679,687,688,856,1037],param:[15,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,360,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,385,389,390,391,392,393,395,396,397,398,483,629,947],paramet:[35,39,58,96,99,103,111,115,116,117,120,121,135,138,150,155,162,169,180,182,183,184,187,190,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,357,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,383,384,385,388,389,390,391,392,393,396,398,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,426,427,428,429,430,433,434,435,436,437,438,439,440,441,443,447,453,454,455,457,458,459,460,462,463,466,467,468,470,471,473,475,477,483,484,485,486,488,492,493,494,495,496,498,501,504,510,511,512,514,519,520,526,528,529,530,531,532,533,537,538,540,541,542,545,547,552,553,557,560,563,564,565,569,570,571,572,578,580,581,583,586,589,590,591,594,595,597,600,601,602,609,611,613,616,619,620,621,626,627,628,629,630,631,632,633,636,637,638,639,641,642,643,644,645,646,647,648,649,651,652,656,657,658,659,660,661,662,664,665,666,667,671,672,673,674,676,678,680,681,684,687,690,704,705,708,709,710,711,712,713,719,721,722,723,724,725,726,728,729,731,733,734,736,745,765,766,772,779,786,791,793,800,802,804,805,806,807,808,810,811,812,825,827,830,831,835,843,844,845,846,847,848,849,850,861,862,863,865,867,872,880,886,887,895,897,898,899,901,902,905,910,915,916,920,922,924,925,926,927,930,931,940,945,947,948,949,950,953,954,955,956,960,964,965,966,967,972,988,994,999,1003,1004,1008,1014,1023,1032,1035,1036,1043,1044,1045,1046,1048,1049,1050,1051,1053,1054,1055,1056,1057,1060,1062,1066,1067],parametr:363,paramgridbuild:[389,392],parammap:[227,229,232,240,244,246,247,251,258,259,261,262,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,361,363,366,368,370,371,375,377,382,389,390,392,393,398],paramnam:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393],parent:[48,229,231,232,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,358,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,484,1006],parquet:[495,535,630,633,639,647,649,653,658,661,679,948,950,960],parquet_partit:[633,637,639],parquet_sdf:954,pars:[446,451,453,494,563,629,632,634,635,712,798,807,808,886,887,947,949,951,952,956,972],parser:[629,632,947,949],part:[6,121,189,206,406,462,494,629,636,637,648,752,882,947,953,954],parti:1077,partial:[664,1075],particular:[89,424,483],partit:[28,29,42,43,44,49,54,65,66,69,70,72,75,77,83,88,90,92,93,94,95,101,105,106,108,109,110,131,135,144,145,146,148,149,173,176,187,189,210,223,247,248,251,252,255,258,270,277,278,279,341,342,343,344,361,362,363,364,377,378,389,439,441,462,494,541,568,589,590,602,611,621,629,631,632,634,635,636,637,651,654,655,656,657,658,659,660,690,700,703,705,709,753,773,784,787,818,827,830,856,858,863,866,876,883,904,944,947,949,951,952,953,954,956,958,961,962,964,966,1009,1014,1020,1023,1024,1025,1030,1035,1038,1075],partition:[90,101,106,109,1030],partition_id:958,partitionbi:[529,656,657,659,660,700,704,705,865,966,1075],partitionedbi:[624,753,784,818,858,944],partitionfunc:[44,54,67,76,77,101,106,109,189,1030],partitionid:958,pass:[7,23,65,95,150,155,157,165,166,181,182,183,184,239,240,245,246,263,266,355,357,365,366,369,370,381,382,406,410,411,417,419,421,423,439,451,453,464,467,469,472,474,483,504,581,629,666,676,947,1077],password:[631,651],past:[1,941,985,987],path:[1,3,34,38,116,118,119,120,121,150,160,162,165,166,168,169,175,181,183,190,191,202,204,206,207,208,229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,349,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,395,396,397,398,399,402,403,404,405,406,410,411,417,419,421,423,425,439,440,442,464,467,469,472,474,485,487,489,490,491,493,494,495,629,632,633,634,635,636,637,648,649,652,653,656,657,658,659,662,811,947,949,950,953,954,956,966],pathglobfilt:[629,632,634,635,636,637,947,949,953,954,956],pattern:[137,138,322,343,344,345,443,526,629,632,634,635,636,637,648,652,679,777,877,878,905,921,923,934,947,949,953,954,956,1067,1075],paul:460,pav:466,pca:[317,460],pca_featur:316,pcamodel:316,pcapath:316,pdf:[414,422,466,581,665,666,1075],pearson:[373,374,383,384,483,545,642,764],pearsoncorr:[384,483],pei:[343,345,443],penalti:[251,252,377,378,469,474],peopl:[535,548,549,550,551,568,573,588,630,632,633,787,876],people1:633,pep:0,per:[79,161,162,169,239,240,245,246,261,263,266,312,314,362,365,366,369,370,381,382,383,413,460,464,477,496,501,541,600,632,712,713,949,1066,1075],percal:1,percentag:[606,867],percentil:[292,293,332,333,430,606,866,867],perceptron:258,perform:[0,15,70,77,81,85,88,89,106,107,108,110,168,185,261,271,289,290,296,308,309,318,383,387,389,420,425,454,483,578,590,619,664,673,865,912,1075],period:[89,420,967,1006,1008,1051],permiss:[629,632,947,949],permit:278,permut:[309,895],perplex:[270,278,279],persist:[46,48,140,454,539,604,617,682,973,979,1007],person:[567,568,677,687,787,876],peter:903,pex:1076,pfp:343,phrase:439,physic:[563,972],physica:466,pic2:280,pic:[280,422],pic_path:280,pick:[261,262,309,332,387,1055],pickl:[120,190],pickle_registri:34,picklefil:119,pickleseri:[42,119,162,190],pid:[1,904],piec:277,piecewis:467,pin:[41,53,192,193,194],pip:[0,1,6,1075,1077],pipelin:[8,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,1067],pipelinemodel:[229,339],pivot_col:673,place:[0,20,270,277,278,279,319,420,541,733,752,787,805,876,882,902],placehold:[302,303],plan:[7,45,337,540,563,580,593,599,619,972],platform:[6,8],pleas:[0,1,3,4,9,45,148,149,458,460,483,712,713,998,1075],plu:[7,455,458,838],plus_mean:7,plus_on:[865,1075],pmml:[377,399],poi:462,point:[6,7,15,162,164,267,268,269,271,273,274,275,276,282,289,291,319,406,411,413,414,415,416,417,418,419,423,424,425,455,458,460,468,477,479,483,485,487,489,492,494,591,621,628,632,679,745,827,830,860,949,958,1046,1072],poisson:[371,372,373,374,462],poissonrdd:462,poissonvectorrdd:462,polar:745,poli:318,polici:1066,polyexpansionpath:318,polynomi:318,pool:[194,375,466],poorli:271,popul:[424,479,769,908,936],port:[1,33,162,1057],portable_hash:[44,54,67,76,77,101,106,109,1030],portion:864,portugues:328,pos:[835,864,868,869,911],posexplod:869,posit:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,270,277,278,279,286,292,332,406,411,427,428,430,455,458,460,504,522,532,562,569,575,614,615,616,629,632,645,666,676,677,705,711,730,791,822,835,859,864,867,868,869,911,912,947,949,1004,1066,1075],positiveinf:[629,947],possibl:[0,23,25,235,236,237,238,239,241,242,243,245,248,249,250,252,255,260,263,270,302,319,360,398,399,405,406,528,533,558,569,645,777,905,940,967,1075],potenti:[57,664,666,676],power:[8,280,298,299,371,372,422,424,425,870,945],poweriterationclust:423,poweriterationclusteringmodel:422,ppid:1,practic:[6,8,58],pre:[6,135,361,494,611],preced:[304,700],precis:[235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,263,264,265,266,271,272,284,285,302,303,319,323,324,426,427,428,470,473,475,538,641,941,994,995,996],precisionat:428,precisionatk:286,precisionbylabel:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284,285],precisionbythreshold:[235,236,237,238,242,243,249,250],predandlabelswithoptweight:427,predic:[62,631,793,800,804,845,1016],predict:[231,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,281,282,283,284,285,286,287,292,343,344,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,406,407,410,411,413,415,417,419,424,425,427,428,429,464,467,469,472,474,476,477,484,485,486,487,488,489],predictal:464,predictionandlabel:[427,428],predictionandlabelswithprob:[284,427],predictionandobserv:429,predictionandobservationswithoptweight:429,predictioncol:[231,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,282,284,285,286,287,343,344,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,391],predictleaf:[239,245,263,365,366,369,370,381,382],predicton:[413,424,476,477],predictonvalu:[413,424,476,477],predictor:[239,365,371,372],predictprob:[239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272],predictquantil:[363,364],predictraw:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266],predictsoft:417,prefer:[0,168,206,361,463,518,665,865,1075],prefersdecim:[632,949],prefetch:[135,611,865,1075],prefetchpartit:[135,611],prefix:[345,443,1039],prefixspan:444,preorder:[239,240,245,246,263,266,365,366,369,370,381,382],prepar:[1,2],prepend:[235,236,237,238,242,243,249,250],present:[314,315,337,465,481,494,538,577,641,931,1004],preserv:[328,337,562,575],preservespartit:[64,91,92,93,94,148,149,1017,1026,1027,1028],pretti:922,prev_dat:778,prevent:[0,476],previou:[1,424,425,827,1044,1075,1077],previous:[12,14,15,186],prime:309,primit:[1,16,632,865,949,1075],primitivesasstr:[632,949],princip:[316,317,460],print:[68,69,74,150,193,197,240,246,319,366,370,384,454,455,458,460,483,484,486,488,563,567,568,585,600,958,972,1032,1075,1077],print_row:958,printabl:161,printf:806,printschema:[7,865,867,1075],prior:[12,15,260,270,277,278,279,410,420,865,977],prioriti:[150,267,414],privat:349,probabilist:[294,295,299],probabilitycol:[235,236,239,240,241,244,245,246,251,252,253,254,255,258,259,260,263,266,271,272,273,284],probabl:[111,235,236,237,238,239,240,241,242,243,244,245,246,249,250,251,252,253,254,255,258,259,260,263,266,270,271,272,273,281,284,310,363,364,385,410,427,460,478,479,480,483,538,641],probit:[371,372],problem:[0,337,406],proce:[629,947],procedur:[292,332,430],proceed:[343,443,864],process:[1,3,8,103,162,271,337,341,345,439,443,494,607,621,958,959,967,977,1055,1060,1075],processallavail:972,processingtim:[966,967],produc:[229,269,270,273,276,278,279,305,309,423,629,796,869,947,1075],product:[13,47,297,305,318,351,355,361,362,432,446,451,460,463,464,465,552,1075],productfeatur:464,productid:463,products_for_us:464,profession:2,profil:[2,73,143,162,175,197,499,500],profile_memori:1,profiler_cl:162,program:[1,5,7,8,16,18,679,1006,1053,1054,1072,1075,1076],programm:193,programmat:[496,497,501,502],progress:[975,978],project:[298,316,345,443,597,598,619],prone:12,propag:[16,681,714],properli:[3,6,192,193,194],properti:[18,27,40,41,55,150,154,158,162,167,173,174,179,188,192,193,194,196,199,203,205,222,280,422,544,561,577,582,587,596,603,604,622,623,631,651,681,685,686,691,692,693,696,698,699,973,974,975,976,978,979,980,984,1006,1058],proport:[267,268,317,414],propos:[569,645],provid:[0,1,6,7,8,15,16,21,45,54,77,79,104,111,164,270,291,297,304,322,359,371,372,385,387,388,395,397,400,402,404,413,415,418,424,460,467,477,483,491,586,594,629,632,634,635,636,637,743,785,792,873,905,941,958,959,966,1053,1054],prune:629,pseudocod:[865,1075],pst:[810,924],pub:466,pull:1066,purpos:[162,563,621,972],put:[319,320,321,329,330,337,338,629,632,704,856,947,949],pvalu:[374,379,380,383,385,478,480,483],pvm:[192,193,194],pwd:6,py4j:[1,6,150,162],py4jjavaerror:[16,687],pyarrow:[6,15,1076,1077],pycharm:2,pycodestyl:0,pydevd:1,pydevd_pycharm:1,pyfil:[162,1077],pyi:0,pypi:5,pyrolit:[120,190],pyspark:[2,3,5,6,7,9,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1067,1076],pyspark_conda_env:1077,pyspark_driver_python:1077,pyspark_env:6,pyspark_hadoop_vers:6,pyspark_pex_env:1077,pyspark_pin_thread:[192,193,194],pyspark_python:1077,pyspark_release_mirror:6,pyspark_row_field_sorting_en:15,pyspark_venv:1077,python3:4,python:[0,2,3,4,5,7,8,10,11,15,41,115,116,117,118,120,162,181,182,183,184,185,187,190,210,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,357,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,435,438,453,485,487,489,581,629,630,632,633,636,637,639,656,665,666,676,719,793,800,804,845,850,865,925,926,927,931,945,958,968,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1075,1076],pythonpath:[6,162],qds1:319,qds2:319,qds3:319,qrdecomposit:460,quadrat:[379,380,429],qualifi:[11,115,116,117,118,120,121,181,182,183,184,190,399],qualifiednam:190,qualiti:460,quantil:[302,303,319,323,324,363,364,538,641,867],quantilediscretizerpath:319,quantileprob:[363,364],quantilescol:[363,364],quarter:[779,863],quartil:[323,606],queri:[8,343,428,439,593,599,621,685,694,774,775,931,958,959,963,965,966,967,968,969,970,971,973,974,975,976,978,979,980,981,984,985,986,987,1056,1067],query_explain:972,querynam:[966,972,976,984,986],queue:1055,quick:5,quickstart:5,quot:[629,632,648,947,949],quotat:[629,947],quoteal:648,r26:309,r2adj:[379,380],r_i:290,radian:[765,786,915,919],rais:[15,26,79,193,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,424,425,465,481,619,870,1075],raise_error:[629,947],rand:1075,randn:867,random:[104,111,239,240,241,244,245,246,255,258,263,266,267,268,270,271,272,274,275,277,278,279,280,289,290,308,341,342,361,365,366,367,368,369,370,381,382,389,390,392,393,414,416,418,419,420,422,424,439,462,463,488,489,492,594,595,646,874,895,931,1067,1075],random_udf:931,randomforestclassif:264,randomforestclassifi:[239,263],randomforestclassificationmodel:266,randomforestclassificationtrain:265,randomforestmodel:488,randomforestregressionmodel:382,randomforestregressor:[365,381],randomli:[104,261,262,309,389,390,392,393,586,680],rang:[1,19,34,57,58,64,79,86,90,98,104,105,111,112,121,130,131,133,135,144,185,186,189,193,245,246,251,252,258,263,266,270,277,278,279,282,284,291,302,303,306,310,311,319,323,324,350,351,361,362,363,364,369,370,377,378,381,382,389,390,423,436,445,446,494,590,593,594,595,599,646,700,704,705,764,856,867,886,887,998],rangebetween:700,rangeexchang:590,rangefram:700,rank:[286,361,362,373,374,384,428,463,464,529,538,641,787,866],ranke_path:286,rare:[294,295],rate:[112,235,236,237,238,242,243,245,246,249,250,253,254,256,257,264,265,270,277,278,279,289,290,292,293,308,309,332,361,362,369,370,427,430,439,463,464,486],rather:[3,66,294,295,299,361,418,704,705,710,711],ratingcol:361,ratio:[392,393,687,850],raw:[235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,255,258,259,260,261,262,263,266,281,287,294,406,411],rawpredict:[240,244,247,251,258,259,261,266,281],rawpredictioncol:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,281],rc1:0,rcond:[458,460],rdd1:[74,81,104,122],rdd2:[81,90,104,109],rdd:[1,7,8,16,19,29,147,148,149,162,173,176,177,185,186,187,189,190,191,202,204,206,210,223,384,387,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,441,442,443,444,454,455,456,458,460,462,463,464,466,467,469,470,472,473,474,475,477,479,483,484,485,486,487,488,489,492,494,496,497,499,500,501,502,541,567,568,589,590,610,629,632,679,687,688,836,947,949,1006,1007,1008,1009,1010,1012,1013,1014,1015,1019,1020,1021,1022,1023,1024,1025,1027,1028,1030,1031,1032,1033,1034,1035,1036,1038,1039,1040,1041,1042,1045,1055,1056,1062,1067,1076],rdd_a:1042,rdd_b:1042,rddbarrier:45,re_path:287,reach:[23,25,271,458,460],read:[0,7,45,168,170,181,182,183,184,190,202,206,219,229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,395,402,535,573,577,629,630,632,633,634,635,636,637,638,639,656,679,692,712,947,951,952,956,1050,1061,1066,1075],readabl:[192,395,495],readi:[1,958],readlin:165,readm:0,readstream:[946,947,948,949,950,951,952,953,954,955,956],real:[247,248,296,298,319,383,430,483,484,486,488,687],reason:[590,810,865,924],rec:343,recal:[235,236,237,238,241,242,243,248,249,250,252,253,254,255,256,257,263,264,265,285,426,427,428],recallat:428,recallatk:286,recallbylabel:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284,285],recallbythreshold:[235,236,237,238,242,243,249,250],receiv:[145,235,236,237,238,242,243,249,250,361,426,1047,1057,1060,1066],recent:[16,63,105,162,251,312,322,331,351,355,446,451,548,551,687,975,978],reciproc:[458,460],recogn:[453,632,949,1055],recommend:[0,6,13,41,48,185,343,361,362,463,464,465,629,634,635,654,655,666,676,704,705,710,711,810,924,947,951,952,958,961,962,1067],recommendforallitem:[361,362],recommendforallus:[361,362],recommendforitemsubset:[361,362],recommendforusersubset:[361,362],recommendproduct:464,recommendproductsforus:464,recommendus:464,recommendusersforproduct:464,recomput:[48,337,384],record:[7,109,168,169,206,210,460,543,600,621,629,632,669,687,712,856,947,949,1050,1075],recordlength:[169,1050],recreat:[1053,1054],recsi:343,recurs:[134,165,629,632,636,637,678,947,949,953,954,956],recursivefilelookup:[629,632,636,637,947,949,953,954,956],red:7,redistribut:108,reduc:[49,106,107,138,174,361,719,1035,1036],reducebykei:[77,1035],reducebykeyandwindow:1006,reducefunc:[1035,1036],reduct:[261,1036],redund:771,refer:[0,1,4,6,9,16,48,235,236,237,238,242,243,249,250,270,309,361,445,446,447,448,450,451,452,453,458,460,463],referenc:10,reflect:[0,977],regener:958,regex:[322,519,530,531,542,877,905],regexp:878,regextokenizerpath:322,region:[634,635,654,655,810,924,951,952,961,962,1066],regionnam:1066,regist:[7,180,588,679,689,787,865,876],registr:698,regparam:[241,244,247,248,251,252,261,361,367,368,371,372,377,378,391,407,408,412,413,469,470,472,473,474,475],regress:[0,231,232,235,236,245,246,251,252,253,254,263,266,287,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,406,407,408,409,412,413,429,430,466,467,468,469,470,471,472,473,474,475,476,477,484,485,486,488,492,494,1067],regtyp:[407,408,412,472,473],regular:[1,236,238,241,243,244,247,248,250,251,252,254,257,265,361,367,368,371,372,377,378,380,407,408,412,413,463,464,470,473,475,865,905,1075,1077],reimplement:476,rel:[58,302,303,319,323,324,377,460,483,538,621,641,704,705,710,711,721,866,867],relat:[0,6,12,15,35,361,535,573,1047],relationship:[371,372],relativeerror:[302,303,319,323,324,538,641],relativesd:58,relaunch:45,releas:[1,2,6,193,290,309,665,865,1056,1075],relev:[1,298,323,336,428,686,1077],reli:865,reliabl:[82,89,580,1051],relocat:1077,remain:[247,248,251,252,255,258,361,362,363,364,377,378],remot:2,remote_debug:1,remote_debug_wrap:1,remov:[6,48,89,140,268,270,319,323,326,328,330,334,335,437,558,573,617,629,724,731,802,1075],remover2:328,renam:[620,629,632,947,949],render:[810,924],rep:878,repartit:[1,109,280,361,392,541,904],repeat:732,repeatedli:322,repl:7,replac:[6,11,12,111,302,303,384,415,419,425,483,518,534,549,550,564,594,595,619,624,627,646,727,864,878,928],replic:[74,89,210],repo:0,report:[0,466,1049],repositori:[3,4],repres:[42,162,181,182,183,184,185,190,230,247,248,251,252,268,270,271,272,275,277,278,279,280,289,290,296,298,309,312,325,351,357,363,364,377,378,386,415,417,419,421,422,425,431,435,438,446,449,453,454,455,456,457,458,459,460,461,465,468,481,487,489,494,595,631,632,646,677,694,798,809,810,905,924,949,958,995,996,1000,1004,1006,1046,1075],represent:[121,270,278,342,407,408,412,439,440,445,446,447,448,450,451,452,453,470,473,475,591,628,629,648,687,749,933,947,1039],reprocess:958,request:[388,496,497,501,502,538,541,641],requir:[0,1,5,6,15,48,58,143,295,320,321,330,454,455,458,479,484,486,496,499,500,594,607,629,650,664,666,673,676,865,947,958,966,1075,1077],rescal:[306,310,379,380,483],research:439,reseri:204,resettermin:985,reshap:[351,415,417,419,446],residu:[372,373,374,378,379,380],residualdegreeoffreedom:[373,374],residualdegreeoffreedomnul:[373,374],residualstyp:[373,374],resili:[8,42],resolut:[11,1075],resolv:[207,562,575,614,615,616],resolvedrformula:320,resourc:[2,73,143,573,1067],resourcenam:[496,501],resourceprofil:[73,143,496,500,501],resourceprofilebuild:[497,502],respect:[1,12,15,467,573,941,1046],respectsessiontimezon:12,respond:193,respons:[373,374,958],restart:[45,973,979],restor:15,restrict:[7,865,1075],result:[7,15,43,44,50,51,52,54,57,59,64,66,67,70,76,77,79,88,106,107,109,110,121,131,132,133,136,143,189,193,234,235,236,237,238,240,242,243,246,247,249,250,251,253,254,256,257,259,262,264,265,266,267,269,270,273,282,290,298,309,314,315,329,366,370,373,374,379,380,382,383,385,414,423,428,434,437,454,460,467,478,480,528,533,538,541,555,569,571,573,579,581,589,590,593,606,612,616,629,632,636,637,641,645,664,666,676,694,704,712,719,758,759,801,805,806,810,813,815,828,856,859,865,890,891,905,924,926,927,940,942,947,949,953,954,956,1017,1075],result_pdf:1075,resultvec:296,retain:[65,95,978,1035],retoken:322,retriev:[272,384,428,631],returntyp:[865,931,1075],reus:[192,193,194],review:0,rf2:[266,382],rfc:266,rfc_model:266,rfc_path:266,rformula:321,rformulamodel:320,rformulapath:320,rfr:382,rfr_model:382,rfr_path:382,rice:466,richard:466,ridg:377,ridgeregressionmod:474,ridgeregressionwithsgd:474,right:[70,79,110,239,240,245,246,263,266,365,366,369,370,381,382,458,460,461,470,473,475,552,578,600,833,884,885,893,894,912,945,994,1038],right_out:578,rightout:578,rise:483,risk:[379,380,429,664,666,676],ritz:[458,460],rlike:[526,804],rmse:287,rmtree:[406,410,411,417,419,421,423,439,464,467,469,472,474],rng:462,rnlt:928,robert:466,robust:[323,377,378],robustscal:324,robustscalermodel:323,roc:[235,236,237,238,242,243,249,250,281,426],role:1066,root:[7,209,287,326,379,380,429,458,460,585,754,865,867,906,1075],rootmeansquarederror:[379,380,429],roughli:[32,226],round:[319,385,483,752,805,850,859],roundoff:859,routin:[23,25],row1:[677,694],row2:[677,694],row3:694,row:[7,15,245,246,247,251,259,261,267,271,272,274,277,280,289,290,291,308,309,312,314,319,320,321,322,325,329,330,331,336,337,338,339,343,345,346,347,349,361,362,369,370,383,384,385,387,454,455,456,457,458,459,460,470,473,475,483,504,505,506,507,510,511,512,513,514,515,516,517,518,519,520,521,523,524,525,526,530,531,532,534,536,537,543,546,552,553,556,557,558,560,562,565,566,567,570,571,574,575,578,579,583,587,594,597,598,600,601,605,607,608,609,610,611,614,615,616,619,620,621,626,629,644,662,664,667,669,670,671,672,673,674,679,687,688,690,694,700,704,705,710,711,712,713,718,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,743,749,752,758,759,761,762,763,764,768,769,770,771,772,773,776,777,778,779,780,781,782,783,787,791,795,796,798,799,801,802,805,806,807,808,809,810,811,812,815,816,817,820,822,823,824,825,827,828,829,830,831,832,833,834,835,839,841,852,855,856,857,859,860,861,862,863,865,866,868,869,871,874,875,876,877,878,879,880,882,884,886,887,888,889,890,891,892,893,894,895,899,901,902,903,904,905,910,911,912,920,921,922,923,924,928,930,931,933,934,939,940,941,942,943,956,958,959,963,966,1004,1067,1075],rowfram:700,rowindic:[352,354,447,450],rowmatrix:[455,458],rowprint:958,rowsbetween:[529,700,865,1075],rowsperblock:[454,455,458],rsd:[720,721],rst:0,rule:[0,343,344,467,921,923],run:[0,1,2,3,7,8,22,26,33,103,171,189,191,193,198,205,219,221,261,280,289,290,308,309,337,345,389,392,413,414,443,463,477,496,554,570,576,592,607,668,684,699,967,1006,1075,1077],runid:973,runtim:[686,687,972],runtimeconfig:686,russian:328,ryan:466,ryantib:466,sacrific:89,safe:[15,89,227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,336,337,341,343,361,363,366,368,370,371,375,377,382,389,392,520,969],sai:[501,787,876,1077],said:[291,318,319],salari:535,sale:[673,850,927],same:[0,7,11,15,23,25,32,41,144,148,149,150,165,166,181,182,183,184,187,226,227,228,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,398,414,441,454,467,483,496,538,591,593,619,628,629,641,650,660,678,719,722,774,775,807,808,859,865,886,887,920,922,958,959,973,1006,1043,1050,1061,1062,1063,1075,1077],samelda:277,samelocalmodel:277,samemodel:[277,406,410,411,417,419,421,423,439,442,464,467,469,472,474],samemu:417,samesigma:417,sampl:[7,112,113,114,133,202,239,240,245,246,263,266,270,271,277,278,279,281,323,326,334,361,365,366,369,370,381,382,385,424,425,436,437,460,462,479,483,538,547,586,590,595,641,643,646,687,770,874,875,909,937],sample_fpgrowth:343,sample_multiclass_classification_data:[251,261],samplecol:385,samplesizeperpartit:590,samplingratio:[629,632,687],sat:861,satisfi:[62,131,845,1016,1035],save:[48,116,118,119,121,186,229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,394,395,396,397,398,399,403,404,405,406,410,411,417,419,421,423,425,439,440,442,464,467,469,472,474,485,487,489,490,491,493,494,495,540,622,623,647,648,649,651,652,656,657,660,662,966,1039,1066],saveabl:493,saveaslibsvmfil:494,saveaspicklefil:186,saveast:[647,661],saveastextfil:494,saveimpl:[398,399,405],savemetadata:[396,398],savemod:653,sbt:[3,4],sc2:162,scala:[0,15,66,131,458,460,483,490,491,539,584,617,719,793,800,804,845,850,925,926,927,945],scalabl:[8,280,422],scalar:[297,591,628,865],scale:[236,238,239,243,250,254,257,265,292,296,297,306,310,323,324,326,327,332,363,364,365,377,378,380,407,430,432,437,438,462,492,752,882,994],scaledoutput:[306,310],scaler:[306,310,323,326],scalerpath:[306,323],scalingvec:297,scalingvector:432,scan:[131,351,355,446,451,563,629,632,636,637,947,949,953,954,956],scenario:[45,361,362],schedul:[167,171,194,904,1047],schema:[7,234,280,345,346,347,349,504,555,557,569,581,585,606,616,620,629,632,633,636,637,645,650,660,666,676,687,712,713,807,808,886,887,947,949,950,953,954,956,994,1004,1075],schema_of_csv:807,schema_of_json:808,scheme:[647,658,964],schenker:[569,645],scikit:[239,245,263,314,365,369,381],scipi:[351,355,357,446,451,453,468],scope:270,score:[261,262,281,332,379,380,406,411,426,429],scoreandlabel:[281,284,285,286,287,426],scoreandlabelsandweight:[281,284,287],scoreandlabelswithoptweight:426,scorecol:[235,236,237,238,242,243,249,250],script:[0,1,496,1077],sdf:[621,958,959,960,963,965,966,967,972,984,986],sdf_schema:[947,949,950,953,954,955],seamlessli:7,search:[90,289,290,309,391,677,912],second:[1,144,464,483,545,547,553,642,643,644,666,676,777,779,787,800,809,836,850,863,870,876,925,934,941,945,966,967,970,985,1008,1046,1048,1049,1056,1066],secretkei:1066,section:[1,3,563,712,713,865,1075],secur:1066,see:[0,3,4,7,12,15,45,148,149,169,172,179,270,278,279,280,308,309,319,320,345,363,371,379,380,387,395,397,398,399,405,414,421,439,466,470,473,475,477,496,520,570,668,801,828,862,865,973,1006,1066,1072,1075],seed:[104,111,112,133,239,240,241,244,245,246,255,258,263,266,267,268,270,271,272,274,275,277,278,279,289,308,341,342,361,365,366,367,368,369,370,381,382,389,390,392,393,414,416,417,418,419,420,421,424,439,462,463,464,488,492,586,594,595,646,874,875],seen:[6,361,362,387,621,958,1045],select:[1,3,5,244,258,267,271,274,289,291,292,293,308,325,329,332,333,335,340,341,343,346,347,361,383,387,389,390,391,392,393,430,503,504,505,506,507,509,510,511,512,513,515,516,517,518,520,521,522,528,532,533,534,535,537,542,548,549,550,551,552,578,588,595,598,606,613,619,621,646,678,679,688,694,712,713,718,719,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,743,749,752,756,761,762,763,771,772,776,777,778,779,780,781,782,783,791,793,795,796,798,799,800,802,804,805,806,807,808,809,810,811,812,815,816,817,820,822,823,824,825,829,831,832,833,834,835,836,839,841,843,844,845,846,847,848,849,850,852,855,856,857,859,860,861,864,865,867,868,869,871,877,878,879,880,882,884,886,887,888,889,890,891,892,893,894,895,899,901,902,903,904,905,910,911,912,917,920,921,922,923,924,925,926,927,928,930,931,933,934,939,940,941,942,943,945,1075],selectedfeatur:[292,293,332,333,334,335],selectexpr:[7,599],selectionmod:[332,333],selectionthreshold:[332,333],selector:[292,293,332,333,334,430,431],selectorpath:332,selectortyp:[292,293,430],self:[0,15,19,47,50,70,85,88,110,127,128,229,240,244,246,247,251,258,259,261,266,267,271,274,277,280,281,282,284,285,286,287,288,289,291,292,294,296,297,298,299,300,302,304,305,306,308,310,312,313,314,316,318,319,320,322,323,325,326,328,329,331,332,334,336,337,339,340,341,343,345,358,361,363,366,368,370,371,375,377,382,389,392,958,1077],semant:[520,593],semi:578,send:[106,107,162,361],sensit:[259,260,289,328,361,387,912],sent:[39,170,341],sentenc:[341,342,439,820],sep:[629,648,762,886,947],separ:[6,312,357,389,406,411,453,494,629,632,648,652,662,673,689,762,947,949,956,1075],seqfunc:44,seqop:[43,137],sequenc:[77,120,227,229,232,235,236,237,238,240,242,243,244,246,247,249,250,251,253,254,256,257,258,259,261,264,265,266,267,271,274,277,289,292,294,299,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,345,361,363,366,368,370,371,375,376,377,382,389,392,414,416,418,433,443,444,591,628,787,876,1006],sequencecol:345,sequencefil:[119,181,182,183,184],sequencefileoutputformat:[116,118],sequenti:[66,227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,345,361,363,366,368,370,371,375,377,382,389,392,443,466,787,876,883],serd:682,seri:[7,15,865,1077],serial:[1,15,74,119,162,190,204,210,958],serializ:[396,398,958],serv:0,server:1,servic:1066,session:[1,7,12,394,396,398,399,403,405,634,635,654,655,681,688,689,809,810,917,924,934,951,952,961,962,978,1066,1067,1075],set:[1,2,4,6,7,8,12,13,15,25,27,48,54,89,101,102,103,150,155,156,157,158,159,160,162,165,169,177,179,187,189,191,192,193,194,195,196,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,389,390,391,392,393,394,396,398,399,400,403,405,406,411,413,416,418,420,424,425,428,430,433,435,437,439,441,443,458,460,461,470,473,475,477,479,488,492,497,502,537,538,540,584,597,598,600,614,615,616,629,632,634,635,636,637,641,648,652,654,655,656,657,659,662,663,677,680,681,683,684,686,712,714,727,759,785,792,801,809,813,828,846,859,862,889,910,917,934,947,949,951,952,953,954,956,958,959,961,962,966,967,970,976,985,1035,1051,1056,1077],setaggregationdepth:[247,251,271,363,371,377],setalpha:361,setappnam:150,setbandwidth:479,setbeta:284,setbinari:[294,295,299,433],setblocks:[258,361,362],setbootstrap:[266,382],setbucketlength:289,setcachenodeid:[240,246,266,366,370,382],setcasesensit:328,setcategoricalcol:298,setcensorcol:363,setcheckpointdir:[48,89,540],setcheckpointinterv:[240,246,266,277,361,366,370,382],setclassifi:261,setcoldstartstrategi:[361,362],setcollectsubmodel:[389,392],setdecayfactor:424,setdegre:318,setdistancemeasur:[267,274,282],setdocconcentr:277,setdroplast:[314,315],setdstcol:280,setelasticnetparam:[251,377],setep:284,setepsilon:377,setestim:[389,392],setestimatorparammap:[389,392],setevalu:[389,392],setexecutorenv:150,setfactors:[244,368],setfamili:[251,371],setfdr:[292,430],setfeatureindex:[375,376],setfeaturescol:[231,232,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,282,292,293,320,332,333,334,335,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382],setfeaturesubsetstrategi:[246,266,370,382],setfeaturetyp:332,setfinalstoragelevel:361,setfitintercept:[244,247,251,363,368,371,377],setfitlinear:[244,368],setfoldcol:389,setforceindexlabel:320,setformula:320,setfpr:[292,430],setfw:[292,430],setgap:322,sethalflif:424,sethandleinvalid:[291,314,315,319,320,329,330,336,337,339],setimplicitpref:361,setimpur:[240,246,266,366,370,382],setindic:340,setinitialcent:424,setinitialweight:[258,413,477],setinitmod:[274,280],setinitstd:[244,368],setinitstep:274,setinputcol:[234,288,289,290,291,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330,331,336,337,338,339,340,341,342],setintermediatestoragelevel:361,setinvers:296,setisoton:375,setitemcol:[361,362],setitemscol:[343,344],setjobgroup:172,setk:[267,271,274,277,280,286,316,424],setkeeplastcheckpoint:277,setlabel:304,setlabelcol:[232,240,244,246,247,251,258,259,261,266,281,284,285,286,287,292,320,332,363,366,368,370,371,375,377,382],setlabeltyp:332,setlay:258,setleafcol:[239,240,245,246,263,266,365,366,369,370,381,382],setlearningdecai:277,setlearningoffset:277,setlearningr:439,setlink:371,setlinkpow:371,setlinkpredictioncol:[371,372],setlocal:328,setlocalproperti:179,setloss:377,setlosstyp:[246,370],setlow:323,setlowerboundsoncoeffici:251,setlowerboundsonintercept:251,setmast:150,setmax:[310,311],setmaxbin:[240,246,266,366,370,382],setmaxblocksizeinmb:[247,251,363,377],setmaxcategori:337,setmaxdepth:[240,246,266,366,370,382],setmaxdf:294,setmaxit:[244,246,247,251,258,267,271,274,277,280,341,361,363,368,370,371,377],setmaxlocalprojdbs:345,setmaxmemoryinmb:[240,246,266,366,370,382],setmaxpatternlength:345,setmaxsentencelength:341,setmetriclabel:[284,285],setmetricnam:[281,282,284,285,286,287],setmin:[310,311],setminconfid:[343,344],setmincount:[341,439],setmindf:294,setmindivisibleclusters:267,setmindocfreq:300,setminibatchfract:[244,368],setmininfogain:[240,246,266,366,370,382],setmininstancespernod:[240,246,266,366,370,382],setminsupport:[343,345],setmintf:[294,295],setmintokenlength:322,setminweightfractionpernod:[240,246,266,366,370,382],setmissingvalu:302,setmodeltyp:259,setn:312,setnam:340,setnonneg:361,setnumbin:281,setnumblock:361,setnumbucket:319,setnumbucketsarrai:319,setnumfeatur:[298,299],setnumfold:389,setnumhasht:[289,308],setnumitemblock:361,setnumiter:439,setnumpartit:[341,343,439],setnumtopfeatur:[292,430],setnumtre:[266,382],setnumuserblock:361,setoffsetcol:371,setoptim:277,setoptimizedocconcentr:277,setoutputcol:[234,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342],setp:313,setparallel:[261,389,392],setparam:[229,240,244,246,247,251,258,259,261,266,267,271,274,277,280,281,282,284,285,286,287,288,289,291,292,294,296,297,298,299,300,302,304,305,306,308,310,312,313,314,316,318,319,320,322,323,325,326,328,329,331,332,334,336,337,339,340,341,343,345,361,363,366,368,370,371,375,377,382,389,392],setpattern:322,setpercentil:[292,430],setpredictioncol:[231,232,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,271,272,274,275,282,284,285,286,287,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382],setprobabilitycol:[239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272,284],setquantileprob:[363,364],setquantilescol:[363,364],setrandomcent:424,setrank:361,setratingcol:361,setrawpredictioncol:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,281],setregparam:[244,247,251,361,368,371,377],setrelativeerror:[302,319,323],setsampl:479,setscalingvec:297,setse:[240,244,246,258,266,267,270,271,274,277,278,279,289,308,341,361,366,368,370,382,389,392,439],setselectionmod:332,setselectionthreshold:332,setselectortyp:[292,430],setsequencecol:345,setsiz:339,setsmooth:259,setsolv:[244,258,368,371,377],setsparkhom:150,setsplit:291,setsplitsarrai:291,setsrccol:280,setstag:229,setstandard:[247,251,377],setstat:325,setsteps:[244,246,258,341,368,370],setstopword:328,setstrategi:302,setstringindexerordertyp:320,setstringordertyp:329,setsubsamplingr:[246,266,277,370,382],setter:[15,150,438],setthreshold:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,288,406,411],setthroughorigin:287,settol:[244,247,251,258,271,274,363,368,371,377],settolowercas:322,settopicconcentr:277,settopicdistributioncol:[270,277,278,279],settrac:1,settrainratio:392,setup:[3,5,1053,1054],setupfunc:[1053,1054],setupp:323,setupperboundsoncoeffici:251,setupperboundsonintercept:251,setusercol:[361,362],setvalidationindicatorcol:[246,370],setvariancecol:[365,366],setvariancepow:371,setvariancethreshold:334,setvectors:[341,439],setvocabs:294,setweightcol:[240,246,247,251,259,261,266,267,271,274,280,281,282,284,287,366,370,371,375,377,382],setwindows:[341,439],setwithcent:323,setwithmean:[326,438],setwithsc:323,setwithstd:[326,438],sever:621,sgd:[408,412,470,473,475],sha:[890,891],shallow:[227,228,231,232,233,234,283,359,393],shape:[251,252,377,378,460,462],share:[0,5,7,9,15,16,32,162,226,454,689,1075,1076],shell:[1,7,8,103,1077],shift:[306,810,892,893,894,924],ship:1077,shortcut:[229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,395,397,402,404],shorten:[648,652,656,657,662],shorter:945,shorthand:[536,567,568],should:[0,1,4,6,15,43,51,52,66,131,132,133,135,136,162,193,207,227,228,231,232,233,234,239,240,241,244,245,246,251,252,255,258,259,260,263,266,270,271,272,277,278,279,280,281,282,283,284,285,286,287,291,298,299,300,301,302,319,337,349,359,361,363,364,365,366,367,368,369,370,373,374,375,376,381,382,388,389,390,398,399,405,407,408,412,422,424,434,439,470,473,475,478,479,480,484,486,488,493,553,570,571,581,591,611,612,628,629,632,634,635,636,637,644,647,648,652,654,655,661,662,664,666,676,677,687,810,814,846,860,862,865,905,924,947,949,951,952,953,954,956,958,961,962,1004,1056,1072,1075,1077],shouldn:483,show:[1,7,244,258,259,277,280,288,289,290,291,294,302,305,306,308,309,310,319,320,328,336,341,343,345,363,368,387,509,518,520,521,522,528,529,533,534,542,554,555,558,560,562,564,572,575,581,589,590,591,592,595,602,606,613,616,626,627,628,646,665,666,676,704,705,719,756,793,795,796,800,804,813,814,843,844,845,846,847,848,849,850,864,865,868,869,917,925,926,927,931,945,1075],show_profil:1,shown:[3,6,7,680,1077],shrink:[245,246,369,370,486],shuffl:[49,81,108,460,541,664,666,676,758,759,801,828,1075],shut:201,shutil:[406,410,411,417,419,421,423,439,464,467,469,472,474],si3:240,si_model3:240,si_model:[240,246,266],side:[0,7,41,190,210,374,379,380,385,470,473,475,552,578,676,865,931,994],sigma:[259,260,417,462,481],sigmod:343,sigmoid:258,sign:[893,991,997,998,1001],signifi:958,silent:[15,648,651,652,653,656,657,659,660],silhouett:282,sim:[423,460],similar:[0,25,280,289,292,332,341,342,392,422,423,430,458,460,541,647,658,964,1023,1075,1077],similarli:[70,106,107,298,1075,1077],simpl:[229,298,299,355,395,397,451,563,958,1003],simplestr:[687,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],simpli:[1,3,7,357,453,564,573,591,627,628],simplic:[865,1075],simplifi:[593,599],sin:423,sinc:[53,94,210,259,268,288,291,292,298,299,310,319,328,330,336,337,398,408,455,470,473,475,483,588,590,629,712,713,720,918,919,947,985,1075,1077],sine:[741,742,897,898],singl:[1,54,77,79,162,168,181,182,183,184,187,190,206,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,383,384,385,389,390,392,393,406,411,414,460,466,483,487,489,538,571,577,629,632,641,648,664,690,719,761,762,802,850,945,947,949,956,958,991,996,1004,1012,1015,1033,1036],single_col_model:314,single_col_oh:314,singleton:[10,180],singular:[458,460,461],singularvaluedecomposit:[458,460],sink:[963,966,977],sit:833,site:[6,7],size:[111,119,133,162,239,240,241,244,245,246,247,248,251,252,255,258,263,266,268,269,270,272,273,275,276,278,279,294,295,336,339,341,342,343,344,345,355,357,361,362,363,364,365,366,367,368,369,370,377,378,381,382,413,420,421,428,439,443,451,453,454,458,460,462,477,581,590,862,905],sizehint:339,skew:[664,666,676,1075],skinni:460,skip:[89,150,291,319,320,321,329,330,336,337,338,339,439,629,638,648,812,831,862,947,955],skip_rdoc:0,skip_scaladoc:0,skip_sqldoc:0,skip_valu:[629,947],skipparam:[396,398],sklearn:[269,276,332],sleep:193,slen:[865,931],slice:[340,911],slicer:340,slide:[705,1014,1023,1035,1036,1045,1063],slidedur:[941,1014,1015,1023,1035,1036,1043,1045],slow:90,slower:[387,1035],small:[51,52,131,132,133,136,168,206,239,240,245,246,263,266,365,366,369,370,377,381,382,439,483,571,612,751,1075],smaller:[58,202,206,290,298,309,414,439,458,460],smallest:[460,867],smirnov:[385,480,483],smooth:[259,260,409],snake_cas:0,snappi:[648,652,656,657,662],snapshot:573,sock_fil:34,socket:[1006,1057],soft:420,softlib:466,softmax:[251,258,439],softpredict:417,sole:234,solv:[361,463,470,473,475],solver:[241,244,255,258,367,368,371,372,374,377,378,379,380],some:[66,152,193,210,227,228,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,421,454,460,462,494,496,538,572,619,621,638,641,679,681,865,955,958,963,966,1075],someth:167,somewhat:66,sort:[15,47,50,54,59,60,61,64,67,70,75,76,77,78,79,85,86,88,90,91,106,107,108,109,110,119,121,123,124,127,128,136,150,186,204,206,280,294,329,330,343,345,357,361,384,421,423,442,444,453,464,467,483,494,505,506,507,515,516,517,529,537,548,549,550,551,570,575,578,583,588,590,602,613,661,664,669,677,697,704,705,733,737,738,739,788,789,790,867,902],sort_columns_asc:613,sortbykei:90,sorted_bucketed_t:661,sourc:[0,1,3,5,7,16,17,19,20,21,22,23,25,26,28,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,200,201,202,204,206,207,208,209,210,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,509,513,518,521,522,525,528,529,532,533,534,535,536,537,538,539,540,541,542,543,545,546,547,548,549,550,551,552,553,554,555,556,557,558,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,584,585,586,588,589,590,591,592,593,594,595,597,598,599,600,601,602,605,606,607,608,609,610,611,613,614,615,616,617,619,620,621,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,667,669,670,671,672,673,674,675,676,677,678,679,687,688,689,690,694,695,697,700,702,703,704,705,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,977,981,982,983,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1066,1077],space:[58,79,289,298,308,312,316,317,318,331,436,439,538,641,832,842,885,929],spade:713,span:[629,632,947,949],spanish:328,spark:[0,1,3,4,5,6,7,8,9,12,13,14,15,16,42,45,89,115,116,117,118,119,135,145,146,147,150,160,162,165,167,193,194,196,199,202,205,206,240,244,246,251,258,259,261,266,267,271,274,277,280,281,282,284,285,286,287,288,289,291,292,294,296,297,298,299,300,302,305,306,308,310,312,313,314,316,318,319,320,322,323,325,326,328,329,331,332,334,336,337,339,340,341,343,346,347,361,363,366,368,370,371,375,377,379,380,382,383,384,385,389,390,392,394,396,398,399,403,405,414,493,494,495,496,505,506,507,510,511,512,515,516,517,518,520,521,522,523,524,534,535,542,548,549,550,551,562,573,575,576,581,588,590,593,594,599,611,612,613,616,621,629,630,631,632,633,634,635,636,637,638,639,651,654,655,656,657,659,665,666,673,676,679,680,681,684,686,687,688,690,694,697,699,712,713,718,719,723,724,725,726,727,728,729,730,731,732,733,734,735,736,743,752,756,758,759,761,762,763,764,769,770,771,776,777,778,779,780,781,782,783,791,793,795,796,799,800,802,804,805,806,807,808,809,810,811,812,815,816,817,820,821,822,823,824,825,829,831,832,833,835,839,841,843,844,845,846,847,848,849,850,852,855,857,859,860,861,864,865,867,868,869,871,877,878,879,880,882,884,886,887,888,889,890,892,893,894,895,899,901,902,903,905,911,912,917,920,921,922,923,924,925,926,927,928,930,931,933,934,939,941,942,943,945,946,947,948,949,950,951,952,953,954,955,956,958,961,962,966,973,976,978,984,986,987,1006,1046,1047,1066,1067,1076,1077],spark_cor:864,spark_hom:[3,6],spark_sql:864,spark_us:[198,834],sparkconf:[15,162,180,681],sparkcontext:[1,7,15,16,32,34,48,55,80,89,116,118,150,207,208,209,226,239,240,245,246,263,266,270,277,278,279,295,330,361,365,366,369,370,381,382,394,396,398,399,403,405,417,421,462,493,494,495,540,679,686,688,689,695,704,705,1046,1060,1077],sparkexcept:[23,25],sparkfil:165,sparkhom:[150,162],sparksess:[1,7,15,394,396,398,399,403,405,535,550,551,588,714,946,965,1072,1075,1077],sparkui:203,sparkvers:398,spars:[240,244,246,251,259,261,266,289,308,310,313,314,316,347,351,352,354,355,357,363,366,368,370,375,377,382,434,437,446,447,450,451,453,454,460,468,494],sparse1:[351,446],sparse_data:[406,410,411,419,484,486,488],sparsematrix:[251,350,352,445,447,454,494],sparsevector:[240,246,266,277,298,299,308,313,314,351,357,366,370,382,406,410,411,419,421,430,433,434,446,453,468,469,472,474,484,486,488,494],sparsiti:[306,337,338],spearman:[384,483],spearmancorr:[384,483],special:[291,319,320,321,329,330,337,338,396,398,704,705,710,711,777,865,931],specif:[0,1,4,6,9,41,210,247,248,251,252,259,361,363,364,377,378,398,399,405,458,460,483,496,498,535,606,865,877,1075,1076],specifi:[1,3,6,7,15,35,53,73,101,102,105,106,111,112,115,116,117,118,132,140,143,169,172,189,235,236,237,238,242,243,249,250,253,254,256,257,264,265,271,277,290,291,294,295,298,304,309,312,314,319,322,331,332,337,340,349,371,377,384,385,389,390,391,394,396,398,399,403,405,454,483,493,495,496,497,499,500,501,502,541,542,547,554,557,560,563,564,570,572,579,583,584,589,590,591,592,594,595,601,602,606,609,616,621,626,627,628,629,630,631,632,634,635,636,637,638,639,643,646,647,648,649,650,651,652,653,656,657,658,659,660,662,666,673,676,683,690,697,704,705,710,711,712,713,777,779,795,796,807,808,811,813,842,864,865,868,869,877,878,885,901,906,921,923,929,930,941,947,948,949,953,954,955,958,960,963,964,965,966,976,1030,1056,1075,1077],spectral:280,speed:[239,240,245,246,263,266,365,366,369,370,381,382,538,638,641,955],sphinx:0,spip:45,split:[7,104,169,190,239,240,245,246,263,266,291,319,322,331,341,343,365,366,369,370,381,382,389,390,392,393,414,433,439,484,486,488,494,563,586,631,865,1075],split_expand:865,splitindex:[93,94],splitsarrai:291,spy:[564,627],sql:[0,1,4,5,6,8,9,12,13,14,15,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,383,384,385,387,388,389,390,392,393,460,494,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1067,1076,1077],sql_ctx:[535,968],sqlconf:689,sqlcontext:[464,595,646,704,705,984,985,986],sqlqueri:694,sqltran:325,sqltransformerpath:325,sqm:984,sqrt:[245,246,263,266,369,370,371,372,381,382,462,488,819],squar:[268,269,276,282,287,292,326,332,351,355,357,361,369,370,373,374,377,378,379,380,383,415,419,425,429,430,431,446,451,453,458,460,463,464,469,470,472,473,474,475,478,483,906],squared_dist:[351,355,357,446,451,453],squarederror:[377,378],squaredeuclidean:282,src:[280,573,864],srccol:[280,928],ssc:[1006,1066],sss:[629,632,648,652,947,949],stabil:337,stabl:[0,259,289],stack:[247,248,251,252,255,258,361,362,363,364,377,378,454],stackoverflowexcept:619,stacktrac:982,stage:[22,23,25,26,28,31,45,147,148,149,225,229,230,339,496,497,499,500,501,502],stai:541,stamp:934,standalon:[684,865,931,1077],standard:[1,113,126,241,244,247,248,251,252,326,327,367,368,374,377,378,379,380,385,387,407,434,437,438,462,562,575,599,614,615,632,721,875,908,909,949,1075,1077],standardscal:[327,438],standardscalermodel:[326,437],standardscalerpath:326,start:[0,1,7,187,193,199,203,267,414,416,465,481,496,531,532,577,690,704,705,710,711,718,774,775,776,778,780,835,864,883,889,901,911,941,956,958,965,972,973,976,979,984,986,1046,1050,1052,1053,1061,1066,1077],start_job:193,startpo:532,starttim:941,startup:496,stat:[175,197,383,384,385,386,387,388,462,466,478,479,480,481,482,483],statcount:125,state:[58,236,238,243,250,254,257,265,558,621,719,865,1044,1075],statement:325,statist:[1,245,259,263,271,310,323,326,369,373,374,379,380,381,383,385,387,388,437,460,478,480,482,555,563,603,606,640,1067],statu:6,std:[326,327,387,437,438,462,665,666],stddev:[7,555,606],stddev_samp:907,stderrtoserv:1,stdev:462,stdout:197,stdouttoserv:1,steinbach:[267,414],step:[0,3,5,89,187,241,244,245,246,255,258,267,274,275,341,342,367,368,369,370,408,412,413,414,418,469,470,472,473,474,475,477,483,541,638,690,889,955,1075,1077],stepsiz:[241,244,245,246,255,258,341,342,367,368,369,370,413,477],still:[0,13,593,621,666,676,1075],stime:1,stkm:425,stochast:[246,408,412,413,470,473,475,477],stop:[162,193,245,246,328,369,370,418,465,481,889,966,970,972,982,984,985,986,1046,1048,1049,1052,1053],stop_at_closing_quot:[629,947],stop_at_delimit:[629,947],stop_job:193,stopgracefulli:1060,stopsparkcontext:1060,stopword:328,stopwordremov:328,stopwordsremoverpath:328,storag:[46,74,89,102,210,345,351,443,446,454,539,584,604,622,623,946,957,958,1007,1031,1057,1066],storagelevel:[74,102,361,454,584,1031,1057,1066],store:[262,270,279,290,309,323,354,359,362,394,395,397,417,421,437,450,455,456,458,460,484,486,488,494,504,580,629,632,899,946,949,957,1051,1057,1066,1075,1077],str:[0,1,33,58,96,99,103,115,116,117,118,119,120,121,136,162,169,181,182,183,184,190,202,206,281,282,284,285,286,287,290,309,320,329,346,347,349,369,373,374,383,384,385,387,388,396,407,408,412,417,418,420,421,422,424,425,440,473,483,484,486,488,493,494,495,496,498,501,504,519,526,530,531,537,538,542,545,547,553,557,560,563,564,565,570,572,578,581,583,589,590,595,597,601,602,609,619,620,621,626,627,629,630,631,632,633,636,637,638,639,641,642,643,644,646,647,648,649,651,652,656,657,658,659,660,661,662,666,667,671,672,673,674,676,680,681,684,687,708,709,712,713,719,721,722,723,724,725,726,728,729,731,733,734,736,745,765,766,772,779,786,791,793,798,800,802,804,805,806,807,808,810,811,822,825,827,830,835,836,843,844,845,846,847,848,849,850,862,865,872,877,878,880,886,887,895,897,898,899,901,902,905,910,911,912,915,916,920,922,924,925,926,927,930,931,945,947,948,949,950,953,954,955,956,958,960,964,965,966,967,1003,1004,1050,1051,1053,1054,1057,1066,1075],straightforward:[7,1077],strata:[595,646],strategi:[7,261,302,303,361,362],stratifi:[112,595,646],stratum:[595,646],stream:[7,8,9,339,413,476,477,558,577,622,623,692,1067,1076],streaming_queri:965,streamingcontext:[1006,1011,1066],streamingkmeansmodel:424,streaminglisten:1047,streamingqueri:[577,696,965,982,983],streamingqueryexcept:[970,971,985],streamingquerymanag:696,streamingqueryprogress:[975,978],streamlib:58,streamnam:1066,strength:361,strictli:[291,460],stride:631,string1:7,string2:7,string3:7,string:[7,11,121,202,206,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,359,360,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,384,385,389,390,392,393,439,446,451,453,483,498,513,514,519,531,538,542,555,561,563,564,565,569,570,578,581,585,591,597,600,606,610,619,620,621,627,628,629,630,632,633,634,635,637,638,639,641,645,648,649,652,654,655,659,660,662,664,666,676,679,681,687,712,713,740,748,749,761,762,763,777,785,792,798,805,806,807,808,809,810,811,821,822,825,832,833,835,840,841,842,852,865,877,878,879,880,884,885,886,887,890,891,903,905,911,912,920,922,924,928,929,931,932,934,935,941,947,949,950,951,952,955,956,960,961,962,966,967,1002,1003,1004,1039,1075],string_col:[865,1075],string_column:[865,1075],stringifi:453,stringinddf:329,stringindex:[240,246,266,304,314,320,321,330],stringindexermodel:329,stringindexerordertyp:[320,321],stringindexerpath:329,stringnum:298,stringordertyp:[329,330],stringtyp:[10,513,596,687,808,816,835,931,988,999,1003,1004],strongli:[48,958],struct1:1004,struct2:1004,struct:[349,518,632,687,719,736,847,865,886,887,920,922,941,949,1004,1075],struct_col:[865,1075],struct_column:[865,1075],structfield:[347,504,521,596,687,808,1004],structtyp:[349,518,534,596,629,632,633,638,666,676,687,808,865,920,922,947,949,950,955,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1005,1075],structur:[7,8,9,278,388,802,1067,1076],stsassumerolearn:1066,stsexternalid:1066,stssessionnam:1066,stub:0,style:[0,614,615,616,632,806,949],sub:[389,392,454],subarrai:340,subclass:[227,228,231,232,233,234,283,359,398,399,405],submiss:1077,submit:[1,194,1077],submodel:[390,393],subnam:[631,651],subprotocol:[631,651],subsamplingr:[245,246,263,266,270,277,278,279,369,370,381,382],subsequ:[24,165,166,220,970,985],subset:[7,111,112,133,320,340,463,488,558,559,560,564,591,594,626,627,628,1075,1077],subsetaccuraci:285,substanti:298,substr:[822,835,878,912],subsystem:580,subtract:[454,1035,1036,1075],subtract_mean:1075,successfulli:[3,958],suffici:[227,228,231,232,233,234,283,359],suffix:1039,suggest:[137,138,245,247,248,251,252,263,271,272,363,364,369,371,372,377,378,381],suit:713,suitabl:631,sum:[77,92,93,94,98,104,130,239,245,263,268,269,272,276,280,314,318,365,369,373,374,381,387,415,417,419,422,425,428,436,483,487,489,586,664,666,673,704,705,719,813,814,914,941],sum_func:666,summar:[5,388],summari:[7,241,248,251,252,255,263,267,268,271,272,274,275,276,310,326,372,378,380,387,388,400,437,460,482,483,538,555,641],summarybuild:387,sun:861,suppli:[227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,432,454],support:[0,1,5,7,8,11,16,78,143,150,162,165,166,168,181,183,190,202,204,206,239,240,241,244,245,246,247,251,252,255,258,259,260,263,266,267,268,270,274,275,277,278,279,280,281,282,283,284,285,286,287,292,293,302,320,321,325,328,329,330,332,333,343,344,345,349,351,361,362,365,366,367,368,369,370,371,372,373,374,375,377,378,381,382,384,385,407,408,411,412,420,430,434,441,443,446,454,466,473,483,484,486,488,494,496,501,518,538,545,569,629,632,634,635,641,642,645,648,652,654,655,656,657,659,662,682,719,793,800,804,808,810,845,850,865,922,924,925,926,927,931,941,945,947,949,951,952,959,961,962,966,994],supportedfeaturesubsetstrategi:[245,246,263,266,369,370,381,382,488],supportedimpur:[239,240,245,246,263,266,365,366,369,370,381,382],supportedlosstyp:[245,246,369,370],suppos:[1,280],suppress:193,sure:[0,3,1066,1077],surrog:303,surrogatedf:[302,303],survei:289,surviv:363,svd:461,svd_model:[458,460],svec:313,svm2:247,svm:[247,248,411,412],svm_model:247,svm_path:247,svmwithsgd:411,swedish:328,sym:439,symbol:[371,713,1077],symmetr:[280,422],sync:[6,192,193,194],synchron:977,synonym:[439,440],syntax:[325,613,629,632,634,635,636,637,947,949,953,954,956],sys:[704,710,711],system:[6,89,115,116,117,118,120,150,162,168,181,183,190,196,202,206,343,416,418,420,463,488,494,558,631,633,647,648,651,652,656,657,658,659,661,662,809,946,950,957,958,959,964,966,1047,1050,1061,1075,1077],tab:[632,949],tabl:[7,11,15,289,290,308,309,325,535,548,550,551,553,588,624,631,644,650,651,653,660,679,685,689,753,784,818,858,944],table1:[694,697],tablea:7,tablenam:[639,650,697],tag:[629,632,806,947,949],tail:7,take:[6,7,150,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,263,266,267,271,274,277,280,288,291,292,294,296,297,299,304,305,306,310,312,313,314,316,318,319,322,323,325,326,328,329,332,334,337,338,340,341,343,359,361,363,366,368,370,371,375,377,382,385,407,437,454,458,464,484,486,488,541,573,576,581,613,629,665,666,676,800,810,812,831,834,836,865,905,924,925,931,947,958,1075],taken:[336,373,374],tall:460,tallskinnyqr:460,tangent:[744,746,915,916],tapia:466,tar:[0,6,1077],target:[41,193,302,303,319,323,324,351,446,538,541,589,590,641],task:[16,22,23,24,25,26,28,29,30,31,32,33,45,57,147,148,149,166,174,193,219,220,221,223,224,225,226,231,232,245,246,263,266,343,369,370,381,382,499,500,501,502,821,904,958],taskcontext:22,tcp:[1006,1057],td3:240,techniqu:[267,414],technometr:466,tell:496,temp_path:[240,244,246,247,251,258,259,261,266,267,271,274,277,280,281,282,284,285,286,287,288,289,291,292,294,296,297,298,299,300,302,305,306,308,310,312,313,314,316,318,319,320,322,323,325,326,328,329,331,332,334,336,337,339,340,341,343,361,363,366,368,370,371,375,377,382,442],tempdir:[165,202,204,206],tempfil:[119,121,389,392,406,410,411,417,419,421,423,439,464,467,469,472,474,494,648,649,652,653,656,657,658,659,947,949,950,953,954,956],tempfile2:121,tempfile3:121,temporari:[548,549,550,551,588,689],temporarili:[312,322,331,1075],temptablealreadyexistsexcept:[548,551],ten:836,term:[17,241,244,247,248,251,252,270,277,278,279,294,295,299,300,301,320,321,363,364,367,368,371,372,377,378,420,421,433,434,435,469,474,492],termin:[6,236,238,243,250,254,257,265,380,408,412,413,470,473,475,477,967,970,971,985,987,1046],termindic:277,terminolog:[277,421],termweight:277,ternari:850,test0:[240,244,246,247,251,259,261,266,366,368,370,375,377,382],test1:[240,246,251,259,261,266,366,370,377,382],test2:[162,261],test:[2,3,34,84,150,162,165,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,383,385,389,390,392,393,417,421,430,460,478,480,483,520,977],test_arrow:4,test_join:3,test_support:[629,630,632,633,636,637,639,656],testdata:329,testdf:258,testfil:[165,202,204],testnam:4,testset:464,text1:328,text2:328,text:[7,116,118,121,181,182,183,184,190,202,204,206,277,312,322,328,331,343,414,421,439,494,652,948,1039,1061],text_sdf:956,textfil:[204,206,629,632],textinputformat:[181,182,183,184],textparsingexcept:[629,947],tfidf:434,tgz:6,tha:387,than:[3,15,43,44,58,66,145,202,206,236,238,239,240,243,245,246,247,248,250,251,252,254,255,257,258,259,263,265,266,267,271,288,290,294,295,298,299,309,312,319,334,335,341,342,343,344,345,361,362,363,364,365,366,369,370,377,378,381,382,387,406,411,414,418,428,435,439,443,454,458,460,464,467,483,501,504,538,541,553,558,560,569,571,600,621,626,629,632,641,644,645,704,705,710,711,802,827,830,856,859,861,862,867,889,905,931,947,949,1035,1036,1075],that_queri:966,thei:[0,1,7,104,251,252,298,319,387,427,454,563,580,586,634,635,654,655,727,810,924,951,952,961,962,1075,1077],them:[1,7,10,11,15,204,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,357,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,396,414,453,467,494,554,570,592,606,632,735,865,949,985,1050,1055,1056,1061,1077],theoret:[271,385,483],therefor:[0,1,467,580,593,619,629,865,958,1075,1077],theta:[259,260,270,277,278,279,410,420,423,745],thi:[0,1,3,5,6,7,9,11,15,17,22,23,24,25,26,28,29,31,32,33,35,39,41,43,44,45,46,47,48,51,52,53,55,56,60,61,63,64,65,66,68,69,71,73,79,80,81,82,84,86,89,90,91,92,93,94,95,96,97,99,100,102,104,105,106,107,108,110,111,112,113,114,116,118,119,120,121,122,123,124,126,129,131,132,133,134,135,136,137,138,139,142,143,144,145,146,147,148,149,150,151,162,165,166,179,181,182,183,184,189,190,192,193,194,195,196,203,204,205,220,221,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,351,355,357,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,395,396,397,398,399,400,402,404,405,406,407,409,410,411,413,415,417,418,419,421,422,423,425,428,430,434,440,442,443,445,446,447,448,450,451,452,453,454,455,458,460,464,466,467,468,469,470,471,472,473,474,475,477,483,485,487,488,489,491,494,495,496,497,498,499,500,501,502,504,509,510,511,512,518,525,538,540,541,546,548,549,550,551,555,556,557,560,562,563,567,568,569,571,573,574,575,577,578,580,581,584,586,588,590,593,594,596,598,599,605,606,611,612,614,615,616,619,620,621,623,624,626,629,631,632,636,637,641,645,648,651,652,653,656,657,659,660,662,664,665,666,668,675,676,677,681,683,686,692,696,699,704,705,710,711,719,753,784,787,810,812,818,827,830,831,836,856,858,862,863,865,867,876,904,924,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,973,974,975,976,977,978,979,981,983,984,985,986,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1007,1008,1009,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1023,1024,1025,1027,1028,1029,1031,1032,1033,1035,1036,1038,1039,1041,1042,1043,1044,1045,1056,1058,1066,1067,1075,1076,1077],third:[676,787,863,876,1077],this_queri:[966,984,986],those:[23,66,193,259,270,460,496,926,927],though:[629,947],thread:[0,41,53,162,179,192,193,194,227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,361,363,366,368,370,371,375,377,382,389,392,688,969,1046],three:[54,676,787,865,876,905,1042,1075],thresh:[560,626],threshold:[0,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,255,258,259,260,263,266,288,290,291,292,294,295,309,332,334,335,337,338,341,342,369,370,406,411,418,430,460],through:[34,65,89,95,144,162,207,208,209,239,287,306,365,371,491,496,629,632,677,685,686,714,947,949],throughorigin:287,thrown:[241,248,252,255,263,268,272,275,288,291,319,328,372,378,400,629,687,947,970,985],thu:[43,44,292,298,306,332,430,621,638,861,955],thumb:0,tibshirani:[245,263,369,381,466],tie:[787,876],tied:[548,549,550,551,588],ties:[787,876],time:[1,7,24,67,102,111,150,193,199,220,294,295,341,342,343,344,345,361,362,363,416,418,420,439,443,463,488,584,619,621,629,632,634,635,636,637,654,655,676,679,732,809,810,859,879,905,924,931,934,941,951,952,961,962,963,966,967,973,1006,1008,1041,1042,1045,1046,1048,1049,1055,1056],time_df:[809,917,934],timecolumn:941,timeout:[23,25,57,98,130,970,985,1048,1049],timestamp:[7,12,398,621,629,631,632,634,635,636,637,648,652,654,655,775,777,779,784,809,810,818,858,923,924,934,941,944,947,949,951,952,961,962,1005],timestamp_second:621,timestampformat:[629,632,648,652,947,949],timestamptyp:[775,865,923,941,1075],timeunit:[424,425],timezon:[12,634,635,654,655,809,810,917,924,934,951,952,961,962,1075],tinyint:687,tip:1066,tmp2:124,tmp:[123,124],tmpfile:[119,186],tmptabl:639,to_arrow_typ:865,to_avro:712,to_dat:800,to_list:54,to_replac:[12,591,628],to_upp:[865,931],toarrai:[350,351,353,354,355,356,386,427,445,446,448,450,451,452,460,481],tobas:763,toblockmatrix:[455,458],toboolean:360,tocoordinatematrix:[454,458],todebugstr:[150,239,240,245,246,263,365,366,369,381,484,485,487,488,489],todegre:786,todens:[354,450],todf:[247,251,259,261,280,345,387,558,679,856,941],todo:337,tofloat:360,togeth:[45,147,148,149,193,267,414,428,454,581,666,676,761,762,1075,1077],toggl:[294,295],toimag:349,toindexedrowmatrix:[454,455],toint:360,tointern:[988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],tointernald:1003,token:[270,277,294,295,322,341,342,421,439,629,632,947,949],tokenizerpath:331,tol:[241,244,247,248,251,252,255,258,271,272,274,275,363,364,367,368,371,372,377,378],toler:[8,89,121,241,244,247,248,251,252,255,258,271,272,274,275,363,364,367,368,371,372,377,378,407,593,599,1051],tolist:[360,460],tolistfloat:360,tolistint:360,tolistlistfloat:360,toliststr:360,toloc:[270,277],tolocalmatrix:454,tolowercas:322,tom:[309,505,506,507,515,516,517,523,524,552,564,578,591,627,628],tomatrix:360,tondarrai:349,too:[0,7,239,240,245,246,263,266,319,365,366,369,370,381,382,558,631,651,664,666,676],tool:[1,22,387,1077],toolbar:1,top:[2,7,8,116,118,270,278,279,292,316,332,343,362,430,464,687,1077],topanda:[7,12,13,14,15,687,1075],topic:[270,277,278,279,420,421,1076],topicconcentr:[270,277,278,279,420],topicdistribut:277,topicdistributioncol:[270,277,278,279],topics_expect:421,topicsmatrix:[270,277,278,279,421],toplevelrecord:712,toradian:872,torowmatrix:[455,458],tospars:[350,445],tostr:[190,360],total:[111,235,236,237,238,239,240,241,242,243,245,246,248,249,250,252,253,254,255,256,257,258,263,264,265,266,267,273,365,366,369,370,381,382,414,419,425,427,434,483,487,489,594,994],totaliter:[236,238,243,250,254,257,265,380],totalnumnod:[245,246,263,369,381,486,487,488,489],tottim:1,tovector:360,tpr:[235,236,237,238,242,243,249,250],tr96640:466,trace:[195,380],traceback:[16,63,105,162,251,312,322,331,351,355,446,451,548,551,687],track:[6,93,94,149,390,621],trade:460,trail:[629,648,832,947],train:[231,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,260,261,262,263,264,265,266,268,269,270,272,273,275,276,277,278,279,316,323,326,341,361,362,364,365,366,367,369,370,372,374,376,377,378,380,381,382,389,392,393,400,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,437,439,441,442,443,444,463,464,466,467,469,470,472,473,474,475,477,484,486,487,488,489],trainclassifi:[484,486,488],trainer:258,trainimplicit:[463,464],trainingcost:[267,269,274,276],trainingloglikelihood:270,trainingsummari:[241,248,252,255,263,372,378],trainon:[413,424,477],trainratio:[392,393],trainregressor:[484,486,488],trainvalidationsplitmodel:392,trait:[395,397,482],transact:[441,958],transaction:[958,959],transfer:[865,1075,1077],transform:[7,227,228,229,230,231,232,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,389,390,391,392,393,396,398,424,430,431,432,433,434,435,436,437,438,439,440,460,462,485,487,489,495,753,784,818,858,944,1006,1046,1067],transformfunc:1062,transformschema:234,translat:[131,673,820],transpos:[454,455],treat:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,271,272,274,275,280,281,282,284,287,291,298,302,308,314,338,365,366,367,368,369,370,371,372,375,376,377,378,381,382,383,430,458,460,467,483,595,646],tree:[137,138,239,240,245,246,263,266,365,366,369,370,381,382,484,485,486,487,488,489,585,1067],treeaggreg:[247,248,251,252,271,272,363,364,371,372,377,378],treeboost:246,treeensemblemodel:[486,488],treeweight:[245,246,263,266,369,370,381,382],tri:[245,246,369,370,629],triangular:[449,460],trick:[298,299,433],trigger:[7,145,146,558,959,966],trim:[842,885],trim_horizon:1066,trosset:466,truepositiver:427,truepositiveratebylabel:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284],truncat:[15,89,280,291,294,343,345,387,422,428,540,580,600,779,800,843,845,850,926,927,930,945,1075],trust:1066,truth:428,tryreflectionsetaccess:6,tty:1,ttys000:1,ttys001:1,tue:861,tumbl:941,tune:[8,389,390,391,392,393,1067],tup:[704,705],tupl:[7,50,78,79,85,86,87,141,155,227,229,232,240,244,246,247,251,258,259,261,266,267,271,274,277,289,292,294,300,302,306,308,310,314,316,319,320,323,326,329,332,334,337,341,343,357,361,363,366,368,370,371,375,377,382,386,389,392,415,419,420,422,425,453,455,457,458,459,463,465,466,478,480,481,538,560,564,569,626,627,641,645,647,661,666,676,677,687,865,958,1075],turkish:328,turn:[54,387,610,629,678,947],tvalu:[374,379,380],tvs:392,tvsmodel:392,tvsmodelread:392,tweedi:[371,372],two:[20,32,43,44,54,79,144,226,235,236,237,238,242,243,249,250,272,282,285,286,290,298,299,309,342,344,349,351,357,361,362,374,377,379,380,385,446,453,454,460,463,467,483,545,563,642,666,673,675,676,678,802,833,846,850,856,905,945,958,1041,1042,1075],twobthreec:905,txt:[165,202,204,206,251,261,343],type:[2,7,15,16,19,20,21,43,44,54,116,118,120,162,164,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,355,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,381,382,383,385,389,390,392,393,395,396,397,398,407,408,412,414,416,418,430,451,453,458,460,473,478,480,494,496,498,513,561,564,565,581,591,596,627,628,629,631,632,633,638,648,652,662,666,676,687,690,704,712,713,719,722,753,808,816,835,865,911,920,921,922,923,931,941,947,949,950,955,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1063,1066,1067],typeconvert:358,typeerror:[16,251,312,322,331,483],typenam:[687,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],typic:[0,1,7,298,361],u0000:648,u612:903,udf:[0,1,7,664,665,666,689,865,1076,1077],udfregistr:[698,865],uhrbach:903,uid:[1,227,228,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,398],umn:414,unabl:14,unari:[719,800,925],unbias:[326,909,937],unbound:[700,704,705,710,711,1075],unboundedfollow:[700,704,705,710,711,1075],unboundedpreced:[529,700,704,705,710,711,1075],uncensor:[363,364],unchang:338,uncompress:[6,657],undefin:[229,231,232,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,349,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,467,712],undefinedimagetyp:349,under:[0,6,191,235,236,237,238,242,243,249,250,251,252,329,330,424,426,494,629,1075,1077],underflow:819,underli:[0,8,278,325,351,390,393,394,396,398,399,403,405,446,454,634,635,638,649,654,655,685,686,693,695,951,952,955,960,961,962,1077],understand:45,unescap:[629,947],unescapedquotehandl:[629,947],unicod:[202,206],unifi:[1043,1063],uniform:[8,462,483],uniformli:874,uniformrdd:462,uniformvectorrdd:462,union:[573,589,615,616,734,843],uniqu:[32,60,80,146,167,226,337,362,401,420,455,591,628,856,958,965,966,973,976,979,1066],unit:[150,193,290,313,326,327,436,437,438,779,930],unitari:296,univari:[375,466],univariatefeatureselector:[292,333],univariatefeatureselectormodel:332,unix:[809,810,924,934],unix_tim:[809,917,934],unix_timestamp:1040,unknown:[231,239,241,245,248,252,255,260,263,337,361,362,364,365,367,369,372,376,378,381,455,458,460,564,627],unless:[1,328,795,796,859,868,869],unlik:[520,599,796,869],unlimit:[162,629,947],unmatch:[528,533,940],unnam:677,unnecessari:[988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005],unord:[844,848,849],unpack:1077,unpars:[807,808],unpersist:[34,35,426],unpredict:454,unquot:[629,632,947,949],unsaf:15,unseen:[329,330,337,338],unset:[251,252,809,917,934,1077],unsign:894,unspecifi:494,unsupport:[920,922,1075],until:[23,25,35,39,140,193,236,238,243,250,254,257,265,267,271,380,414,454,629,947,977,985],updat:[6,15,16,20,361,407,413,424,425,458,460,477,621,963,966,975,978,1044,1066],updated_data:850,updatefunc:1044,upgrad:[9,1075],upload:1077,upon:[246,337],upper:[7,12,251,252,270,278,279,292,293,310,311,319,323,324,332,333,449,460,705,820,856,865,926,931],upper_c:7,upperbound:[509,631],upperboundsoncoeffici:[251,252],upperboundsonintercept:[251,252],upport:924,upstream:[27,222,541],uri:[165,166,168,181,183,190,202,206,494],url:[3,159,162,203,631,651,684,1066],usa:343,usabl:18,usag:[0,2,6,7,41,288,291,337,612,687,1076],use:[0,1,6,7,8,12,13,15,53,89,94,131,143,150,162,165,174,193,210,219,245,246,261,263,266,270,274,275,280,290,292,298,299,309,312,322,331,337,338,345,351,357,361,369,370,381,382,384,388,389,392,394,396,398,399,403,405,407,408,412,413,422,440,441,446,453,462,463,470,473,475,477,483,496,519,531,535,558,614,615,616,619,621,634,635,648,652,654,655,656,657,662,665,666,676,679,681,687,704,705,710,711,719,721,751,777,793,800,804,807,808,810,845,850,862,865,924,925,926,927,945,951,952,958,961,962,998,1057,1066,1072,1075,1077],use_unicod:[202,206,610],used:[1,7,14,35,39,41,44,51,52,58,79,89,96,99,102,119,120,131,132,133,136,150,162,164,190,210,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,381,382,385,389,390,391,392,393,406,407,408,409,411,412,413,420,424,425,426,428,434,435,436,437,438,439,441,443,462,463,467,470,473,475,477,483,484,485,486,487,488,489,493,494,495,496,497,501,502,540,550,551,571,580,584,588,589,590,591,612,621,624,628,629,631,632,634,635,648,652,654,655,659,660,662,677,679,680,687,690,691,692,700,704,719,753,777,784,806,818,858,865,931,944,946,947,949,951,952,956,957,958,959,961,962,966,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1009,1020,1024,1025,1038,1046,1053,1054,1066,1075,1077],usedisk:210,useful:[1,7,89,193,277,294,295,299,361,362,494,540,580,593,666,865,1075],usememori:210,useoffheap:210,user:[0,6,7,8,16,26,54,73,89,115,116,117,118,150,173,174,195,198,207,221,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,355,357,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,387,388,389,390,392,393,394,396,398,399,403,405,451,453,463,464,465,496,498,499,500,621,629,631,632,651,664,665,666,676,682,685,686,704,705,710,711,713,714,865,931,947,949,968,976,985,1075,1077],user_product:464,user_rec:361,user_subset:361,user_subset_rec:361,usercol:[361,362],userdefinedfunct:[719,793,800,804,845,850,925,926,927,945],userfactor:[361,362],userfeatur:464,userid:463,users_for_product:464,uses:[0,1,6,108,192,193,194,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,413,430,438,460,477,590,629,632,648,652,656,657,662,947,949,1066,1075,1077],using:[0,1,2,3,6,7,8,10,11,16,43,44,54,66,67,77,79,89,101,105,106,107,108,112,115,116,117,118,120,121,164,186,204,227,228,229,231,232,233,234,239,240,244,246,247,251,258,259,261,266,267,270,271,274,277,278,279,280,282,283,289,292,294,298,299,300,302,303,306,308,310,313,314,316,318,319,320,322,323,326,329,332,334,336,337,341,343,357,359,361,363,365,366,368,370,371,375,377,379,380,382,383,384,387,389,392,396,406,407,408,411,412,414,416,418,422,430,433,436,437,442,453,466,470,473,475,483,487,489,490,493,494,495,496,535,549,554,565,570,577,578,580,581,588,592,621,629,632,666,676,677,681,704,705,710,711,727,752,762,785,787,792,850,865,876,882,921,923,934,942,945,947,949,958,959,1006,1030,1035,1036,1039,1046,1053,1057,1066,1075,1077],usual:[0,6,379,380],utc:[634,635,654,655,809,810,924,941,951,952,961,962,1075],utc_tim:924,utf8:1057,utf8_decod:1066,utf:[121,202,206,629,632,648,652,662,785,792,947,949,956,1061],util:[394,395,396,397,398,399,400,401,402,403,404,405,467,490,491,492,493,494,495,700,1067],val1:19,val2:19,val:941,valid:[0,15,195,234,245,246,282,347,361,362,369,370,371,377,378,389,390,392,393,407,408,412,454,470,473,475,501,629,683,941,947,1053,1066],validatedata:[407,408,412,469,470,472,473,474,475],validateinputtyp:234,validationind:[246,370],validationindicatorcol:[245,246,369,370],validationmetr:[392,393],validationtol:[245,246,369,370],vals1:736,vals2:736,valu:[6,11,12,15,16,17,19,20,21,30,34,36,43,44,50,52,58,60,65,66,67,77,79,89,90,95,102,103,106,107,115,116,117,118,120,124,127,128,144,150,152,153,154,155,156,157,158,159,160,161,164,168,170,181,182,183,184,187,190,192,193,194,196,206,224,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,350,351,352,354,355,357,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,387,388,389,390,391,392,393,395,397,398,399,405,406,407,408,409,411,412,413,414,417,418,428,429,430,433,438,441,445,446,447,450,451,453,454,455,458,459,460,461,463,465,467,469,472,473,474,476,477,481,483,484,486,487,488,489,494,501,506,507,509,510,511,512,514,516,517,520,522,525,528,533,538,545,547,553,560,564,581,582,590,591,600,621,626,627,628,629,631,632,634,635,636,637,641,642,643,644,648,651,652,654,655,656,657,662,664,666,667,670,671,672,673,676,677,678,679,681,686,687,690,704,705,710,711,712,713,715,719,723,724,727,728,729,730,736,738,739,740,747,749,752,754,755,771,772,773,774,775,777,789,790,791,793,794,795,796,797,799,800,801,803,804,805,806,807,808,810,812,816,826,827,828,830,831,834,837,838,842,845,846,849,851,852,853,854,861,862,863,865,867,868,869,870,878,881,882,885,891,892,893,894,896,898,900,905,906,913,914,915,916,920,922,924,925,926,927,931,936,937,940,946,947,949,951,952,953,954,956,957,958,961,962,988,994,998,999,1013,1018,1029,1035,1036,1044,1066,1075],value12:[811,825],value1:[20,150,494,772,811,825],value2:[20,494,772,811,825],value3:150,value4:150,value5:150,valueclass:[116,118,181,182,183,184,190],valuecontainsnul:999,valueconvert:[115,116,117,118,181,182,183,184,190],valueerror:[63,105,162,465,481],values1:[288,291],values2:[288,291],valuetyp:999,var1:150,var3:150,var4:150,var5:150,var_samp:938,vari:[79,413,477],variabl:[0,3,4,6,7,15,16,34,35,103,112,157,162,170,192,193,194,239,241,244,318,365,367,368,434,439,469,472,474,1075],varianc:[114,125,239,245,246,260,287,317,326,334,335,365,366,369,370,371,372,379,380,381,382,385,387,429,437,438,460,482,483,484,488,492,936,937],variancecol:[365,366],variancepow:[371,372],variancethreshold:[334,335],variancethresholdselector:335,variancethresholdselectormodel:334,variancethresholdselectorpath:334,variant:[274,275,598,865,942,1075],variat:[379,380,538,641],variou:[7,150,387,535,1046],vec1:346,vec:[296,347,439,453],vecassembl:[336,339],vecassembler2:336,vector:[21,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,256,257,258,259,261,263,264,265,266,267,270,271,272,274,277,278,279,280,281,282,288,289,290,292,294,295,296,297,298,299,300,301,305,306,307,308,309,310,313,314,316,317,318,323,326,332,334,336,337,338,339,340,341,342,346,347,351,355,360,361,363,365,366,367,368,369,370,371,375,376,377,379,380,381,382,383,384,386,387,388,389,392,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,425,431,432,433,434,435,436,437,438,439,440,446,451,457,458,460,461,462,467,468,469,470,471,472,473,474,475,477,481,483,485,492,494,865,1067,1076],vectoraccumulatorparam:19,vectorassembl:339,vectorassemblerpath:336,vectorindex:338,vectorindexermodel:337,vectorindexerpath:337,vectors:[341,342,439],vectorsizehint:336,vectorsizehintpath:339,vectorslicerpath:340,vectorudt:383,vendor:496,venv:1077,veri:[280,337,422,538,593,607,641],verifi:[0,15,687,1075],verifyschema:[15,687],verlag:466,version:[1,5,7,9,12,13,15,22,23,25,28,33,35,41,45,53,57,73,94,140,143,147,148,149,161,177,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,453,454,455,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,502,503,504,506,507,508,509,513,515,516,517,518,520,521,522,525,527,528,529,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,700,702,703,704,705,708,709,710,711,712,713,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,969,970,971,972,973,974,975,976,977,978,979,980,981,983,984,985,986,987],versionad:[407,425,501,947],vertex:[280,422],vertic:[7,280,600],very_expensive_initi:[865,1075],via:[0,1,4,7,112,190,277,314,337,619,631,651,712,865,1077],view:[5,548,549,550,551,689],violat:[375,466],virtual:[0,6,1077],virtualenv:[6,1076],visibl:6,vital:0,vocabs:[270,277,278,279,294,295,421],vocabulari:[270,277,278,279,294,295,341,342,420,421,439],vote:0,wai:[1,6,7,187,241,244,298,343,367,368,958,1077],wait:[25,621,970,972,985,987,1046,1048,1049,1060],wang:343,want:[0,3,6,12,15,318,494,496,501,666,966,1035,1077],warn:[195,245,263,337,369,381,389,392,428],wasn:73,watch:0,watermark:[558,621],web:[162,193,680],websit:6,wed:861,week:[779,782,861,939,941],weibul:363,weighcol:[267,274],weight:[104,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,274,275,278,279,280,281,282,284,287,297,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,387,388,406,407,408,411,412,413,417,421,424,425,426,427,429,432,466,469,470,471,472,473,474,475,477,492,586],weightag:424,weightcol:[235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,259,260,261,262,263,264,265,266,267,268,271,272,274,275,280,281,282,284,287,365,366,367,368,369,370,371,372,375,376,377,378,379,380,381,382,387,388],weightedfalsepositiver:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284,427],weightedfmeasur:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284,427],weightedprecis:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284,427],weightedrecal:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284,427],weightedtruepositiver:[235,236,237,238,242,243,249,250,253,254,256,257,264,265,284,427],well:[15,50,150,239,240,241,244,245,246,251,252,255,258,259,260,263,266,271,272,284,455,458,632,949],were:[0,73,305,787,876,963,966,975],what:[150,496],whatev:541,wheel:1077,when:[0,1,3,7,9,10,12,14,15,41,53,83,111,121,143,145,162,173,174,199,229,245,246,261,263,266,270,278,279,288,290,291,292,298,309,312,314,319,320,321,328,329,330,369,370,377,378,379,380,381,382,389,392,413,428,430,437,454,477,483,494,496,528,563,577,590,591,593,616,621,628,629,631,632,648,651,652,653,656,657,659,660,662,666,686,687,700,704,752,787,801,807,808,828,862,865,867,876,882,911,912,925,927,928,947,949,958,959,968,973,994,1053,1066,1075,1077],whenev:777,where:[0,6,45,47,79,85,146,148,160,162,168,177,193,206,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,410,417,420,421,425,434,458,460,464,494,498,540,565,580,629,631,648,679,800,925,941,947,985,1044,1051,1075],wherea:[14,246,665],whether:[35,39,82,84,103,140,150,210,227,228,229,230,231,232,233,234,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,359,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,400,407,408,412,438,458,460,466,467,470,473,475,540,580,616,629,632,636,637,648,652,683,793,804,813,947,949,953,954,970,974,985,988,999,1003,1004],which:[0,1,6,7,12,14,41,54,67,71,79,89,108,113,114,124,146,147,150,169,182,184,191,192,193,194,202,205,206,219,227,229,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,271,274,277,280,281,282,283,284,285,286,287,289,290,291,292,294,300,301,302,303,304,306,308,309,310,314,316,319,320,323,325,326,329,332,334,336,337,338,341,342,343,345,361,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,382,383,384,389,392,407,408,409,412,416,417,418,420,422,424,425,429,434,435,438,439,453,455,458,460,466,467,470,473,475,483,490,492,493,494,495,532,538,540,555,569,580,586,619,621,629,632,641,645,666,680,685,686,687,699,736,758,759,800,801,810,816,828,829,861,862,865,867,891,905,922,924,941,947,949,958,960,967,1004,1006,1012,1013,1014,1015,1021,1023,1027,1028,1030,1033,1035,1036,1041,1042,1045,1046,1058,1062,1075,1076,1077],white:[124,331],whitespac:[629,648,947],who:[89,198],whole:[501,629,632,865,947,949,1075,1077],wholetext:956,whose:[124,284,285,290,292,309,332,398,410,430,439,458,460,461,845,956],wide:1077,width:[349,841,884,1014,1023,1035,1036,1045],wiki:298,wikipedia:[235,236,237,238,242,243,249,250,280,289,296,298,308,318,345,363,371,379,380,466],william:422,window:[341,342,439,529,621,710,711,773,787,827,830,862,863,865,866,876,883,1006,1014,1015,1023,1035,1036,1067,1075],windowdur:[941,1014,1015,1023,1035,1036,1045],windows:[341,342,439],windowspec:[529,702,703,704,705],wise:[7,280,292,293,297,309,332,387,422,430,460,483,553,644,850,945],wish:[89,1056],withcent:[323,324],withcolumn:[7,11,518,529,534,593,704,705,834,865,874,875,1075],withfield:518,within:[1,7,32,44,45,57,75,80,98,109,130,145,226,247,248,251,252,255,258,282,319,361,362,363,364,377,378,418,435,438,460,485,487,489,705,773,774,775,787,856,866,876,883,970,985,1050,1061,1075],withmean:[326,327,437,438],without:[1,6,7,65,95,111,245,246,339,343,369,370,483,536,563,576,595,646,673,725,726,734,787,810,819,924,1018,1029,1075],withreplac:[111,112,133,594],withscal:[323,324],withstd:[326,327,437,438],withwatermark:558,won:[146,389,390],word2vec:[342,440],word2vecmodel:[341,439],word2vecpath:341,word:[270,277,278,279,294,295,297,299,312,322,328,331,341,342,420,421,439,440,679,820,958],words1:328,words2:328,work:[0,1,5,41,131,192,193,194,357,373,374,453,563,625,761,865,1075],workaround:[865,931],worker:[1,16,26,160,162,221,343,1066],worker_main:1,workload:0,workshop:414,world:[202,204],worth:0,would:[0,1,79,150,267,305,314,387,414,496,498,629,705,787,856,876,947,958],wrap:[147,148,149,687,865,968,1075],wrapper:[239,240,241,244,245,246,247,248,251,252,255,258,259,260,263,266,267,268,270,271,272,274,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,457,459],writabl:[116,118,120,181,182,183,184,190,397],writableconvert:[181,182,183,184,190],write:[7,8,150,165,202,204,206,229,230,239,240,241,244,245,246,247,248,251,252,255,258,259,260,261,262,263,266,267,268,270,271,272,274,275,277,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,361,362,363,364,365,366,367,368,369,370,371,372,375,376,377,378,381,382,389,390,392,393,397,398,404,494,624,647,648,649,652,653,654,655,656,657,658,659,661,662,957,958,959,961,962],writer:[398,399,405,958,959,960,963,965,967],writestream:[957,958,959,960,963,965,966,967,972,976,984,986],writeto:[753,784,818,858,944],written:[89,120,648,963,966,1050,1061],wrong:339,wrong_kei:677,www:[421,422,466],x00:[712,713],x02:713,x04:712,x0cspade:713,x_t:425,xmean:492,xor:512,xs_y:945,xvarianc:492,xxhash:942,xxx:[629,632,648,652,947,949],xzvf:6,yarn:[1,167,496,1077],year:[633,637,639,647,658,661,673,777,779,783,930],yes:683,yet:[3,102,280,345,584],yield:[7,92,93,94,581,865,867,1075],yin:343,yiwen:343,york:343,you:[0,1,3,4,6,7,8,10,11,12,15,23,25,77,89,108,150,162,164,206,268,270,494,501,518,541,558,629,634,635,654,655,681,787,876,947,951,952,958,961,962,966,1035,1072,1075,1077],your:[1,3,4,6,8,11,79,162,541,631,651,931,958,1066,1077],yourself:[7,1075],yyi:777,yyyi:[629,632,634,635,636,637,648,652,777,779,809,921,923,930,934,947,949],zero:[19,43,44,66,270,277,278,279,296,298,299,308,310,314,334,351,355,357,387,425,428,433,436,438,446,451,453,454,458,460,483,494,538,553,595,632,641,644,646,719,730,791,822,832,835,911,949],zerovalu:[43,44,66,67,137],zhang:343,zip:[6,86,90,145,146,162,163,166,417,736,764,769,770,1077],zipwithindex:146,zlib:656,zone:[634,635,654,655,809,810,924,951,952,961,962],zoo:7,zstd:657},titles:["Contributing to PySpark","Debugging PySpark","Development","Setting up IDEs","Testing PySpark","Getting Started","Installation","Quickstart","PySpark Documentation","Migration Guide","Upgrading from PySpark 1.0-1.2 to 1.3","Upgrading from PySpark 1.4 to 1.5","Upgrading from PySpark 2.2 to 2.3","Upgrading from PySpark 2.3.0 to 2.3.1 and above","Upgrading from PySpark 2.3 to 2.4","Upgrading from PySpark 2.4 to 3.0","pyspark.Accumulator","pyspark.Accumulator.add","pyspark.Accumulator.value","pyspark.AccumulatorParam","pyspark.AccumulatorParam.addInPlace","pyspark.AccumulatorParam.zero","pyspark.BarrierTaskContext","pyspark.BarrierTaskContext.allGather","pyspark.BarrierTaskContext.attemptNumber","pyspark.BarrierTaskContext.barrier","pyspark.BarrierTaskContext.get","pyspark.BarrierTaskContext.getLocalProperty","pyspark.BarrierTaskContext.getTaskInfos","pyspark.BarrierTaskContext.partitionId","pyspark.BarrierTaskContext.resources","pyspark.BarrierTaskContext.stageId","pyspark.BarrierTaskContext.taskAttemptId","pyspark.BarrierTaskInfo","pyspark.Broadcast","pyspark.Broadcast.destroy","pyspark.Broadcast.dump","pyspark.Broadcast.load","pyspark.Broadcast.load_from_path","pyspark.Broadcast.unpersist","pyspark.Broadcast.value","pyspark.InheritableThread","pyspark.RDD","pyspark.RDD.aggregate","pyspark.RDD.aggregateByKey","pyspark.RDD.barrier","pyspark.RDD.cache","pyspark.RDD.cartesian","pyspark.RDD.checkpoint","pyspark.RDD.coalesce","pyspark.RDD.cogroup","pyspark.RDD.collect","pyspark.RDD.collectAsMap","pyspark.RDD.collectWithJobGroup","pyspark.RDD.combineByKey","pyspark.RDD.context","pyspark.RDD.count","pyspark.RDD.countApprox","pyspark.RDD.countApproxDistinct","pyspark.RDD.countByKey","pyspark.RDD.countByValue","pyspark.RDD.distinct","pyspark.RDD.filter","pyspark.RDD.first","pyspark.RDD.flatMap","pyspark.RDD.flatMapValues","pyspark.RDD.fold","pyspark.RDD.foldByKey","pyspark.RDD.foreach","pyspark.RDD.foreachPartition","pyspark.RDD.fullOuterJoin","pyspark.RDD.getCheckpointFile","pyspark.RDD.getNumPartitions","pyspark.RDD.getResourceProfile","pyspark.RDD.getStorageLevel","pyspark.RDD.glom","pyspark.RDD.groupBy","pyspark.RDD.groupByKey","pyspark.RDD.groupWith","pyspark.RDD.histogram","pyspark.RDD.id","pyspark.RDD.intersection","pyspark.RDD.isCheckpointed","pyspark.RDD.isEmpty","pyspark.RDD.isLocallyCheckpointed","pyspark.RDD.join","pyspark.RDD.keyBy","pyspark.RDD.keys","pyspark.RDD.leftOuterJoin","pyspark.RDD.localCheckpoint","pyspark.RDD.lookup","pyspark.RDD.map","pyspark.RDD.mapPartitions","pyspark.RDD.mapPartitionsWithIndex","pyspark.RDD.mapPartitionsWithSplit","pyspark.RDD.mapValues","pyspark.RDD.max","pyspark.RDD.mean","pyspark.RDD.meanApprox","pyspark.RDD.min","pyspark.RDD.name","pyspark.RDD.partitionBy","pyspark.RDD.persist","pyspark.RDD.pipe","pyspark.RDD.randomSplit","pyspark.RDD.reduce","pyspark.RDD.reduceByKey","pyspark.RDD.reduceByKeyLocally","pyspark.RDD.repartition","pyspark.RDD.repartitionAndSortWithinPartitions","pyspark.RDD.rightOuterJoin","pyspark.RDD.sample","pyspark.RDD.sampleByKey","pyspark.RDD.sampleStdev","pyspark.RDD.sampleVariance","pyspark.RDD.saveAsHadoopDataset","pyspark.RDD.saveAsHadoopFile","pyspark.RDD.saveAsNewAPIHadoopDataset","pyspark.RDD.saveAsNewAPIHadoopFile","pyspark.RDD.saveAsPickleFile","pyspark.RDD.saveAsSequenceFile","pyspark.RDD.saveAsTextFile","pyspark.RDD.setName","pyspark.RDD.sortBy","pyspark.RDD.sortByKey","pyspark.RDD.stats","pyspark.RDD.stdev","pyspark.RDD.subtract","pyspark.RDD.subtractByKey","pyspark.RDD.sum","pyspark.RDD.sumApprox","pyspark.RDD.take","pyspark.RDD.takeOrdered","pyspark.RDD.takeSample","pyspark.RDD.toDebugString","pyspark.RDD.toLocalIterator","pyspark.RDD.top","pyspark.RDD.treeAggregate","pyspark.RDD.treeReduce","pyspark.RDD.union","pyspark.RDD.unpersist","pyspark.RDD.values","pyspark.RDD.variance","pyspark.RDD.withResources","pyspark.RDD.zip","pyspark.RDD.zipWithIndex","pyspark.RDD.zipWithUniqueId","pyspark.RDDBarrier","pyspark.RDDBarrier.mapPartitions","pyspark.RDDBarrier.mapPartitionsWithIndex","pyspark.SparkConf","pyspark.SparkConf.contains","pyspark.SparkConf.get","pyspark.SparkConf.getAll","pyspark.SparkConf.set","pyspark.SparkConf.setAll","pyspark.SparkConf.setAppName","pyspark.SparkConf.setExecutorEnv","pyspark.SparkConf.setIfMissing","pyspark.SparkConf.setMaster","pyspark.SparkConf.setSparkHome","pyspark.SparkConf.toDebugString","pyspark.SparkContext","pyspark.SparkContext.PACKAGE_EXTENSIONS","pyspark.SparkContext.accumulator","pyspark.SparkContext.addFile","pyspark.SparkContext.addPyFile","pyspark.SparkContext.applicationId","pyspark.SparkContext.binaryFiles","pyspark.SparkContext.binaryRecords","pyspark.SparkContext.broadcast","pyspark.SparkContext.cancelAllJobs","pyspark.SparkContext.cancelJobGroup","pyspark.SparkContext.defaultMinPartitions","pyspark.SparkContext.defaultParallelism","pyspark.SparkContext.dump_profiles","pyspark.SparkContext.emptyRDD","pyspark.SparkContext.getCheckpointDir","pyspark.SparkContext.getConf","pyspark.SparkContext.getLocalProperty","pyspark.SparkContext.getOrCreate","pyspark.SparkContext.hadoopFile","pyspark.SparkContext.hadoopRDD","pyspark.SparkContext.newAPIHadoopFile","pyspark.SparkContext.newAPIHadoopRDD","pyspark.SparkContext.parallelize","pyspark.SparkContext.pickleFile","pyspark.SparkContext.range","pyspark.SparkContext.resources","pyspark.SparkContext.runJob","pyspark.SparkContext.sequenceFile","pyspark.SparkContext.setCheckpointDir","pyspark.SparkContext.setJobDescription","pyspark.SparkContext.setJobGroup","pyspark.SparkContext.setLocalProperty","pyspark.SparkContext.setLogLevel","pyspark.SparkContext.setSystemProperty","pyspark.SparkContext.show_profiles","pyspark.SparkContext.sparkUser","pyspark.SparkContext.startTime","pyspark.SparkContext.statusTracker","pyspark.SparkContext.stop","pyspark.SparkContext.textFile","pyspark.SparkContext.uiWebUrl","pyspark.SparkContext.union","pyspark.SparkContext.version","pyspark.SparkContext.wholeTextFiles","pyspark.SparkFiles","pyspark.SparkFiles.get","pyspark.SparkFiles.getRootDirectory","pyspark.StorageLevel","pyspark.StorageLevel.DISK_ONLY","pyspark.StorageLevel.DISK_ONLY_2","pyspark.StorageLevel.DISK_ONLY_3","pyspark.StorageLevel.MEMORY_AND_DISK","pyspark.StorageLevel.MEMORY_AND_DISK_2","pyspark.StorageLevel.MEMORY_ONLY","pyspark.StorageLevel.MEMORY_ONLY_2","pyspark.StorageLevel.OFF_HEAP","pyspark.TaskContext","pyspark.TaskContext.attemptNumber","pyspark.TaskContext.get","pyspark.TaskContext.getLocalProperty","pyspark.TaskContext.partitionId","pyspark.TaskContext.resources","pyspark.TaskContext.stageId","pyspark.TaskContext.taskAttemptId","Estimator","Model","Pipeline","PipelineModel","PredictionModel","Predictor","Transformer","UnaryTransformer","BinaryLogisticRegressionSummary","BinaryLogisticRegressionTrainingSummary","BinaryRandomForestClassificationSummary","BinaryRandomForestClassificationTrainingSummary","DecisionTreeClassificationModel","DecisionTreeClassifier","FMClassificationModel","FMClassificationSummary","FMClassificationTrainingSummary","FMClassifier","GBTClassificationModel","GBTClassifier","LinearSVC","LinearSVCModel","LinearSVCSummary","LinearSVCTrainingSummary","LogisticRegression","LogisticRegressionModel","LogisticRegressionSummary","LogisticRegressionTrainingSummary","MultilayerPerceptronClassificationModel","MultilayerPerceptronClassificationSummary","MultilayerPerceptronClassificationTrainingSummary","MultilayerPerceptronClassifier","NaiveBayes","NaiveBayesModel","OneVsRest","OneVsRestModel","RandomForestClassificationModel","RandomForestClassificationSummary","RandomForestClassificationTrainingSummary","RandomForestClassifier","BisectingKMeans","BisectingKMeansModel","BisectingKMeansSummary","DistributedLDAModel","GaussianMixture","GaussianMixtureModel","GaussianMixtureSummary","KMeans","KMeansModel","KMeansSummary","LDA","LDAModel","LocalLDAModel","PowerIterationClustering","BinaryClassificationEvaluator","ClusteringEvaluator","Evaluator","MulticlassClassificationEvaluator","MultilabelClassificationEvaluator","RankingEvaluator","RegressionEvaluator","Binarizer","BucketedRandomProjectionLSH","BucketedRandomProjectionLSHModel","Bucketizer","ChiSqSelector","ChiSqSelectorModel","CountVectorizer","CountVectorizerModel","DCT","ElementwiseProduct","FeatureHasher","HashingTF","IDF","IDFModel","Imputer","ImputerModel","IndexToString","Interaction","MaxAbsScaler","MaxAbsScalerModel","MinHashLSH","MinHashLSHModel","MinMaxScaler","MinMaxScalerModel","NGram","Normalizer","OneHotEncoder","OneHotEncoderModel","PCA","PCAModel","PolynomialExpansion","QuantileDiscretizer","RFormula","RFormulaModel","RegexTokenizer","RobustScaler","RobustScalerModel","SQLTransformer","StandardScaler","StandardScalerModel","StopWordsRemover","StringIndexer","StringIndexerModel","Tokenizer","UnivariateFeatureSelector","UnivariateFeatureSelectorModel","VarianceThresholdSelector","VarianceThresholdSelectorModel","VectorAssembler","VectorIndexer","VectorIndexerModel","VectorSizeHint","VectorSlicer","Word2Vec","Word2VecModel","FPGrowth","FPGrowthModel","PrefixSpan","pyspark.ml.functions.array_to_vector","pyspark.ml.functions.vector_to_array","ImageSchema","_ImageSchema","DenseMatrix","DenseVector","Matrices","Matrix","SparseMatrix","SparseVector","Vector","Vectors","Param","Params","TypeConverters","ALS","ALSModel","AFTSurvivalRegression","AFTSurvivalRegressionModel","DecisionTreeRegressionModel","DecisionTreeRegressor","FMRegressionModel","FMRegressor","GBTRegressionModel","GBTRegressor","GeneralizedLinearRegression","GeneralizedLinearRegressionModel","GeneralizedLinearRegressionSummary","GeneralizedLinearRegressionTrainingSummary","IsotonicRegression","IsotonicRegressionModel","LinearRegression","LinearRegressionModel","LinearRegressionSummary","LinearRegressionTrainingSummary","RandomForestRegressionModel","RandomForestRegressor","ChiSquareTest","Correlation","KolmogorovSmirnovTest","MultivariateGaussian","Summarizer","SummaryBuilder","CrossValidator","CrossValidatorModel","ParamGridBuilder","TrainValidationSplit","TrainValidationSplitModel","BaseReadWrite","DefaultParamsReadable","DefaultParamsReader","DefaultParamsWritable","DefaultParamsWriter","GeneralMLWriter","HasTrainingSummary","Identifiable","MLReadable","MLReader","MLWritable","MLWriter","LogisticRegressionModel","LogisticRegressionWithLBFGS","LogisticRegressionWithSGD","NaiveBayes","NaiveBayesModel","SVMModel","SVMWithSGD","StreamingLogisticRegressionWithSGD","BisectingKMeans","BisectingKMeansModel","GaussianMixture","GaussianMixtureModel","KMeans","KMeansModel","LDA","LDAModel","PowerIterationClustering","PowerIterationClusteringModel","StreamingKMeans","StreamingKMeansModel","BinaryClassificationMetrics","MulticlassMetrics","RankingMetrics","RegressionMetrics","ChiSqSelector","ChiSqSelectorModel","ElementwiseProduct","HashingTF","IDF","IDFModel","Normalizer","StandardScaler","StandardScalerModel","Word2Vec","Word2VecModel","FPGrowth","FPGrowthModel","PrefixSpan","PrefixSpanModel","DenseMatrix","DenseVector","Matrices","Matrix","QRDecomposition","SparseMatrix","SparseVector","Vector","Vectors","BlockMatrix","CoordinateMatrix","DistributedMatrix","IndexedRow","IndexedRowMatrix","MatrixEntry","RowMatrix","SingularValueDecomposition","RandomRDDs","ALS","MatrixFactorizationModel","Rating","IsotonicRegression","IsotonicRegressionModel","LabeledPoint","LassoModel","LassoWithSGD","LinearModel","LinearRegressionModel","LinearRegressionWithSGD","RidgeRegressionModel","RidgeRegressionWithSGD","StreamingLinearAlgorithm","StreamingLinearRegressionWithSGD","ChiSqTestResult","KernelDensity","KolmogorovSmirnovTestResult","MultivariateGaussian","MultivariateStatisticalSummary","Statistics","DecisionTree","DecisionTreeModel","GradientBoostedTrees","GradientBoostedTreesModel","RandomForest","RandomForestModel","JavaLoader","JavaSaveable","LinearDataGenerator","Loader","MLUtils","Saveable","pyspark.resource.ExecutorResourceRequest","pyspark.resource.ExecutorResourceRequests","pyspark.resource.ResourceInformation","pyspark.resource.ResourceProfile","pyspark.resource.ResourceProfileBuilder","pyspark.resource.TaskResourceRequest","pyspark.resource.TaskResourceRequests","pyspark.sql.Column","pyspark.sql.Column.alias","pyspark.sql.Column.asc","pyspark.sql.Column.asc_nulls_first","pyspark.sql.Column.asc_nulls_last","pyspark.sql.Column.astype","pyspark.sql.Column.between","pyspark.sql.Column.bitwiseAND","pyspark.sql.Column.bitwiseOR","pyspark.sql.Column.bitwiseXOR","pyspark.sql.Column.cast","pyspark.sql.Column.contains","pyspark.sql.Column.desc","pyspark.sql.Column.desc_nulls_first","pyspark.sql.Column.desc_nulls_last","pyspark.sql.Column.dropFields","pyspark.sql.Column.endswith","pyspark.sql.Column.eqNullSafe","pyspark.sql.Column.getField","pyspark.sql.Column.getItem","pyspark.sql.Column.isNotNull","pyspark.sql.Column.isNull","pyspark.sql.Column.isin","pyspark.sql.Column.like","pyspark.sql.Column.name","pyspark.sql.Column.otherwise","pyspark.sql.Column.over","pyspark.sql.Column.rlike","pyspark.sql.Column.startswith","pyspark.sql.Column.substr","pyspark.sql.Column.when","pyspark.sql.Column.withField","pyspark.sql.DataFrame","pyspark.sql.DataFrame.agg","pyspark.sql.DataFrame.alias","pyspark.sql.DataFrame.approxQuantile","pyspark.sql.DataFrame.cache","pyspark.sql.DataFrame.checkpoint","pyspark.sql.DataFrame.coalesce","pyspark.sql.DataFrame.colRegex","pyspark.sql.DataFrame.collect","pyspark.sql.DataFrame.columns","pyspark.sql.DataFrame.corr","pyspark.sql.DataFrame.count","pyspark.sql.DataFrame.cov","pyspark.sql.DataFrame.createGlobalTempView","pyspark.sql.DataFrame.createOrReplaceGlobalTempView","pyspark.sql.DataFrame.createOrReplaceTempView","pyspark.sql.DataFrame.createTempView","pyspark.sql.DataFrame.crossJoin","pyspark.sql.DataFrame.crosstab","pyspark.sql.DataFrame.cube","pyspark.sql.DataFrame.describe","pyspark.sql.DataFrame.distinct","pyspark.sql.DataFrame.drop","pyspark.sql.DataFrame.dropDuplicates","pyspark.sql.DataFrame.drop_duplicates","pyspark.sql.DataFrame.dropna","pyspark.sql.DataFrame.dtypes","pyspark.sql.DataFrame.exceptAll","pyspark.sql.DataFrame.explain","pyspark.sql.DataFrame.fillna","pyspark.sql.DataFrame.filter","pyspark.sql.DataFrame.first","pyspark.sql.DataFrame.foreach","pyspark.sql.DataFrame.foreachPartition","pyspark.sql.DataFrame.freqItems","pyspark.sql.DataFrame.groupBy","pyspark.sql.DataFrame.head","pyspark.sql.DataFrame.hint","pyspark.sql.DataFrame.inputFiles","pyspark.sql.DataFrame.intersect","pyspark.sql.DataFrame.intersectAll","pyspark.sql.DataFrame.isLocal","pyspark.sql.DataFrame.isStreaming","pyspark.sql.DataFrame.join","pyspark.sql.DataFrame.limit","pyspark.sql.DataFrame.localCheckpoint","pyspark.sql.DataFrame.mapInPandas","pyspark.sql.DataFrame.na","pyspark.sql.DataFrame.orderBy","pyspark.sql.DataFrame.persist","pyspark.sql.DataFrame.printSchema","pyspark.sql.DataFrame.randomSplit","pyspark.sql.DataFrame.rdd","pyspark.sql.DataFrame.registerTempTable","pyspark.sql.DataFrame.repartition","pyspark.sql.DataFrame.repartitionByRange","pyspark.sql.DataFrame.replace","pyspark.sql.DataFrame.rollup","pyspark.sql.DataFrame.sameSemantics","pyspark.sql.DataFrame.sample","pyspark.sql.DataFrame.sampleBy","pyspark.sql.DataFrame.schema","pyspark.sql.DataFrame.select","pyspark.sql.DataFrame.selectExpr","pyspark.sql.DataFrame.semanticHash","pyspark.sql.DataFrame.show","pyspark.sql.DataFrame.sort","pyspark.sql.DataFrame.sortWithinPartitions","pyspark.sql.DataFrame.stat","pyspark.sql.DataFrame.storageLevel","pyspark.sql.DataFrame.subtract","pyspark.sql.DataFrame.summary","pyspark.sql.DataFrame.tail","pyspark.sql.DataFrame.take","pyspark.sql.DataFrame.toDF","pyspark.sql.DataFrame.toJSON","pyspark.sql.DataFrame.toLocalIterator","pyspark.sql.DataFrame.toPandas","pyspark.sql.DataFrame.transform","pyspark.sql.DataFrame.union","pyspark.sql.DataFrame.unionAll","pyspark.sql.DataFrame.unionByName","pyspark.sql.DataFrame.unpersist","pyspark.sql.DataFrame.where","pyspark.sql.DataFrame.withColumn","pyspark.sql.DataFrame.withColumnRenamed","pyspark.sql.DataFrame.withWatermark","pyspark.sql.DataFrame.write","pyspark.sql.DataFrame.writeStream","pyspark.sql.DataFrame.writeTo","pyspark.sql.DataFrameNaFunctions","pyspark.sql.DataFrameNaFunctions.drop","pyspark.sql.DataFrameNaFunctions.fill","pyspark.sql.DataFrameNaFunctions.replace","pyspark.sql.DataFrameReader.csv","pyspark.sql.DataFrameReader.format","pyspark.sql.DataFrameReader.jdbc","pyspark.sql.DataFrameReader.json","pyspark.sql.DataFrameReader.load","pyspark.sql.DataFrameReader.option","pyspark.sql.DataFrameReader.options","pyspark.sql.DataFrameReader.orc","pyspark.sql.DataFrameReader.parquet","pyspark.sql.DataFrameReader.schema","pyspark.sql.DataFrameReader.table","pyspark.sql.DataFrameStatFunctions","pyspark.sql.DataFrameStatFunctions.approxQuantile","pyspark.sql.DataFrameStatFunctions.corr","pyspark.sql.DataFrameStatFunctions.cov","pyspark.sql.DataFrameStatFunctions.crosstab","pyspark.sql.DataFrameStatFunctions.freqItems","pyspark.sql.DataFrameStatFunctions.sampleBy","pyspark.sql.DataFrameWriter.bucketBy","pyspark.sql.DataFrameWriter.csv","pyspark.sql.DataFrameWriter.format","pyspark.sql.DataFrameWriter.insertInto","pyspark.sql.DataFrameWriter.jdbc","pyspark.sql.DataFrameWriter.json","pyspark.sql.DataFrameWriter.mode","pyspark.sql.DataFrameWriter.option","pyspark.sql.DataFrameWriter.options","pyspark.sql.DataFrameWriter.orc","pyspark.sql.DataFrameWriter.parquet","pyspark.sql.DataFrameWriter.partitionBy","pyspark.sql.DataFrameWriter.save","pyspark.sql.DataFrameWriter.saveAsTable","pyspark.sql.DataFrameWriter.sortBy","pyspark.sql.DataFrameWriter.text","pyspark.sql.GroupedData","pyspark.sql.GroupedData.agg","pyspark.sql.GroupedData.apply","pyspark.sql.GroupedData.applyInPandas","pyspark.sql.GroupedData.avg","pyspark.sql.GroupedData.cogroup","pyspark.sql.GroupedData.count","pyspark.sql.GroupedData.max","pyspark.sql.GroupedData.mean","pyspark.sql.GroupedData.min","pyspark.sql.GroupedData.pivot","pyspark.sql.GroupedData.sum","pyspark.sql.PandasCogroupedOps","pyspark.sql.PandasCogroupedOps.applyInPandas","pyspark.sql.Row","pyspark.sql.Row.asDict","pyspark.sql.SparkSession","pyspark.sql.SparkSession.builder.appName","pyspark.sql.SparkSession.builder.config","pyspark.sql.SparkSession.builder.enableHiveSupport","pyspark.sql.SparkSession.builder.getOrCreate","pyspark.sql.SparkSession.builder.master","pyspark.sql.SparkSession.catalog","pyspark.sql.SparkSession.conf","pyspark.sql.SparkSession.createDataFrame","pyspark.sql.SparkSession.getActiveSession","pyspark.sql.SparkSession.newSession","pyspark.sql.SparkSession.range","pyspark.sql.SparkSession.read","pyspark.sql.SparkSession.readStream","pyspark.sql.SparkSession.sparkContext","pyspark.sql.SparkSession.sql","pyspark.sql.SparkSession.stop","pyspark.sql.SparkSession.streams","pyspark.sql.SparkSession.table","pyspark.sql.SparkSession.udf","pyspark.sql.SparkSession.version","pyspark.sql.Window","pyspark.sql.Window.currentRow","pyspark.sql.Window.orderBy","pyspark.sql.Window.partitionBy","pyspark.sql.Window.rangeBetween","pyspark.sql.Window.rowsBetween","pyspark.sql.Window.unboundedFollowing","pyspark.sql.Window.unboundedPreceding","pyspark.sql.WindowSpec.orderBy","pyspark.sql.WindowSpec.partitionBy","pyspark.sql.WindowSpec.rangeBetween","pyspark.sql.WindowSpec.rowsBetween","pyspark.sql.avro.functions.from_avro","pyspark.sql.avro.functions.to_avro","pyspark.sql.conf.RuntimeConfig","pyspark.sql.functions.abs","pyspark.sql.functions.acos","pyspark.sql.functions.acosh","pyspark.sql.functions.add_months","pyspark.sql.functions.aggregate","pyspark.sql.functions.approxCountDistinct","pyspark.sql.functions.approx_count_distinct","pyspark.sql.functions.array","pyspark.sql.functions.array_contains","pyspark.sql.functions.array_distinct","pyspark.sql.functions.array_except","pyspark.sql.functions.array_intersect","pyspark.sql.functions.array_join","pyspark.sql.functions.array_max","pyspark.sql.functions.array_min","pyspark.sql.functions.array_position","pyspark.sql.functions.array_remove","pyspark.sql.functions.array_repeat","pyspark.sql.functions.array_sort","pyspark.sql.functions.array_union","pyspark.sql.functions.arrays_overlap","pyspark.sql.functions.arrays_zip","pyspark.sql.functions.asc","pyspark.sql.functions.asc_nulls_first","pyspark.sql.functions.asc_nulls_last","pyspark.sql.functions.ascii","pyspark.sql.functions.asin","pyspark.sql.functions.asinh","pyspark.sql.functions.assert_true","pyspark.sql.functions.atan","pyspark.sql.functions.atan2","pyspark.sql.functions.atanh","pyspark.sql.functions.avg","pyspark.sql.functions.base64","pyspark.sql.functions.bin","pyspark.sql.functions.bitwiseNOT","pyspark.sql.functions.broadcast","pyspark.sql.functions.bround","pyspark.sql.functions.bucket","pyspark.sql.functions.cbrt","pyspark.sql.functions.ceil","pyspark.sql.functions.coalesce","pyspark.sql.functions.col","pyspark.sql.functions.collect_list","pyspark.sql.functions.collect_set","pyspark.sql.functions.column","pyspark.sql.functions.concat","pyspark.sql.functions.concat_ws","pyspark.sql.functions.conv","pyspark.sql.functions.corr","pyspark.sql.functions.cos","pyspark.sql.functions.cosh","pyspark.sql.functions.count","pyspark.sql.functions.countDistinct","pyspark.sql.functions.covar_pop","pyspark.sql.functions.covar_samp","pyspark.sql.functions.crc32","pyspark.sql.functions.create_map","pyspark.sql.functions.cume_dist","pyspark.sql.functions.current_date","pyspark.sql.functions.current_timestamp","pyspark.sql.functions.date_add","pyspark.sql.functions.date_format","pyspark.sql.functions.date_sub","pyspark.sql.functions.date_trunc","pyspark.sql.functions.datediff","pyspark.sql.functions.dayofmonth","pyspark.sql.functions.dayofweek","pyspark.sql.functions.dayofyear","pyspark.sql.functions.days","pyspark.sql.functions.decode","pyspark.sql.functions.degrees","pyspark.sql.functions.dense_rank","pyspark.sql.functions.desc","pyspark.sql.functions.desc_nulls_first","pyspark.sql.functions.desc_nulls_last","pyspark.sql.functions.element_at","pyspark.sql.functions.encode","pyspark.sql.functions.exists","pyspark.sql.functions.exp","pyspark.sql.functions.explode","pyspark.sql.functions.explode_outer","pyspark.sql.functions.expm1","pyspark.sql.functions.expr","pyspark.sql.functions.factorial","pyspark.sql.functions.filter","pyspark.sql.functions.first","pyspark.sql.functions.flatten","pyspark.sql.functions.floor","pyspark.sql.functions.forall","pyspark.sql.functions.format_number","pyspark.sql.functions.format_string","pyspark.sql.functions.from_csv","pyspark.sql.functions.from_json","pyspark.sql.functions.from_unixtime","pyspark.sql.functions.from_utc_timestamp","pyspark.sql.functions.get_json_object","pyspark.sql.functions.greatest","pyspark.sql.functions.grouping","pyspark.sql.functions.grouping_id","pyspark.sql.functions.hash","pyspark.sql.functions.hex","pyspark.sql.functions.hour","pyspark.sql.functions.hours","pyspark.sql.functions.hypot","pyspark.sql.functions.initcap","pyspark.sql.functions.input_file_name","pyspark.sql.functions.instr","pyspark.sql.functions.isnan","pyspark.sql.functions.isnull","pyspark.sql.functions.json_tuple","pyspark.sql.functions.kurtosis","pyspark.sql.functions.lag","pyspark.sql.functions.last","pyspark.sql.functions.last_day","pyspark.sql.functions.lead","pyspark.sql.functions.least","pyspark.sql.functions.length","pyspark.sql.functions.levenshtein","pyspark.sql.functions.lit","pyspark.sql.functions.locate","pyspark.sql.functions.log","pyspark.sql.functions.log10","pyspark.sql.functions.log1p","pyspark.sql.functions.log2","pyspark.sql.functions.lower","pyspark.sql.functions.lpad","pyspark.sql.functions.ltrim","pyspark.sql.functions.map_concat","pyspark.sql.functions.map_entries","pyspark.sql.functions.map_filter","pyspark.sql.functions.map_from_arrays","pyspark.sql.functions.map_from_entries","pyspark.sql.functions.map_keys","pyspark.sql.functions.map_values","pyspark.sql.functions.map_zip_with","pyspark.sql.functions.max","pyspark.sql.functions.md5","pyspark.sql.functions.mean","pyspark.sql.functions.min","pyspark.sql.functions.minute","pyspark.sql.functions.monotonically_increasing_id","pyspark.sql.functions.month","pyspark.sql.functions.months","pyspark.sql.functions.months_between","pyspark.sql.functions.nanvl","pyspark.sql.functions.next_day","pyspark.sql.functions.nth_value","pyspark.sql.functions.ntile","pyspark.sql.functions.overlay","pyspark.sql.functions.pandas_udf","pyspark.sql.functions.percent_rank","pyspark.sql.functions.percentile_approx","pyspark.sql.functions.posexplode","pyspark.sql.functions.posexplode_outer","pyspark.sql.functions.pow","pyspark.sql.functions.quarter","pyspark.sql.functions.radians","pyspark.sql.functions.raise_error","pyspark.sql.functions.rand","pyspark.sql.functions.randn","pyspark.sql.functions.rank","pyspark.sql.functions.regexp_extract","pyspark.sql.functions.regexp_replace","pyspark.sql.functions.repeat","pyspark.sql.functions.reverse","pyspark.sql.functions.rint","pyspark.sql.functions.round","pyspark.sql.functions.row_number","pyspark.sql.functions.rpad","pyspark.sql.functions.rtrim","pyspark.sql.functions.schema_of_csv","pyspark.sql.functions.schema_of_json","pyspark.sql.functions.second","pyspark.sql.functions.sequence","pyspark.sql.functions.sha1","pyspark.sql.functions.sha2","pyspark.sql.functions.shiftLeft","pyspark.sql.functions.shiftRight","pyspark.sql.functions.shiftRightUnsigned","pyspark.sql.functions.shuffle","pyspark.sql.functions.signum","pyspark.sql.functions.sin","pyspark.sql.functions.sinh","pyspark.sql.functions.size","pyspark.sql.functions.skewness","pyspark.sql.functions.slice","pyspark.sql.functions.sort_array","pyspark.sql.functions.soundex","pyspark.sql.functions.spark_partition_id","pyspark.sql.functions.split","pyspark.sql.functions.sqrt","pyspark.sql.functions.stddev","pyspark.sql.functions.stddev_pop","pyspark.sql.functions.stddev_samp","pyspark.sql.functions.struct","pyspark.sql.functions.substring","pyspark.sql.functions.substring_index","pyspark.sql.functions.sum","pyspark.sql.functions.sumDistinct","pyspark.sql.functions.tan","pyspark.sql.functions.tanh","pyspark.sql.functions.timestamp_seconds","pyspark.sql.functions.toDegrees","pyspark.sql.functions.toRadians","pyspark.sql.functions.to_csv","pyspark.sql.functions.to_date","pyspark.sql.functions.to_json","pyspark.sql.functions.to_timestamp","pyspark.sql.functions.to_utc_timestamp","pyspark.sql.functions.transform","pyspark.sql.functions.transform_keys","pyspark.sql.functions.transform_values","pyspark.sql.functions.translate","pyspark.sql.functions.trim","pyspark.sql.functions.trunc","pyspark.sql.functions.udf","pyspark.sql.functions.unbase64","pyspark.sql.functions.unhex","pyspark.sql.functions.unix_timestamp","pyspark.sql.functions.upper","pyspark.sql.functions.var_pop","pyspark.sql.functions.var_samp","pyspark.sql.functions.variance","pyspark.sql.functions.weekofyear","pyspark.sql.functions.when","pyspark.sql.functions.window","pyspark.sql.functions.xxhash64","pyspark.sql.functions.year","pyspark.sql.functions.years","pyspark.sql.functions.zip_with","pyspark.sql.streaming.DataStreamReader","pyspark.sql.streaming.DataStreamReader.csv","pyspark.sql.streaming.DataStreamReader.format","pyspark.sql.streaming.DataStreamReader.json","pyspark.sql.streaming.DataStreamReader.load","pyspark.sql.streaming.DataStreamReader.option","pyspark.sql.streaming.DataStreamReader.options","pyspark.sql.streaming.DataStreamReader.orc","pyspark.sql.streaming.DataStreamReader.parquet","pyspark.sql.streaming.DataStreamReader.schema","pyspark.sql.streaming.DataStreamReader.text","pyspark.sql.streaming.DataStreamWriter","pyspark.sql.streaming.DataStreamWriter.foreach","pyspark.sql.streaming.DataStreamWriter.foreachBatch","pyspark.sql.streaming.DataStreamWriter.format","pyspark.sql.streaming.DataStreamWriter.option","pyspark.sql.streaming.DataStreamWriter.options","pyspark.sql.streaming.DataStreamWriter.outputMode","pyspark.sql.streaming.DataStreamWriter.partitionBy","pyspark.sql.streaming.DataStreamWriter.queryName","pyspark.sql.streaming.DataStreamWriter.start","pyspark.sql.streaming.DataStreamWriter.trigger","pyspark.sql.streaming.ForeachBatchFunction","pyspark.sql.streaming.StreamingQuery","pyspark.sql.streaming.StreamingQuery.awaitTermination","pyspark.sql.streaming.StreamingQuery.exception","pyspark.sql.streaming.StreamingQuery.explain","pyspark.sql.streaming.StreamingQuery.id","pyspark.sql.streaming.StreamingQuery.isActive","pyspark.sql.streaming.StreamingQuery.lastProgress","pyspark.sql.streaming.StreamingQuery.name","pyspark.sql.streaming.StreamingQuery.processAllAvailable","pyspark.sql.streaming.StreamingQuery.recentProgress","pyspark.sql.streaming.StreamingQuery.runId","pyspark.sql.streaming.StreamingQuery.status","pyspark.sql.streaming.StreamingQuery.stop","pyspark.sql.streaming.StreamingQueryException","pyspark.sql.streaming.StreamingQueryManager","pyspark.sql.streaming.StreamingQueryManager.active","pyspark.sql.streaming.StreamingQueryManager.awaitAnyTermination","pyspark.sql.streaming.StreamingQueryManager.get","pyspark.sql.streaming.StreamingQueryManager.resetTerminated","ArrayType","BinaryType","BooleanType","ByteType","DataType","DateType","DecimalType","DoubleType","FloatType","IntegerType","LongType","MapType","NullType","ShortType","StringType","StructField","StructType","TimestampType","pyspark.streaming.DStream","pyspark.streaming.DStream.cache","pyspark.streaming.DStream.checkpoint","pyspark.streaming.DStream.cogroup","pyspark.streaming.DStream.combineByKey","pyspark.streaming.DStream.context","pyspark.streaming.DStream.count","pyspark.streaming.DStream.countByValue","pyspark.streaming.DStream.countByValueAndWindow","pyspark.streaming.DStream.countByWindow","pyspark.streaming.DStream.filter","pyspark.streaming.DStream.flatMap","pyspark.streaming.DStream.flatMapValues","pyspark.streaming.DStream.foreachRDD","pyspark.streaming.DStream.fullOuterJoin","pyspark.streaming.DStream.glom","pyspark.streaming.DStream.groupByKey","pyspark.streaming.DStream.groupByKeyAndWindow","pyspark.streaming.DStream.join","pyspark.streaming.DStream.leftOuterJoin","pyspark.streaming.DStream.map","pyspark.streaming.DStream.mapPartitions","pyspark.streaming.DStream.mapPartitionsWithIndex","pyspark.streaming.DStream.mapValues","pyspark.streaming.DStream.partitionBy","pyspark.streaming.DStream.persist","pyspark.streaming.DStream.pprint","pyspark.streaming.DStream.reduce","pyspark.streaming.DStream.reduceByKey","pyspark.streaming.DStream.reduceByKeyAndWindow","pyspark.streaming.DStream.reduceByWindow","pyspark.streaming.DStream.repartition","pyspark.streaming.DStream.rightOuterJoin","pyspark.streaming.DStream.saveAsTextFiles","pyspark.streaming.DStream.slice","pyspark.streaming.DStream.transform","pyspark.streaming.DStream.transformWith","pyspark.streaming.DStream.union","pyspark.streaming.DStream.updateStateByKey","pyspark.streaming.DStream.window","pyspark.streaming.StreamingContext","pyspark.streaming.StreamingContext.addStreamingListener","pyspark.streaming.StreamingContext.awaitTermination","pyspark.streaming.StreamingContext.awaitTerminationOrTimeout","pyspark.streaming.StreamingContext.binaryRecordsStream","pyspark.streaming.StreamingContext.checkpoint","pyspark.streaming.StreamingContext.getActive","pyspark.streaming.StreamingContext.getActiveOrCreate","pyspark.streaming.StreamingContext.getOrCreate","pyspark.streaming.StreamingContext.queueStream","pyspark.streaming.StreamingContext.remember","pyspark.streaming.StreamingContext.socketTextStream","pyspark.streaming.StreamingContext.sparkContext","pyspark.streaming.StreamingContext.start","pyspark.streaming.StreamingContext.stop","pyspark.streaming.StreamingContext.textFileStream","pyspark.streaming.StreamingContext.transform","pyspark.streaming.StreamingContext.union","pyspark.streaming.kinesis.InitialPositionInStream.LATEST","pyspark.streaming.kinesis.InitialPositionInStream.TRIM_HORIZON","pyspark.streaming.kinesis.KinesisUtils.createStream","API Reference","Spark Core","MLlib (DataFrame-based)","MLlib (RDD-based)","Resource Management","Spark SQL","Structured Streaming","Spark Streaming","Apache Arrow in PySpark","User Guide","Python Package Management"],titleterms:{"class":[1068,1071,1072,1073,1074],"function":[7,346,347,712,713,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,1069,1072,1075],"public":1068,ALS:[361,463],IDEs:3,Using:[6,1077],_imageschema:349,abov:13,abs:715,access:7,accumul:[16,17,18,164,1068],accumulatorparam:[19,20,21],aco:716,acosh:717,action:[4,1074],activ:984,add:17,add_month:718,addfil:165,addinplac:20,addpyfil:166,addstreaminglisten:1047,aftsurvivalregress:363,aftsurvivalregressionmodel:364,agg:[536,664],aggreg:[43,719],aggregatebykei:44,alia:[504,537],allgath:23,alsmodel:362,apach:1075,api:[1067,1068,1069,1072,1075],appli:[7,665],applicationid:167,applyinpanda:[666,676],appnam:680,approx_count_distinct:721,approxcountdistinct:720,approxquantil:[538,641],arrai:722,array_contain:723,array_distinct:724,array_except:725,array_intersect:726,array_join:727,array_max:728,array_min:729,array_posit:730,array_remov:731,array_repeat:732,array_sort:733,array_to_vector:346,array_union:734,arrays_overlap:735,arrays_zip:736,arraytyp:988,arrow:1075,asc:[505,737],asc_nulls_first:[506,738],asc_nulls_last:[507,739],ascii:740,asdict:678,asin:741,asinh:742,assert_tru:743,astyp:508,atan2:745,atan:744,atanh:746,attemptnumb:[24,220],avg:[667,747],avro:[712,713],awaitanytermin:985,awaittermin:[970,1048],awaitterminationortimeout:1049,barrier:[25,45],barriertaskcontext:[22,23,24,25,26,27,28,29,30,31,32],barriertaskinfo:33,base64:748,base:[1069,1070],basereadwrit:394,batch:1075,between:509,bin:749,binar:288,binaryclassificationevalu:281,binaryclassificationmetr:426,binaryfil:168,binarylogisticregressionsummari:235,binarylogisticregressiontrainingsummari:236,binaryrandomforestclassificationsummari:237,binaryrandomforestclassificationtrainingsummari:238,binaryrecord:169,binaryrecordsstream:1050,binarytyp:989,bisectingkmean:[267,414],bisectingkmeansmodel:[268,415],bisectingkmeanssummari:269,bitwiseand:510,bitwisenot:750,bitwiseor:511,bitwisexor:512,blockmatrix:454,booleantyp:990,broadcast:[34,35,36,37,38,39,40,170,751,1068],bround:752,bucket:[291,753],bucketbi:647,bucketedrandomprojectionlsh:289,bucketedrandomprojectionlshmodel:290,builder:[680,681,682,683,684],bytetyp:991,cach:[46,539,1007],cancelalljob:171,canceljobgroup:172,cartesian:47,cast:513,catalog:685,cbrt:754,ceil:755,chang:0,check:1,checkpoint:[48,540,1008,1051],chisqselector:[292,430],chisqselectormodel:[293,431],chisqtestresult:478,chisquaretest:383,classif:[1069,1070],cluster:[1069,1070],clusteringevalu:282,coalesc:[49,541,756],code:0,cogroup:[50,668,1009],col:757,collect:[51,543],collect_list:758,collect_set:759,collectasmap:52,collectwithjobgroup:53,colregex:542,column:[503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,544,760,1072],combinebykei:[54,1010],compat:1075,concat:761,concat_w:762,conda:[6,1077],conf:[686,714],config:681,configur:1072,contain:[151,514],context:[55,1011,1068],contribut:0,conv:763,convers:1075,coordinatematrix:455,core:[1068,1071,1072,1073,1074],corr:[545,642,764],correl:384,cos:765,cosh:766,count:[56,546,669,767,1012],countapprox:57,countapproxdistinct:58,countbykei:59,countbyvalu:[60,1013],countbyvalueandwindow:1014,countbywindow:1015,countdistinct:768,countvector:294,countvectorizermodel:295,cov:[547,643],covar_pop:769,covar_samp:770,crc32:771,create_map:772,createdatafram:687,createglobaltempview:548,createorreplaceglobaltempview:549,createorreplacetempview:550,createstream:1066,createtempview:551,creation:7,crossjoin:552,crosstab:[553,644],crossvalid:389,crossvalidatormodel:390,csv:[7,629,648,947],cube:554,cume_dist:773,current_d:774,current_timestamp:775,currentrow:701,dai:784,data:[7,1072],datafram:[7,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,1069,1072],dataframenafunct:[625,626,627,628],dataframeread:[629,630,631,632,633,634,635,636,637,638,639],dataframestatfunct:[640,641,642,643,644,645,646],dataframewrit:[647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662],datastreamread:[946,947,948,949,950,951,952,953,954,955,956],datastreamwrit:[957,958,959,960,961,962,963,964,965,966,967],datatyp:992,date_add:776,date_format:777,date_sub:778,date_trunc:779,datediff:780,datetyp:993,dayofmonth:781,dayofweek:782,dayofyear:783,dct:296,debug:1,decimaltyp:994,decisiontre:484,decisiontreeclassifi:240,decisiontreeclassificationmodel:239,decisiontreemodel:485,decisiontreeregressionmodel:365,decisiontreeregressor:366,decod:785,defaultminpartit:173,defaultparallel:174,defaultparamsread:[395,396],defaultparamswrit:[397,398],degre:786,dense_rank:787,densematrix:[350,445],densevector:[351,446],depend:6,desc:[515,788],desc_nulls_first:[516,789],desc_nulls_last:[517,790],describ:555,destroi:35,develop:2,disk_onli:211,disk_only_2:212,disk_only_3:213,distinct:[61,556],distribut:1070,distributedldamodel:270,distributedmatrix:456,docstr:0,document:[0,8],doubletyp:995,download:6,driver:1,drop:[557,626],drop_dupl:559,dropdupl:558,dropfield:518,dropna:560,dstream:[1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045],dtype:561,dump:36,dump_profil:175,element_at:791,elementwiseproduct:[297,432],emptyrdd:176,enabl:1075,enablehivesupport:682,encod:792,endswith:519,ensur:1075,eqnullsaf:520,estim:227,evalu:[283,1069,1070],except:971,exceptal:562,executor:1,executorresourcerequest:[496,497],exist:793,exp:794,explain:[563,972],explod:795,explode_out:796,expm1:797,expr:798,factori:799,featur:[1069,1070,1077],featurehash:298,fill:627,fillna:564,filter:[62,565,800,1016],first:[63,566,801],flatmap:[64,1017],flatmapvalu:[65,1018],flatten:802,floattyp:996,floor:803,fmclassifi:244,fmclassificationmodel:241,fmclassificationsummari:242,fmclassificationtrainingsummari:243,fmregressionmodel:367,fmregressor:368,fold:66,foldbykei:67,foral:804,foreach:[68,567,958],foreachbatch:959,foreachbatchfunct:968,foreachpartit:[69,568],foreachrdd:1019,format:[630,649,948,960],format_numb:805,format_str:806,fpgrowth:[343,441],fpgrowthmodel:[344,442],freqitem:[569,645],frequenc:[1069,1070],from:[6,10,11,12,13,14,15,1075],from_avro:712,from_csv:807,from_json:808,from_unixtim:809,from_utc_timestamp:810,fullouterjoin:[70,1020],gaussianmixtur:[271,416],gaussianmixturemodel:[272,417],gaussianmixturesummari:273,gbtclassifi:246,gbtclassificationmodel:245,gbtregressionmodel:369,gbtregressor:370,generalizedlinearregress:371,generalizedlinearregressionmodel:372,generalizedlinearregressionsummari:373,generalizedlinearregressiontrainingsummari:374,generalmlwrit:399,get:[5,7,26,152,208,221,986],get_json_object:811,getact:1052,getactiveorcr:1053,getactivesess:688,getal:153,getcheckpointdir:177,getcheckpointfil:71,getconf:178,getfield:521,getitem:522,getlocalproperti:[27,179,222],getnumpartit:72,getorcr:[180,683,1054],getresourceprofil:73,getrootdirectori:209,getstoragelevel:74,gettaskinfo:28,github:4,glom:[75,1021],gradientboostedtre:486,gradientboostedtreesmodel:487,greatest:812,group:[7,813,1072,1075],groupbi:[76,570],groupbykei:[77,1022],groupbykeyandwindow:1023,groupeddata:[663,664,665,666,667,668,669,670,671,672,673,674],grouping_id:814,groupwith:78,guid:[0,9,1076],hadoopfil:181,hadooprdd:182,hash:815,hashingtf:[299,433],hastrainingsummari:400,head:571,hex:816,hint:[0,572],histogram:79,hot:1,hour:[817,818],hypot:819,identifi:[1,401],idf:[300,434],idfmodel:[301,435],imag:1069,imageschema:348,imput:302,imputermodel:303,indexedrow:457,indexedrowmatrix:458,indextostr:304,individu:4,inheritablethread:41,initcap:820,initialpositioninstream:[1064,1065],input:[1072,1073,1074],input_file_nam:821,inputfil:573,insertinto:650,instal:[6,1075],instr:822,integertyp:997,interact:305,intersect:[81,574],intersectal:575,isact:974,ischeckpoint:82,isempti:83,isin:525,isloc:576,islocallycheckpoint:84,isnan:823,isnotnul:523,isnul:[524,824],isotonicregress:[375,466],isotonicregressionmodel:[376,467],isstream:577,iter:1075,javaload:490,javasav:491,jdbc:[631,651],join:[85,578,1024],json:[632,652,949],json_tupl:825,kei:87,kerneldens:479,keybi:86,kinesi:[1064,1065,1066,1074],kinesisutil:1066,kmean:[274,418],kmeansmodel:[275,419],kmeanssummari:276,kolmogorovsmirnovtest:385,kolmogorovsmirnovtestresult:480,kurtosi:826,labeledpoint:468,lag:827,lassomodel:469,lassowithsgd:470,last:828,last_dai:829,lastprogress:975,latest:1064,lda:[277,420],ldamodel:[278,421],lead:830,least:831,leftouterjoin:[88,1025],length:832,levenshtein:833,like:526,limit:579,lineardatagener:492,linearmodel:471,linearregress:377,linearregressionmodel:[378,472],linearregressionsummari:379,linearregressiontrainingsummari:380,linearregressionwithsgd:473,linearsvc:247,linearsvcmodel:248,linearsvcsummari:249,linearsvctrainingsummari:250,lit:834,load:[37,633,950],load_from_path:38,loader:493,localcheckpoint:[89,580],localldamodel:279,locat:835,log10:837,log1p:838,log2:839,log:836,logisticregress:251,logisticregressionmodel:[252,406],logisticregressionsummari:253,logisticregressiontrainingsummari:254,logisticregressionwithlbfg:407,logisticregressionwithsgd:408,longtyp:998,lookup:90,loop:1,lower:840,lpad:841,ltrim:842,maintain:0,manag:[1068,1071,1073,1074,1077],manual:6,map:[91,1026,1075],map_concat:843,map_entri:844,map_filt:845,map_from_arrai:846,map_from_entri:847,map_kei:848,map_valu:849,map_zip_with:850,mapinpanda:581,mappartit:[92,148,1027],mappartitionswithindex:[93,149,1028],mappartitionswithsplit:94,maptyp:999,mapvalu:[95,1029],master:684,matric:[352,447],matrix:[353,448,1069,1070],matrixentri:459,matrixfactorizationmodel:464,max:[96,670,851],maxabsscal:306,maxabsscalermodel:307,md5:852,mean:[97,671,853],meanapprox:98,memori:1,memory_and_disk:214,memory_and_disk_2:215,memory_onli:216,memory_only_2:217,migrat:9,min:[99,672,854],mine:[1069,1070],minhashlsh:308,minhashlshmodel:309,minmaxscal:310,minmaxscalermodel:311,minut:855,mllib:[1069,1070],mlreadabl:402,mlreader:403,mlutil:494,mlwritabl:404,mlwriter:405,mode:653,model:228,monotonically_increasing_id:856,month:[857,858],months_between:859,multiclassclassificationevalu:284,multiclassmetr:427,multilabelclassificationevalu:285,multilayerperceptronclassifi:258,multilayerperceptronclassificationmodel:255,multilayerperceptronclassificationsummari:256,multilayerperceptronclassificationtrainingsummari:257,multipl:1075,multivariategaussian:[386,481],multivariatestatisticalsummari:482,naivebay:[259,409],naivebayesmodel:[260,410],name:[100,527,976],nanvl:860,nativ:1077,newapihadoopfil:183,newapihadooprdd:184,newsess:689,next_dai:861,ngram:312,normal:[313,436],note:1075,nth_valu:862,ntile:863,nulltyp:1000,off_heap:218,onehotencod:314,onehotencodermodel:315,onevsrest:261,onevsrestmodel:262,option:[634,635,654,655,951,952,961,962],orc:[7,636,656,953],orderbi:[583,702,708],otherwis:528,out:7,output:[1072,1073,1074],outputmod:963,over:529,overlai:864,packag:1077,package_extens:163,panda:1075,pandas_udf:865,pandascogroupedop:[675,676],parallel:185,param:[358,359],paramet:1069,paramgridbuild:391,parquet:[7,637,657,954],partitionbi:[101,658,703,709,964,1030],partitionid:[29,223],pattern:[1069,1070],pca:316,pcamodel:317,percent_rank:866,percentile_approx:867,persist:[102,584,1031],pex:1077,picklefil:186,pipe:103,pipelin:[229,1069],pipelinemodel:230,pivot:673,polynomialexpans:318,posexplod:868,posexplode_out:869,pow:870,poweriterationclust:[280,422],poweriterationclusteringmodel:423,pprint:1032,predictionmodel:231,predictor:232,prefixspan:[345,443],prefixspanmodel:444,prepar:0,printschema:585,processallavail:977,profession:1,profil:1,pyarrow:1075,pycharm:[1,3],pypi:6,pyspark:[0,1,4,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,346,347,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1075,1077],python:[1,6,1077],qrdecomposit:449,quantilediscret:319,quarter:871,queri:1073,querynam:965,queuestream:1055,quickstart:7,radian:872,raise_error:873,rand:874,randn:875,random:1070,randomforest:488,randomforestclassifi:266,randomforestclassificationmodel:263,randomforestclassificationsummari:264,randomforestclassificationtrainingsummari:265,randomforestmodel:489,randomforestregressionmodel:381,randomforestregressor:382,randomrdd:462,randomsplit:[104,586],rang:[187,690],rangebetween:[704,710],rank:876,rankingevalu:286,rankingmetr:428,rate:465,rdd:[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,587,1068,1070],rddbarrier:[147,148,149],read:691,readstream:692,recentprogress:978,recommend:[1069,1070,1075],reduc:[105,1033],reducebykei:[106,1034],reducebykeyandwindow:1035,reducebykeyloc:107,reducebywindow:1036,refer:1067,regexp_extract:877,regexp_replac:878,regextoken:322,registertempt:588,regress:[1069,1070],regressionevalu:287,regressionmetr:429,releas:0,rememb:1056,remot:1,repartit:[108,589,1037],repartitionandsortwithinpartit:109,repartitionbyrang:590,repeat:879,replac:[591,628],represent:1070,resettermin:987,resourc:[1,30,188,224,496,497,498,499,500,501,502,1071],resourceinform:498,resourceprofil:499,resourceprofilebuild:500,revers:880,rformula:320,rformulamodel:321,ridgeregressionmodel:474,ridgeregressionwithsgd:475,rightouterjoin:[110,1038],rint:881,rlike:530,robustscal:323,robustscalermodel:324,rollup:592,round:882,row:[677,678,1072],row_numb:883,rowmatrix:460,rowsbetween:[705,711],rpad:884,rtrim:885,run:4,runid:979,runjob:189,runtimeconfig:714,samesemant:593,sampl:[111,594],samplebi:[595,646],samplebykei:112,samplestdev:113,samplevari:114,save:659,saveabl:495,saveashadoopdataset:115,saveashadoopfil:116,saveasnewapihadoopdataset:117,saveasnewapihadoopfil:118,saveaspicklefil:119,saveassequencefil:120,saveast:660,saveastextfil:[121,1039],scalar:1075,schema:[596,638,955],schema_of_csv:886,schema_of_json:887,second:888,select:[7,597],selectexpr:598,semant:1075,semantichash:599,sequenc:889,sequencefil:190,seri:1075,session:1072,set:[3,154,1075],setal:155,setappnam:156,setcheckpointdir:191,setexecutorenv:157,setifmiss:158,setjobdescript:192,setjobgroup:193,setlocalproperti:194,setloglevel:195,setmast:159,setnam:122,setsparkhom:160,setsystemproperti:196,sha1:890,sha2:891,shiftleft:892,shiftright:893,shiftrightunsign:894,shorttyp:1001,show:600,show_profil:197,shuffl:895,side:1,signum:896,sin:897,singularvaluedecomposit:461,sinh:898,size:[899,1075],skew:900,slice:[901,1040],sockettextstream:1057,sort:601,sort_arrai:902,sortbi:[123,661],sortbykei:124,sortwithinpartit:602,soundex:903,sourc:6,spark:[1068,1072,1074,1075],spark_partition_id:904,sparkconf:[150,151,152,153,154,155,156,157,158,159,160,161],sparkcontext:[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,693,1058],sparkfil:[207,208,209],sparksess:[679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699],sparkus:198,sparsematrix:[354,450],sparsevector:[355,451],split:905,sql:[7,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,1072,1075],sqltransform:325,sqrt:906,stageid:[31,225],standardscal:[326,437],standardscalermodel:[327,438],start:[5,966,1059],startswith:531,starttim:199,stat:[125,603],statist:[483,1069,1070],statu:980,statustrack:200,stddev:907,stddev_pop:908,stddev_samp:909,stdev:126,stop:[201,695,981,1060],stopwordsremov:328,storagelevel:[210,211,212,213,214,215,216,217,218,604],stream:[696,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1073,1074],streamingcontext:[1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063],streamingkmean:424,streamingkmeansmodel:425,streaminglinearalgorithm:476,streaminglinearregressionwithsgd:477,streaminglogisticregressionwithsgd:413,streamingqueri:[969,970,971,972,973,974,975,976,977,978,979,980,981],streamingqueryexcept:982,streamingquerymanag:[983,984,985,986,987],stringindex:329,stringindexermodel:330,stringtyp:1002,struct:910,structfield:1003,structtyp:1004,structur:1073,substr:[532,911],substring_index:912,subtract:[127,605],subtractbykei:128,sum:[129,674,913],sumapprox:130,sumdistinct:914,summar:387,summari:606,summarybuild:388,support:[6,1075],svmmodel:411,svmwithsgd:412,tabl:[639,697],tail:607,take:[131,608],takeord:132,takesampl:133,tan:915,tanh:916,taskattemptid:[32,226],taskcontext:[219,220,221,222,223,224,225,226],taskresourcerequest:[501,502],test:[0,4],text:[662,956],textfil:202,textfilestream:1061,time:1075,timestamp:1075,timestamp_second:917,timestamptyp:1005,to_avro:713,to_csv:920,to_dat:921,to_json:922,to_timestamp:923,to_utc_timestamp:924,todebugstr:[134,161],todegre:918,todf:609,tojson:610,token:331,tolocaliter:[135,611],top:[1,136],topanda:612,toradian:919,trainvalidationsplit:392,trainvalidationsplitmodel:393,transform:[233,613,925,1041,1062,1074],transform_kei:926,transform_valu:927,transformwith:1042,translat:928,tree:1070,treeaggreg:137,treereduc:138,trigger:967,trim:929,trim_horizon:1065,trunc:930,tune:1069,type:[0,1072,1075],typeconvert:360,udf:[698,931,1075],uiweburl:203,unarytransform:234,unbase64:932,unboundedfollow:706,unboundedpreced:707,unhex:933,union:[139,204,614,1043,1063],unional:615,unionbynam:616,univariatefeatureselector:332,univariatefeatureselectormodel:333,unix_timestamp:934,unpersist:[39,140,617],updatestatebykei:1044,upgrad:[10,11,12,13,14,15],upper:935,usag:[1,1075],user:1076,using:4,util:[1069,1070],valu:[18,40,141],var_pop:936,var_samp:937,varianc:[142,938],variancethresholdselector:334,variancethresholdselectormodel:335,vector:[356,357,452,453,1069,1070,1075],vector_to_arrai:347,vectorassembl:336,vectorindex:337,vectorindexermodel:338,vectorsizehint:339,vectorslic:340,version:[6,205,699,1075],view:7,virtualenv:1077,weekofyear:939,when:[533,940],where:618,wholetextfil:206,window:[700,701,702,703,704,705,706,707,941,1045,1072],windowspec:[708,709,710,711],withcolumn:619,withcolumnrenam:620,withfield:534,withresourc:143,withwatermark:621,word2vec:[341,439],word2vecmodel:[342,440],work:7,write:622,writestream:623,writeto:624,xxhash64:942,year:[943,944],zero:21,zip:144,zip_with:945,zipwithindex:145,zipwithuniqueid:146,zone:1075}})